<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao">
    <sql id="sqlPkConditions">
                WHERE MSHIP_COUPN_BAS_NO=       #{mshipCoupnBasNo}
    </sql>
    <sql id="sqlCols">
                      MSHIP_COUPN_BAS_NO                    /*멤버십쿠폰기본번호        */
                    , COUPN_KND_CD                    /*쿠폰종류코드        */
                    , COUPN_TGT_CD                    /*쿠폰대상코드        */
                    , COUPN_APPLY_DIV_CD1                    /*쿠폰적용구분코드1        */
                    , COUPN_APPLY_DIV_CD2                    /*쿠폰적용구분코드2        */
                    , FROM_PBLS_STD_DAY                    /*FROM발행기준일        */
                    , TO_PBLS_STD_DAY                    /*TO발행기준일        */
                    , USE_STD_DAY_COND_CD                    /*사용기준일조건코드        */
                    , FROM_USE_STD_DAY                    /*FROM사용기준일        */
                    , TO_USE_STD_DAY                    /*TO사용기준일        */
                    , GIFT_POSS_YN                    /*선물가능여부        */
                    , COUPN_ISSUE_METH_CD                    /*쿠폰발급방법코드        */
                    , ISSUE_RSTRTN_CNT                    /*발급제한수        */
                    , MAX_ISSUE_CNT                    /*최대발급수        */
                    , MAX_USE_CNT                    /*최대사용수        */
                    , APPLY_AMT                    /*적용금액        */
                    , APPLY_RATE                    /*적용율        */
                    , APPLY_POINT                    /*적용율        */
                    , MIN_BUY_AMT                    /*최소구매금액        */
                    , MAX_DC_AMT                    /*최대할인율         */
                    , APPLY_CNT                    /*적용수        */
                    , PRSNTTN_GODS_CD                    /*증정제품코드        */
                    , USE_DOW                    /*사용요일        */
                    , FROM_USE_HOUR                    /*FROM사용시간        */
                    , TO_USE_HOUR                    /*TO사용시간        */
                    , USE_CHL_CD                    /*사용채널코드        */
                    , DUP_USE_YN                    /*중복사용여부        */
                    , USE_DIV_CD                    /*사용구분코드        */
                    , USE_YN                    /*사용여부        */
                    , COUPN_BAS_NM                    /*쿠폰기본명        */
                    , COUPN_BAS_CTNTS                    /*쿠폰기본내용        */
                    , AMDR_ID                    /*수정자ID        */
                    , AMD_DT                    /*수정일시        */
                    , REGR_ID                    /*등록자ID        */
                    , REG_DT                    /*등록일시        */
                    , REG_CHL_CD                    /*등록채널코드        공통코드 : S000        [CRM : CRM , CTC : 상담 , AS : AS , SAP : SAP]*/
                    , ADMT_METH_CD                    /*정산방법코드        */
                    , ADMT_AMT                    /*정산금액        */
                    , COUPN_TYPE_CD                    /*쿠폰유형        */
                    , COUPN_USE_POSS_DAY                    /*쿠폰사용가능일        */
                    , COUPN_USE_POSS_YN                    /*쿠폰사용가능여부        */
                    , COUPN_USE_POSS_DAY_CNT                    /*쿠폰사용가능일수        */
                    , COUPN_CLASS_CD                    /*쿠폰분류코드        */
                   
                    , DOW_1_USE_YN                    /*요일1사용여부        */
                    , DOW_2_USE_YN                    /*요일2사용여부        */
                    , DOW_3_USE_YN                    /*요일3사용여부        */
                    , DOW_4_USE_YN                    /*요일4사용여부        */
                    , DOW_5_USE_YN                    /*요일5사용여부        */
                    , DOW_6_USE_YN                    /*요일6사용여부        */
                    , DOW_7_USE_YN                    /*요일7사용여부        */
                    , MSHP_GRADE_CD                    /*회원등급코드        */
                    , MSHIP_GRADE_CD
                    , CPRT_CMP_NO
                    , APPLY_MSHP_GRADE_CTNTS
                    , MSHIP_TYPE_CDS
                    , COUPN_RMARK
    </sql>
    <sql id="sqlSelectCols">
                      A.MSHIP_COUPN_BAS_NO                    /*멤버십쿠폰기본번호        */
                    , A.COUPN_KND_CD                    /*쿠폰종류코드        */
                    , A.COUPN_TGT_CD                    /*쿠폰대상코드        */
                    , A.COUPN_APPLY_DIV_CD1                    /*쿠폰적용구분코드1        */
                    , A.COUPN_APPLY_DIV_CD2                    /*쿠폰적용구분코드2        */
                   ,  TO_CHAR(TO_DATE( A.FROM_PBLS_STD_DAY, 'YYYYMMDD'),'YYYYMMDD') FROM_PBLS_STD_DAY
                    ,  TO_CHAR(TO_DATE(A.TO_PBLS_STD_DAY, 'YYYYMMDD'),'YYYYMMDD') TO_PBLS_STD_DAY
                    , A.USE_STD_DAY_COND_CD                    /*사용기준일조건코드        */
                    ,  TO_CHAR(TO_DATE(A.FROM_USE_STD_DAY, 'YYYYMMDD'),'YYYYMMDD') FROM_USE_STD_DAY
                    ,  TO_CHAR(TO_DATE(A.TO_USE_STD_DAY, 'YYYYMMDD'),'YYYYMMDD') TO_USE_STD_DAY
                    , A.GIFT_POSS_YN                    /*선물가능여부        */
                    , A.COUPN_ISSUE_METH_CD                    /*쿠폰발급방법코드        */
                    , A.ISSUE_RSTRTN_CNT                    /*발급제한수        */
                    , A.MAX_ISSUE_CNT                    /*최대발급수        */
                    , A.MAX_USE_CNT                    /*최대사용수        */
                    , A.APPLY_AMT                    /*적용금액        */
                    , A.APPLY_RATE                    /*적용율        */
                    , A.APPLY_POINT                    /*적용율        */
                    , A.MIN_BUY_AMT                    /*최소구매금액        */
                    , A.MAX_DC_AMT                    /*최대할인율        */
                    , A.APPLY_CNT                    /*적용수        */
                    , A.PRSNTTN_GODS_CD                    /*증정제품코드        */
                    , A.USE_DOW                    /*사용요일        */
                    , A.FROM_USE_HOUR                    /*FROM사용시간        */
                    , A.TO_USE_HOUR                    /*TO사용시간        */
                    
                    
                    , SUBSTR( A.FROM_USE_HOUR, 0, 2) FROM_USE_HOUR1                    /*FROM사용시간        */
                    , SUBSTR( A.FROM_USE_HOUR, 3, 4) FROM_USE_HOUR2                    /*FROM사용시간        */
                    , SUBSTR( A.TO_USE_HOUR , 0, 2) TO_USE_HOUR1                     /*TO사용시간        */
                    , SUBSTR( A.TO_USE_HOUR , 3, 4) TO_USE_HOUR2                     /*TO사용시간        */
                    
                    
                    , A.USE_CHL_CD                    /*사용채널코드        */
                    , A.DUP_USE_YN                    /*중복사용여부        */
                    , A.USE_DIV_CD                    /*사용구분코드        */
                    , A.USE_YN                    /*사용여부        */
                    , A.COUPN_BAS_NM                    /*쿠폰기본명        */
                    , A.COUPN_BAS_CTNTS                    /*쿠폰기본내용        */
                    , A.AMDR_ID                    /*수정자ID        */
                    , TO_CHAR(A.AMD_DT,'YYYY-MM-DD')    AMD_DT                    /*수정일시        */
                    , A.REGR_ID                    /*등록자ID        */
                    , TO_CHAR(A.REG_DT,'YYYY-MM-DD')    REG_DT                    /*등록일시        */
                    , A.REG_CHL_CD                    /*등록채널코드        공통코드 : S000        [CRM : CRM , CTC : 상담 , AS : AS , SAP : SAP]*/
                    , A.ADMT_METH_CD                    /*정산방법코드        */
                    , A.ADMT_AMT                    /*정산금액        */
                    , A.COUPN_TYPE_CD                    /*쿠폰유형        */
                    , A.COUPN_USE_POSS_DAY                    /*쿠폰사용가능일        */
                    , A.COUPN_USE_POSS_YN                    /*쿠폰사용가능여부        */
                    , A.COUPN_USE_POSS_DAY_CNT                    /*쿠폰사용가능일수        */
                    , A.COUPN_CLASS_CD                    /*쿠폰분류코드        */
                    
                    , A.DOW_1_USE_YN                    /*요일1사용여부        */
                    , A.DOW_2_USE_YN                    /*요일2사용여부        */
                    , A.DOW_3_USE_YN                    /*요일3사용여부        */
                    , A.DOW_4_USE_YN                    /*요일4사용여부        */
                    , A.DOW_5_USE_YN                    /*요일5사용여부        */
                    , A.DOW_6_USE_YN                    /*요일6사용여부        */
                    , A.DOW_7_USE_YN                    /*요일7사용여부        */
                    , A.MSHP_GRADE_CD                    /*회원등급코드        */
                    
                     , A.MSHIP_GRADE_CD
                     , A.CPRT_CMP_NO
                    , A.APPLY_MSHP_GRADE_CTNTS
                    , A.MSHIP_TYPE_CDS
                    , A.COUPN_RMARK
                    
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB130' and B.COMN_CD = A.COUPN_KND_CD ) coupnKndCdNm    /* 쿠폰종류코드명 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB100' and B.COMN_CD = A.COUPN_TGT_CD ) coupnTgtCdNm    /* 쿠폰대상코드명 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB150' and B.COMN_CD = A.DUP_USE_YN ) dupUseYnNm    /* 중복사용여부 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'S010' and B.COMN_CD = A.USE_YN ) useYnNm    /* 사용여부 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB020' and B.COMN_CD = A.MSHP_GRADE_CD ) mshpGradeCdNm    /* 회원등급코드명 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB010' and B.COMN_CD = A.MSHIP_GRADE_CD ) mshipGradeCdNm    /* 맴버십등급코드명 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB120' and B.COMN_CD = A.COUPN_APPLY_DIV_CD1 ) coupnApplyDivCd1Nm    /* 쿠폰분류코드 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB140' and B.COMN_CD = A.ADMT_METH_CD ) admtMethCdNm    /* 정산방법 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB080' and B.COMN_CD = A.COUPN_TYPE_CD ) coupnTypeCdNm    /* 정산방법 */
                    , (SELECT GODS_NM FROM CRM_GODS_BAS B WHERE B.GODS_NO = A.PRSNTTN_GODS_CD ) godsNm    /* 증정제품명 */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS B WHERE B.TOP_COMN_CD = 'MB120' and B.COMN_CD = A.COUPN_CLASS_CD ) coupnClassCdNm    /* 쿠폰종류 */ 
                    , (SELECT CPRT_CMP_NM FROM CRM_CRPT_CMP_BAS B WHERE B.CPRT_CMP_NO = A.CPRT_CMP_NO ) cprtCmpNoNm    /* 제휴사명        */
    </sql>
    <sql id="sqlConditions">
        <if test="mshipCoupnBasNo != null and mshipCoupnBasNo != ''">
                  AND A.MSHIP_COUPN_BAS_NO=       #{mshipCoupnBasNo}
        </if>
        <if test="coupnKndCd != null and coupnKndCd != ''">
            <choose>
                <when test="coupnKndCd instanceof String">
                    AND A.COUPN_KND_CD    =       #{coupnKndCd}
                </when>
                <otherwise>
                    AND A.COUPN_KND_CD    IN
                    <foreach item="item" index="index" collection="coupnKndCd" open="(" separator="," close=")">
                       #{item}
                    </foreach> 
                </otherwise>
            </choose>
        </if>
        <if test="coupnTgtCd != null and coupnTgtCd != ''">
            <choose>
                <when test="coupnTgtCd instanceof String">
                    AND A.COUPN_TGT_CD    =       #{coupnTgtCd}
                </when>
                <otherwise>
                    AND A.COUPN_TGT_CD    IN
                    <foreach item="item" index="index" collection="coupnTgtCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="coupnApplyDivCd1 != null and coupnApplyDivCd1 != ''">
                  AND A.COUPN_APPLY_DIV_CD1=       #{coupnApplyDivCd1}
        </if>
        <if test="coupnApplyDivCd2 != null and coupnApplyDivCd2 != ''">
                  AND A.COUPN_APPLY_DIV_CD2=       #{coupnApplyDivCd2}
        </if>
        <!-- <if test="fromPblsStdDay != null and toPblsStdDay != '' ">
                 AND A.FROM_PBLS_STD_DAY BETWEEN TO_DATE(#{fromPblsStdDay}, 'YYYY-MM-DD') AND TO_DATE(#{toPblsStdDay}, 'YYYY-MM-DD') +1
       	</if> -->
        <if test="fromPblsStdDay != null and toPblsStdDay != ''">
                  <!-- AND (A.FROM_PBLS_STD_DAY<![CDATA[>=]]>       #{fromPblsStdDay} OR A.TO_PBLS_STD_DAY <![CDATA[<=]]>       #{toPblsStdDay}) -->
                  AND (A.FROM_PBLS_STD_DAY<![CDATA[>=]]> #{fromPblsStdDay} OR A.TO_PBLS_STD_DAY <![CDATA[>=]]>  #{fromPblsStdDay}) AND (A.FROM_PBLS_STD_DAY<![CDATA[<=]]> #{toPblsStdDay} OR A.TO_PBLS_STD_DAY <![CDATA[<=]]>  #{toPblsStdDay})
        </if>
        <!-- <if test="toPblsStdDay != null and toPblsStdDay != ''">
                  AND A.TO_PBLS_STD_DAY <![CDATA[<=]]>       #{toPblsStdDay}
        </if> -->
        <if test="useStdDayCondCd != null and useStdDayCondCd != ''">
            <choose>
                <when test="useStdDayCondCd instanceof String">
                    AND A.USE_STD_DAY_COND_CD=       #{useStdDayCondCd}
                </when>
                <otherwise>
                    AND A.USE_STD_DAY_COND_CDIN
                    <foreach item="item" index="index" collection="useStdDayCondCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="fromUseStdDay != null and toUseStdDay != ''">
                  AND A.FROM_USE_STD_DAY<![CDATA[>=]]>      #{fromUseStdDay} OR A.TO_USE_STD_DAY  <![CDATA[<=]]>      #{toUseStdDay}
        </if>
        <!-- <if test="toUseStdDay != null and toUseStdDay != ''">
                  AND A.TO_USE_STD_DAY  =       #{toUseStdDay}
        </if> -->
        <!-- <if test="fromUseStdDay != null and toUseStdDay != '' ">
                 AND A.FROM_USE_STD_DAY BETWEEN TO_DATE(#{fromUseStdDay}, 'YYYY-MM-DD') AND TO_DATE(#{toUseStdDay}, 'YYYY-MM-DD') +1
       	</if> -->
        <if test="giftPossYn != null and giftPossYn != ''">
                  AND A.GIFT_POSS_YN    =       #{giftPossYn}
        </if>
        <if test="coupnIssueMethCd != null and coupnIssueMethCd != ''">
            <choose>
                <when test="coupnIssueMethCd instanceof String">
                    AND A.COUPN_ISSUE_METH_CD=       #{coupnIssueMethCd}
                </when>
                <otherwise>
                    AND A.COUPN_ISSUE_METH_CDIN
                    <foreach item="item" index="index" collection="coupnIssueMethCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="issueRstrtnCnt != null and issueRstrtnCnt != ''">
                  AND A.ISSUE_RSTRTN_CNT=       #{issueRstrtnCnt}
        </if>
        <if test="maxIssueCnt != null and maxIssueCnt != ''">
                  AND A.MAX_ISSUE_CNT   =       #{maxIssueCnt}
        </if>
        <if test="maxUseCnt != null and maxUseCnt != ''">
                  AND A.MAX_USE_CNT     =       #{maxUseCnt}
        </if>
        <if test="applyAmt != null and applyAmt != ''">
                  AND A.APPLY_AMT       =       #{applyAmt}
        </if>
        <if test="applyRate != null and applyRate != ''">
                  AND A.APPLY_RATE      =       #{applyRate}
        </if>
        <if test="minBuyAmt != null and minBuyAmt != ''">
                  AND A.MIN_BUY_AMT     =       #{minBuyAmt}
        </if>
        <if test="maxDcAmt != null and maxDcAmt != ''">
                  AND A.MAX_DC_AMT     =       #{maxDcAmt}
        </if>
        <if test="applyCnt != null and applyCnt != ''">
                  AND A.APPLY_CNT       =       #{applyCnt}
        </if>
        <if test="prsnttnGodsCd != null and prsnttnGodsCd != ''">
            <choose>
                <when test="prsnttnGodsCd instanceof String">
                    AND A.PRSNTTN_GODS_CD =       #{prsnttnGodsCd}
                </when>
                <otherwise>
                    AND A.PRSNTTN_GODS_CD IN
                    <foreach item="item" index="index" collection="prsnttnGodsCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="useDow != null and useDow != ''">
                  AND A.USE_DOW         =       #{useDow}
        </if>
        <if test="fromUseHour != null and fromUseHour != ''">
                  AND A.FROM_USE_HOUR   =       #{fromUseHour}
        </if>
        <if test="toUseHour != null and toUseHour != ''">
                  AND A.TO_USE_HOUR     =       #{toUseHour}
        </if>
        <if test="useChlCd != null and useChlCd != ''">
            <choose>
                <when test="useChlCd instanceof String">
                    AND A.USE_CHL_CD      =       #{useChlCd}
                </when>
                <otherwise>
                    AND A.USE_CHL_CD      IN
                    <foreach item="item" index="index" collection="useChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="dupUseYn != null and dupUseYn != ''">
                  AND A.DUP_USE_YN      =       #{dupUseYn}
        </if>
        <if test="useDivCd != null and useDivCd != ''">
            <choose>
                <when test="useDivCd instanceof String">
                    AND A.USE_DIV_CD      =       #{useDivCd}
                </when>
                <otherwise>
                    AND A.USE_DIV_CD      IN
                    <foreach item="item" index="index" collection="useDivCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="useYn != null and useYn != ''">
                  AND A.USE_YN          =       #{useYn}
        </if>
        <if test="coupnBasNm != null and coupnBasNm != ''">
                  AND A.COUPN_BAS_NM    like  '%'||  #{coupnBasNm} ||'%'      
        </if>
        <if test="coupnBasCtnts != null and coupnBasCtnts != ''">
                  AND A.COUPN_BAS_CTNTS =       #{coupnBasCtnts}
        </if>
        <if test="regChlCd != null and regChlCd != ''">
            <choose>
                <when test="regChlCd instanceof String">
                    AND A.REG_CHL_CD      =       #{regChlCd}
                </when>
                <otherwise>
                    AND A.REG_CHL_CD      IN
                    <foreach item="item" index="index" collection="regChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="admtMethCd != null and admtMethCd != ''">
            <choose>
                <when test="admtMethCd instanceof String">
                    AND A.ADMT_METH_CD    =       #{admtMethCd}
                </when>
                <otherwise>
                    AND A.ADMT_METH_CD    IN
                    <foreach item="item" index="index" collection="admtMethCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="admtAmt != null and admtAmt != ''">
                  AND A.ADMT_AMT        =       #{admtAmt}
        </if>
        <if test="coupnTypeCd != null and coupnTypeCd != ''">
            <choose>
                <when test="coupnTypeCd instanceof String">
                    AND A.COUPN_TYPE_CD   =       #{coupnTypeCd}
                </when>
                <otherwise>
                    AND A.COUPN_TYPE_CD   IN
                    <foreach item="item" index="index" collection="coupnTypeCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        
        
        <if test="applyMshpGradeCtnts != null and applyMshpGradeCtnts != ''">
                  AND INSTR( A.APPLY_MSHP_GRADE_CTNTS, #{applyMshpGradeCtnts} )  > 0
                  AND ( A.FROM_PBLS_STD_DAY <![CDATA[<=]]>   TO_CHAR(SYSDATE, 'YYYYMMDD')  AND A.TO_PBLS_STD_DAY <![CDATA[>=]]>  TO_CHAR(SYSDATE, 'YYYYMMDD') ) 
                  AND A.COUPN_TGT_CD != '002'
        </if>
     
           <if test="mshipGradeCd != null and mshipGradeCd != ''">
                  AND A.MSHIP_GRADE_CD = #{mshipGradeCd} 
        </if>
        
           <if test="cprtCmpNo != null and cprtCmpNo != ''">
                AND A.CPRT_CMP_NO = #{cprtCmpNo} 
                AND ( A.FROM_PBLS_STD_DAY <![CDATA[<=]]>   TO_CHAR(SYSDATE, 'YYYYMMDD')  AND A.TO_PBLS_STD_DAY <![CDATA[>=]]>  TO_CHAR(SYSDATE, 'YYYYMMDD') ) 
                AND A.COUPN_TGT_CD != '002'
        </if>
        
   
        
   
        
        <if test="coupnUsePossDay != null and coupnUsePossDay != ''">
                  AND A.COUPN_USE_POSS_DAY=       #{coupnUsePossDay}
        </if>
        <if test="coupnUsePossYn != null and coupnUsePossYn != ''">
                  AND A.COUPN_USE_POSS_YN=       #{coupnUsePossYn}
        </if>
        <if test="coupnUsePossDayCnt != null and coupnUsePossDayCnt != ''">
                  AND A.COUPN_USE_POSS_DAY_CNT=       #{coupnUsePossDayCnt}
        </if>
        <if test="coupnClassCd != null and coupnClassCd != ''">
            <choose>
                <when test="coupnClassCd instanceof String">
                    AND A.COUPN_CLASS_CD  =       #{coupnClassCd}
                </when>
                <otherwise>
                    AND A.COUPN_CLASS_CD  IN
                    <foreach item="item" index="index" collection="coupnClassCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
       

        <if test="dow1UseYn != null and dow1UseYn != ''">
                  AND A.DOW_1_USE_YN    =       #{dow1UseYn}
        </if>
        <if test="dow2UseYn != null and dow2UseYn != ''">
                  AND A.DOW_2_USE_YN    =       #{dow2UseYn}
        </if>
        <if test="dow3UseYn != null and dow3UseYn != ''">
                  AND A.DOW_3_USE_YN    =       #{dow3UseYn}
        </if>
        <if test="dow4UseYn != null and dow4UseYn != ''">
                  AND A.DOW_4_USE_YN    =       #{dow4UseYn}
        </if>
        <if test="dow5UseYn != null and dow5UseYn != ''">
                  AND A.DOW_5_USE_YN    =       #{dow5UseYn}
        </if>
        <if test="dow6UseYn != null and dow6UseYn != ''">
                  AND A.DOW_6_USE_YN    =       #{dow6UseYn}
        </if>
        <if test="dow7UseYn != null and dow7UseYn != ''">
                  AND A.DOW_7_USE_YN    =       #{dow7UseYn}
        </if>
        <if test="mshpGradeCd != null and mshpGradeCd != ''">
            <choose>
                <when test="mshpGradeCd instanceof String">
                    AND A.MSHP_GRADE_CD   =       #{mshpGradeCd}
                </when>
                <otherwise>
                    AND A.MSHP_GRADE_CD   IN
                    <foreach item="item" index="index" collection="mshpGradeCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
    </sql>
    <sql id="sqlOrderBy">
        <choose>
            <when test="colSortName ==null or colSortName == ''">
                ORDER BY      A.REG_DT DESC
            </when>
            <when test="colSortName.equals('mshipCoupnBasNo')">
                ORDER BY      A.MSHIP_COUPN_BAS_NO
            </when>
            <when test="colSortName.equals('coupnKndCd')">
                ORDER BY      A.COUPN_KND_CD
            </when>
            <when test="colSortName.equals('coupnTgtCd')">
                ORDER BY      A.COUPN_TGT_CD
            </when>
            <when test="colSortName.equals('coupnApplyDivCd1')">
                ORDER BY      A.COUPN_APPLY_DIV_CD1
            </when>
            <when test="colSortName.equals('coupnApplyDivCd2')">
                ORDER BY      A.COUPN_APPLY_DIV_CD2
            </when>
            <when test="colSortName.equals('fromPblsStdDay')">
                ORDER BY      A.FROM_PBLS_STD_DAY
            </when>
            <when test="colSortName.equals('toPblsStdDay')">
                ORDER BY      A.TO_PBLS_STD_DAY
            </when>
            <when test="colSortName.equals('useStdDayCondCd')">
                ORDER BY      A.USE_STD_DAY_COND_CD
            </when>
            <when test="colSortName.equals('fromUseStdDay')">
                ORDER BY      A.FROM_USE_STD_DAY
            </when>
            <when test="colSortName.equals('toUseStdDay')">
                ORDER BY      A.TO_USE_STD_DAY
            </when>
            <when test="colSortName.equals('giftPossYn')">
                ORDER BY     A.GIFT_POSS_YN
            </when>
            <when test="colSortName.equals('coupnIssueMethCd')">
                ORDER BY      A.COUPN_ISSUE_METH_CD
            </when>
            <when test="colSortName.equals('issueRstrtnCnt')">
                ORDER BY      A.ISSUE_RSTRTN_CNT
            </when>
            <when test="colSortName.equals('maxIssueCnt')">
                ORDER BY      A.MAX_ISSUE_CNT
            </when>
            <when test="colSortName.equals('maxUseCnt')">
                ORDER BY      A.MAX_USE_CNT
            </when>
            <when test="colSortName.equals('applyAmt')">
                ORDER BY      A.APPLY_AMT
            </when>
            <when test="colSortName.equals('applyRate')">
                ORDER BY      A.APPLY_RATE
            </when>
            <when test="colSortName.equals('minBuyAmt')">
                ORDER BY      A.MIN_BUY_AMT
            </when>
            <when test="colSortName.equals('maxDcAmt')">
                ORDER BY      A.MAX_DC_AMT
            </when>
            <when test="colSortName.equals('applyCnt')">
                ORDER BY      A.APPLY_CNT
            </when>
            <when test="colSortName.equals('prsnttnGodsCd')">
                ORDER BY      A.PRSNTTN_GODS_CD
            </when>
            <when test="colSortName.equals('useDow')">
                ORDER BY      A.USE_DOW
            </when>
            <when test="colSortName.equals('fromUseHour')">
                ORDER BY      A.FROM_USE_HOUR
            </when>
            <when test="colSortName.equals('toUseHour')">
                ORDER BY      A.TO_USE_HOUR
            </when>
            <when test="colSortName.equals('useChlCd')">
                ORDER BY      A.USE_CHL_CD
            </when>
            <when test="colSortName.equals('dupUseYn')">
                ORDER BY      A.DUP_USE_YN
            </when>
            <when test="colSortName.equals('useDivCd')">
                ORDER BY      A.USE_DIV_CD
            </when>
            <when test="colSortName.equals('useYn')">
                ORDER BY      A.USE_YN
            </when>
            <when test="colSortName.equals('coupnBasNm')">
                ORDER BY      A.COUPN_BAS_NM
            </when>
            <when test="colSortName.equals('coupnBasCtnts')">
                ORDER BY      A.COUPN_BAS_CTNTS
            </when>
            <when test="colSortName.equals('amdrId')">
                ORDER BY      A.AMDR_ID
            </when>
            <when test="colSortName.equals('amdDt')">
                ORDER BY      A.AMD_DT
            </when>
            <when test="colSortName.equals('regrId')">
                ORDER BY      A.REGR_ID
            </when>
            <when test="colSortName.equals('regDt')">
                ORDER BY      A.REG_DT
            </when>
            <when test="colSortName.equals('regChlCd')">
                ORDER BY      A.REG_CHL_CD
            </when>
            <when test="colSortName.equals('admtMethCd')">
                ORDER BY      A.ADMT_METH_CD
            </when>
            <when test="colSortName.equals('admtAmt')">
                ORDER BY      A.ADMT_AMT
            </when>
            <when test="colSortName.equals('coupnTypeCd')">
                ORDER BY      A.COUPN_TYPE_CD
            </when>
            <when test="colSortName.equals('coupnUsePossDay')">
                ORDER BY      A.COUPN_USE_POSS_DAY
            </when>
            <when test="colSortName.equals('coupnUsePossYn')">
                ORDER BY      A.COUPN_USE_POSS_YN
            </when>
            <when test="colSortName.equals('coupnUsePossDayCnt')">
                ORDER BY      A.COUPN_USE_POSS_DAY_CNT
            </when>
            <when test="colSortName.equals('coupnClassCd')">
                ORDER BY      A.COUPN_CLASS_CD
            </when>
           

            <when test="colSortName.equals('dow1UseYn')">
                ORDER BY      A.DOW_1_USE_YN
            </when>
            <when test="colSortName.equals('dow2UseYn')">
                ORDER BY      A.DOW_2_USE_YN
            </when>
            <when test="colSortName.equals('dow3UseYn')">
                ORDER BY      A.DOW_3_USE_YN
            </when>
            <when test="colSortName.equals('dow4UseYn')">
                ORDER BY      A.DOW_4_USE_YN
            </when>
            <when test="colSortName.equals('dow5UseYn')">
                ORDER BY      A.DOW_5_USE_YN
            </when>
            <when test="colSortName.equals('dow6UseYn')">
                ORDER BY      A.DOW_6_USE_YN
            </when>
            <when test="colSortName.equals('dow7UseYn')">
                ORDER BY      A.DOW_7_USE_YN
            </when>
            <when test="colSortName.equals('mshpGradeCd')">
                ORDER BY      A.MSHP_GRADE_CD
            </when>
            <otherwise>
                ORDER BY      A.REG_DT
            </otherwise>
        </choose>
        <if test="colSortName !=null and colSortDir !='' and colSortDir !=null and colSortDir !='' and colSortDir.equals('desc')">
            DESC
        </if>
    </sql>
    <select id="selectListCount" resultType="int">
                SELECT COUNT(1)
                 FROM CRM_MSHIP_COUPN_BAS A
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
        	<include refid="sqlConditions"/>
        </trim>
        
    </select>
    <select id="selectList" resultType="com.ceragem.crm.memship.model.CrmMshipCoupnBasVo">
        <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingHeader"/>
               SELECT /* crmMshipCoupnBas.selectList */ <include refid="sqlSelectCols"/>
                 FROM CRM_MSHIP_COUPN_BAS A
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        <include refid="sqlConditions"/>
        </trim>
        <include refid="sqlOrderBy"/>
        <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingFooter"/>
    </select>
    <select id="select" resultType="com.ceragem.crm.memship.model.CrmMshipCoupnBasVo">
               SELECT /* crmMshipCoupnBas.select */ <include refid="sqlSelectCols"/>
               , (SELECT USER_NM  FROM CRM_USER_BAS WHERE USER_CD = A.REGR_ID) AS REGR_NM
                 FROM CRM_MSHIP_COUPN_BAS A
        <include refid="sqlPkConditions"/>
    </select>
    
    <select id="getPubCustList" resultType="com.ceragem.crm.memship.model.CrmMshipCoupnPubCustVo">
     	<include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingHeader"/>
     		SELECT /* crmMshipCoupnBas.getPubCustList */
     			CST.ITG_CUST_NO
				, CST.CUST_NM
				, CST.GNDR_CD
				, CST.BIRTHDAY
				, CST.FORN_YN
				, '010-****-' || CST.MPHON_BK_DGT_NO MPHON_NO
				<!-- , REGEXP_REPLACE(CST.MPHON_NO, '(.{3})(.*+)(.{4})', '\1-****-\3') MPHON_NO  -->
				<!-- , CST.EMAIL_ADDR EMAIL_ADDR -->	<!-- 속도이슈 -->
				, CST.CUST_STATUS_CD
				, CST.ZIP_CD
				<!-- , CST.ADDR_1_CTNTS ADDR_1_CTNTS -->	<!-- 속도이슈 -->
				<!-- , CST.ADDR_2_CTNTS ADDR_2_CTNTS --> <!-- 속도이슈 -->
				, CST.MARRY_YN
				, CST.MSHIP_GRADE_CD
				<!-- , (SELECT COUNT(*) FROM CRM_COUPN_PBLS_HST WHERE ITG_CUST_NO = CST.ITG_CUST_NO AND MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo} ) AS COUPN_CNT --> <!-- 속도이슈 -->
     		FROM (
     			<!-- SELECT 
               		DISTINCT A.ITG_CUST_NO
                FROM CRM_CUST_BAS A  -->
                <choose>
                	<when test = "custNo != null and custNo != '' and grpNo == null">
                		SELECT ITG_CUST_NO  FROM CRM_CUST_BAS WHERE ('CUST',ITG_CUST_NO ) IN 
	                	<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
	                		('CUST',#{item})
	                	</foreach>
                	</when>
                	<when test="custNo != null and custNo != '' and grpNo != null">
                		SELECT ITG_CUST_NO  FROM CRM_CUST_BAS WHERE ('CUST',ITG_CUST_NO ) IN 
	                	<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
	                		('CUST',#{item})
	                	</foreach>
	                	UNION
	                	SELECT 
				            DISTINCT A.ITG_CUST_NO 
				            FROM CRM_CUST_GRP_TGTR_REL A JOIN CRM_CUST_GRP_BAS B ON A.CUST_GRP_NO = B.CUST_GRP_NO
				            AND B.CUST_GRP_NO IN 
				            <foreach item="item" index="index" collection="grpNo" open="(" separator="," close=")">
				            	#{item}
				            </foreach>
                	</when>
                	<otherwise>
                		SELECT 
				            DISTINCT A.ITG_CUST_NO 
				            FROM CRM_CUST_GRP_TGTR_REL A JOIN CRM_CUST_GRP_BAS B ON A.CUST_GRP_NO = B.CUST_GRP_NO
				            AND B.CUST_GRP_NO IN 
				            <foreach item="item" index="index" collection="grpNo" open="(" separator="," close=")">
				            	#{item}
				            </foreach>
                	</otherwise>
                </choose>
     		) TEM JOIN CRM_CUST_BAS CST ON TEM.ITG_CUST_NO = CST.ITG_CUST_NO
             <trim prefix="WHERE" prefixOverrides="AND |OR ">  
	             <!-- <if test="custNo != null and custNo != ''">
	                 	AND CST.ITG_CUST_NO IN
	            	<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
	                    #{item}
	                </foreach>
	    		 </if> -->
	             <if test="cpnMshpGradeCd != null and cpnMshpGradeCd != ''">
	                 	AND CST.MSHIP_GRADE_CD IN
	            	<foreach item="item" index="index" collection="cpnMshpGradeCd" open="(" separator="," close=")">
	                    #{item}
	                </foreach>
	    		 </if>
	    			 
	    		<!-- <if test="custGrpNo != null and custGrpNo != ''">
						AND B.TGT_YN = 'Y' 
	                 	AND B.CUST_GRP_NO IN
	            	<foreach item="item" index="index" collection="custGrpNo" open="(" separator="," close=")">
	                    #{item}
	                </foreach>
	      		</if> -->
	       		
	       		<if test="coupnTgtCd eq '001'">
						AND CST.MSHIP_SBSC_YN = 'Y' 
	      		</if>
	      		<if test="coupnTgtCd eq '002'">
						AND CST.MSHIP_SBSC_YN != 'Y' 
	      		</if>
      		</trim>
      		<!-- ORDER BY CST.ITG_CUST_NO  --> <!-- 정열제거 속도이슈 -->
       	<include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingFooter"/> 	 
              
    </select>
    
    <select id="getPubCustListCount" resultType="int">
    	SELECT /* crmMshipCoupnBas.getPubCustListCount */
     			COUNT(1) AS CNT
     		FROM (
                <choose>
                	<when test = "custNo != null and custNo != '' and grpNo == null">
                		SELECT ITG_CUST_NO  FROM CRM_CUST_BAS WHERE ('CUST',ITG_CUST_NO ) IN 
	                	<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
	                		('CUST',#{item})
	                	</foreach>
                	</when>
                	<when test="custNo != null and custNo != '' and grpNo != null">
                		SELECT ITG_CUST_NO  FROM CRM_CUST_BAS WHERE ('CUST',ITG_CUST_NO ) IN 
	                	<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
	                		('CUST',#{item})
	                	</foreach>
	                	UNION
	                	SELECT 
				            DISTINCT A.ITG_CUST_NO 
				            FROM CRM_CUST_GRP_TGTR_REL A JOIN CRM_CUST_GRP_BAS B ON A.CUST_GRP_NO = B.CUST_GRP_NO
				            AND B.CUST_GRP_NO IN 
				            <foreach item="item" index="index" collection="grpNo" open="(" separator="," close=")">
				            	#{item}
				            </foreach>
                	</when>
                	<otherwise>
                		SELECT 
				            DISTINCT A.ITG_CUST_NO 
				            FROM CRM_CUST_GRP_TGTR_REL A JOIN CRM_CUST_GRP_BAS B ON A.CUST_GRP_NO = B.CUST_GRP_NO
				            AND B.CUST_GRP_NO IN 
				            <foreach item="item" index="index" collection="grpNo" open="(" separator="," close=")">
				            	#{item}
				            </foreach>
                	</otherwise>
                </choose>
     		) TEM JOIN CRM_CUST_BAS CST ON TEM.ITG_CUST_NO = CST.ITG_CUST_NO
             <trim prefix="WHERE" prefixOverrides="AND |OR ">  
	             <if test="cpnMshpGradeCd != null and cpnMshpGradeCd != ''">
	                 	AND CST.MSHIP_GRADE_CD IN
	            	<foreach item="item" index="index" collection="cpnMshpGradeCd" open="(" separator="," close=")">
	                    #{item}
	                </foreach>
	    		 </if>
	       		<if test="coupnTgtCd eq '001'">
						AND CST.MSHIP_SBSC_YN = 'Y' 
	      		</if>
	      		<if test="coupnTgtCd eq '002'">
						AND CST.MSHIP_SBSC_YN != 'Y' 
	      		</if>
      		</trim>
    </select>
    
    <select id="getPubCustCount" resultType="int">
     	
               SELECT /* crmMshipCoupnBas.getPubCustCount */
               		COUNT(1) AS CNT
                 FROM CRM_CUST_BAS A 
                LEFT JOIN CRM_CUST_GRP_TGTR_REL B ON A.ITG_CUST_NO = B.ITG_CUST_NO
                WHERE CUST_STATUS_CD = '001'
                
             <if test="custNo != null and custNo != ''">
                 	AND A.ITG_CUST_NO IN
            	<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
                    #{item}
                </foreach>
    		 </if>
    		<if test="cpnMshpGradeCd != null and cpnMshpGradeCd != ''">
                 	AND A.MSHIP_GRADE_CD IN
            	<foreach item="item" index="index" collection="cpnMshpGradeCd" open="(" separator="," close=")">
                    #{item}
                </foreach>
    		 </if>
    		<if test="custGrpNo != null and custGrpNo != ''">
    				AND B.TGT_YN = 'Y'
                 	AND B.CUST_GRP_NO IN
            	<foreach item="item" index="index" collection="custGrpNo" open="(" separator="," close=")">
                    #{item}
                </foreach>
      		</if>
             <if test="coupnTgtCd eq '001'">
					AND A.MSHIP_SBSC_YN = 'Y' 
      		</if>
      		<if test="coupnTgtCd eq '002'">
					AND A.MSHIP_SBSC_YN != 'Y' 
      		</if>
    </select>
    
    
    <insert id="insert">
                INSERT INTO CRM_MSHIP_COUPN_BAS (
        <include refid="sqlCols"/>
                 ) VALUES (
                       NVL(#{mshipCoupnBasNo}, FN_CRM_AUTO_SEQ('MCP') ) 
                     , #{coupnKndCd}
                     , #{coupnTgtCd}
                     , #{coupnApplyDivCd1}
                     , #{coupnApplyDivCd2}
                     , #{fromPblsStdDay}
                     , #{toPblsStdDay}
                     , #{useStdDayCondCd}
                     , #{fromUseStdDay}
                     , #{toUseStdDay}
                     , NVL(#{giftPossYn},'N')
                     , #{coupnIssueMethCd}
                     , #{issueRstrtnCnt}
                     , #{maxIssueCnt}
                     , #{maxUseCnt}
                     , #{applyAmt}
                     , #{applyRate}
                     , #{applyPoint}
                     , #{minBuyAmt}
                     , #{maxDcAmt}
                     , #{applyCnt}
                     , #{prsnttnGodsCd}
                     , #{useDow}
                     , #{fromUseHour}
                     , #{toUseHour}
                     , #{useChlCd}
                     , NVL(#{dupUseYn},'N')
                     , #{useDivCd}
                     , NVL(#{useYn},'N')
                     , #{coupnBasNm}
                     , #{coupnBasCtnts}
                     , #{amdrId}
                     , SYSDATE
                     , #{regrId}
                     , SYSDATE
                     , #{regChlCd}
                     , #{admtMethCd}
                     , #{admtAmt}
                     , #{coupnTypeCd}
                     , #{coupnUsePossDay}
                     , NVL(#{coupnUsePossYn},'N')
                     , #{coupnUsePossDayCnt}
                     , #{coupnClassCd}
                    
                     , NVL(#{dow1UseYn},'N')
                     , NVL(#{dow2UseYn},'N')
                     , NVL(#{dow3UseYn},'N')
                     , NVL(#{dow4UseYn},'N')
                     , NVL(#{dow5UseYn},'N')
                     , NVL(#{dow6UseYn},'N')
                     , NVL(#{dow7UseYn},'N')
                     , #{mshpGradeCd}
                     , #{mshipGradeCd}
                     , #{cprtCmpNo}
                     , #{applyMshpGradeCtnts}
                     , #{mshipTypeCds}
                     , #{coupnRmark}
                 )
    </insert>
    <update id="update">
               UPDATE CRM_MSHIP_COUPN_BAS
                  SET COUPN_KND_CD                            =         #{coupnKndCd}
                    , COUPN_TGT_CD                            =         #{coupnTgtCd}
                    , COUPN_APPLY_DIV_CD1                     =         #{coupnApplyDivCd1}
                    , COUPN_APPLY_DIV_CD2                     =         #{coupnApplyDivCd2}
                    , FROM_PBLS_STD_DAY                       =         #{fromPblsStdDay}
                    , TO_PBLS_STD_DAY                         =         #{toPblsStdDay}
                    , USE_STD_DAY_COND_CD                     =         #{useStdDayCondCd}
                    , FROM_USE_STD_DAY                        =         #{fromUseStdDay}
                    , TO_USE_STD_DAY                          =         #{toUseStdDay}
                    , GIFT_POSS_YN                            =         NVL(#{giftPossYn},'N')
                    , COUPN_ISSUE_METH_CD                     =         #{coupnIssueMethCd}
                    , ISSUE_RSTRTN_CNT                        =         #{issueRstrtnCnt}
                    , MAX_ISSUE_CNT                           =         #{maxIssueCnt}
                    , MAX_USE_CNT                             =         #{maxUseCnt}
                    , APPLY_AMT                               =         #{applyAmt}
                    , APPLY_RATE                              =         #{applyRate}
                    , APPLY_POINT                              =         #{applyPoint}
                    , MIN_BUY_AMT                             =         #{minBuyAmt}
                    , MAX_DC_AMT                             =         #{maxDcAmt}
                    , APPLY_CNT                               =         #{applyCnt}
                    , PRSNTTN_GODS_CD                         =         #{prsnttnGodsCd}
                    , USE_DOW                                 =         #{useDow}
                    , FROM_USE_HOUR                           =         #{fromUseHour}
                    , TO_USE_HOUR                             =         #{toUseHour}
                    , USE_CHL_CD                              =         #{useChlCd}
                    , DUP_USE_YN                              =         NVL(#{dupUseYn},'N')
                    , USE_DIV_CD                              =         #{useDivCd}
                    , USE_YN                                  =         NVL(#{useYn},'N')
                    , COUPN_BAS_NM                            =         #{coupnBasNm}
                    , COUPN_BAS_CTNTS                         =         #{coupnBasCtnts}
                    , AMDR_ID                                 =         #{amdrId}
                    , AMD_DT                                  =         SYSDATE
                    , REG_CHL_CD                              =         #{regChlCd}
                    , ADMT_METH_CD                            =         #{admtMethCd}
                    , ADMT_AMT                                =         #{admtAmt}
                    , COUPN_TYPE_CD                           =         #{coupnTypeCd}
                    , COUPN_USE_POSS_DAY                      =         #{coupnUsePossDay}
                    , COUPN_USE_POSS_YN                       =         NVL(#{coupnUsePossYn},'N')
                    , COUPN_USE_POSS_DAY_CNT                  =         #{coupnUsePossDayCnt}
                    , COUPN_CLASS_CD                          =         #{coupnClassCd}
                    
                    , DOW_1_USE_YN                            =         NVL(#{dow1UseYn},'N')
                    , DOW_2_USE_YN                            =         NVL(#{dow2UseYn},'N')
                    , DOW_3_USE_YN                            =         NVL(#{dow3UseYn},'N')
                    , DOW_4_USE_YN                            =         NVL(#{dow4UseYn},'N')
                    , DOW_5_USE_YN                            =         NVL(#{dow5UseYn},'N')
                    , DOW_6_USE_YN                            =         NVL(#{dow6UseYn},'N')
                    , DOW_7_USE_YN                            =         NVL(#{dow7UseYn},'N')
                    , MSHP_GRADE_CD                           =         #{mshpGradeCd}
                    , MSHIP_GRADE_CD                          =         #{mshipGradeCd}
                    , CPRT_CMP_NO                             =         #{cprtCmpNo}
                    , APPLY_MSHP_GRADE_CTNTS                  =         #{applyMshpGradeCtnts}
                    , MSHIP_TYPE_CDS                  		  =         #{mshipTypeCds}
                    , COUPN_RMARK							  = 		#{coupnRmark}
        <include refid="sqlPkConditions"/>
    </update>
    <delete id="delete">
               DELETE FROM CRM_MSHIP_COUPN_BAS
        <include refid="sqlPkConditions"/>
    </delete>
    
    
    <insert id="pubCoupon"> 
    
                
        	  <if test="custNoList != null and custNoList != '' ">   
        	
        			  INSERT ALL /* crmMshipCoupnBas.pubCoupon */ INTO  CRM_COUPN_PBLS_HST ( COUPN_PBLS_HST_SEQ, COUPN_PBLS_BAS_NO, ITG_CUST_NO, MSHIP_COUPN_BAS_NO, COUPN_KND_CD, COUPN_TGT_CD, COUPN_APPLY_DIV_CD1, 
			           COUPN_APPLY_DIV_CD2, FROM_PBLS_STD_DAY, TO_PBLS_STD_DAY, USE_STD_DAY_COND_CD, FROM_USE_STD_DAY, TO_USE_STD_DAY, GIFT_POSS_YN, COUPN_ISSUE_METH_CD, ISSUE_RSTRTN_CNT, 
			           MAX_ISSUE_CNT, MAX_USE_CNT, APPLY_AMT, APPLY_RATE, MIN_BUY_AMT, MAX_DC_AMT, APPLY_CNT, PRSNTTN_GODS_CD, USE_DOW, FROM_USE_HOUR, TO_USE_HOUR, USE_CHL_CD, DUP_USE_YN, 
			           USE_DIV_CD, USE_YN, COUPN_BAS_NM, COUPN_BAS_CTNTS, ADMT_METH_CD, ADMT_AMT, COUPN_TYPE_CD, COUPN_USE_POSS_DAY, COUPN_USE_POSS_YN, COUPN_USE_POSS_DAY_CNT, 
			           COUPN_CLASS_CD,  DOW_1_USE_YN, DOW_2_USE_YN, DOW_3_USE_YN, DOW_4_USE_YN, DOW_5_USE_YN, DOW_6_USE_YN, DOW_7_USE_YN, 
			           MSHP_GRADE_CD, AMDR_ID, AMD_DT, REGR_ID, REG_DT, REG_CHL_CD,STOR_NO )
			           
			     <foreach collection="custNoList" item="item" index="index" separator="  UNION ALL " open=" " close=" ">
		
			           
			           SELECT  /* crmMshipCoupnBas.custNoList */  FN_CRM_AUTO_SEQ('CPN'), FN_LUHN_COUPN( DECODE(MSHIP_GRADE_CD, '001', '01', '002', '51', '003', '05', NULL, '05') ) COUPN_PBLS_BAS_NO, #{item}, MSHIP_COUPN_BAS_NO, COUPN_KND_CD, 
			           COUPN_TGT_CD, COUPN_APPLY_DIV_CD1,  COUPN_APPLY_DIV_CD2, FROM_PBLS_STD_DAY, TO_PBLS_STD_DAY, 
  					  USE_STD_DAY_COND_CD, FROM_USE_STD_DAY, TO_USE_STD_DAY, GIFT_POSS_YN, COUPN_ISSUE_METH_CD, ISSUE_RSTRTN_CNT,  MAX_ISSUE_CNT, MAX_USE_CNT, APPLY_AMT, APPLY_RATE, 
  					  MIN_BUY_AMT, MAX_DC_AMT, APPLY_CNT, PRSNTTN_GODS_CD, USE_DOW, FROM_USE_HOUR, TO_USE_HOUR, USE_CHL_CD, DUP_USE_YN,  USE_DIV_CD, 'N' AS USE_YN, COUPN_BAS_NM, COUPN_BAS_CTNTS, 
  					  ADMT_METH_CD, ADMT_AMT, COUPN_TYPE_CD, COUPN_USE_POSS_DAY, COUPN_USE_POSS_YN, COUPN_USE_POSS_DAY_CNT,  COUPN_CLASS_CD,  DOW_1_USE_YN, 
  					  DOW_2_USE_YN, DOW_3_USE_YN, DOW_4_USE_YN, DOW_5_USE_YN, DOW_6_USE_YN, DOW_7_USE_YN,  MSHP_GRADE_CD, AMDR_ID, AMD_DT, #{regrId}, SYSDATE , REG_CHL_CD ,'141359' AS STOR_NO
  					  FROM CRM_MSHIP_COUPN_BAS  WHERE MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo}
  					 
			     </foreach>
				
				
				 
			</if>
			
        
    </insert>  
    
    
     <insert id="pubGrpCoupon">
    
  		
  			<if test="custGrpNoList !=null and custGrpNoList != ''"> 
        	    	
                	 INSERT ALL /* crmMshipCoupnBas.pubGrpCoupon */ INTO  CRM_COUPN_PBLS_HST ( 
							COUPN_PBLS_HST_SEQ
							, COUPN_PBLS_BAS_NO
							, ITG_CUST_NO
							, MSHIP_COUPN_BAS_NO
							, COUPN_KND_CD
							, COUPN_TGT_CD
							, COUPN_APPLY_DIV_CD1
							, COUPN_APPLY_DIV_CD2
							, FROM_PBLS_STD_DAY
							, TO_PBLS_STD_DAY
							, USE_STD_DAY_COND_CD
							, FROM_USE_STD_DAY
							, TO_USE_STD_DAY
							, GIFT_POSS_YN
							, COUPN_ISSUE_METH_CD
							, ISSUE_RSTRTN_CNT
							,  MAX_ISSUE_CNT
							, MAX_USE_CNT
							, APPLY_AMT
							, APPLY_RATE
							, MIN_BUY_AMT
							, MAX_DC_AMT
							, APPLY_CNT
							, PRSNTTN_GODS_CD
							, USE_DOW
							, FROM_USE_HOUR
							, TO_USE_HOUR
							, USE_CHL_CD
							, DUP_USE_YN
							, USE_DIV_CD
							, USE_YN
							, COUPN_BAS_NM
							, COUPN_BAS_CTNTS
							, ADMT_METH_CD
							, ADMT_AMT
							, COUPN_TYPE_CD
							, COUPN_USE_POSS_DAY
							, COUPN_USE_POSS_YN
							, COUPN_USE_POSS_DAY_CNT
							, COUPN_CLASS_CD
							, DOW_1_USE_YN
							, DOW_2_USE_YN
							, DOW_3_USE_YN
							, DOW_4_USE_YN
							, DOW_5_USE_YN
							, DOW_6_USE_YN
							, DOW_7_USE_YN
							, MSHP_GRADE_CD
							, REGR_ID
							, REG_DT
							, REG_CHL_CD,STOR_NO
							 )
			       
			        <foreach collection="custGrpNoList" item="item" index="index" separator=" UNION ALL " open="  " close=" ">
			            
        	   		SELECT  /* crmMshipCoupnBas.custGrpNoList */
					 	  FN_CRM_AUTO_SEQ('CPN') 
					 	  , FN_LUHN_COUPN( DECODE(MSHIP_GRADE_CD, '001', '01', '002', '51', '003', '05', NULL, '05') ) COUPN_PBLS_BAS_NO 
					 	  , A.ITG_CUST_NO
					 	  ,  MSHIP_COUPN_BAS_NO
					 	  , COUPN_KND_CD
					 	  , COUPN_TGT_CD
					 	  , COUPN_APPLY_DIV_CD1
					 	  ,  COUPN_APPLY_DIV_CD2
					 	  , FROM_PBLS_STD_DAY
					 	  , TO_PBLS_STD_DAY
					 	  , USE_STD_DAY_COND_CD
					 	  , FROM_USE_STD_DAY
					 	  , TO_USE_STD_DAY
					 	  , GIFT_POSS_YN
					 	  , COUPN_ISSUE_METH_CD
					 	  , ISSUE_RSTRTN_CNT
					 	  ,  MAX_ISSUE_CNT
					 	  , MAX_USE_CNT
					 	  , APPLY_AMT
					 	  , APPLY_RATE
					 	  , MIN_BUY_AMT
					 	  , MAX_DC_AMT
					 	  , APPLY_CNT
					 	  , PRSNTTN_GODS_CD
					 	  , USE_DOW
					 	  , FROM_USE_HOUR
					 	  , TO_USE_HOUR
					 	  , USE_CHL_CD
					 	  , DUP_USE_YN
					 	  ,  USE_DIV_CD
					 	  , USE_YN
					 	  , COUPN_BAS_NM
					 	  , COUPN_BAS_CTNTS
					 	  , ADMT_METH_CD
					 	  , ADMT_AMT
					 	  , COUPN_TYPE_CD
					 	  , COUPN_USE_POSS_DAY
					 	  , COUPN_USE_POSS_YN
					 	  , COUPN_USE_POSS_DAY_CNT
					 	  ,  COUPN_CLASS_CD
					 	  ,  DOW_1_USE_YN
					 	  , DOW_2_USE_YN
					 	  , DOW_3_USE_YN
					 	  , DOW_4_USE_YN
					 	  , DOW_5_USE_YN
					 	  , DOW_6_USE_YN
					 	  , DOW_7_USE_YN
					 	  ,  MSHP_GRADE_CD
					 	  , #{regrId}
					 	  , SYSDATE
					 	  , REG_CHL_CD
					 	  , B.STOR_NO
	  					  
					FROM CRM_CUST_GRP_TGTR_REL A
					CROSS JOIN (
					
						SELECT 
							   MSHIP_COUPN_BAS_NO
							, COUPN_KND_CD
							, COUPN_TGT_CD
							, COUPN_APPLY_DIV_CD1
							, COUPN_APPLY_DIV_CD2
							, FROM_PBLS_STD_DAY
							, TO_PBLS_STD_DAY
							, USE_STD_DAY_COND_CD
							, FROM_USE_STD_DAY
							, TO_USE_STD_DAY
							, GIFT_POSS_YN
							, COUPN_ISSUE_METH_CD
							, ISSUE_RSTRTN_CNT
							, MAX_ISSUE_CNT
							, MAX_USE_CNT
							, APPLY_AMT
							, APPLY_RATE
							, MIN_BUY_AMT
							, MAX_DC_AMT
							, APPLY_CNT
							, PRSNTTN_GODS_CD
							, USE_DOW
							, FROM_USE_HOUR
							, TO_USE_HOUR
							, USE_CHL_CD
							, DUP_USE_YN
							, USE_DIV_CD
							, 'N' AS USE_YN
							, COUPN_BAS_NM
							, COUPN_BAS_CTNTS
							, ADMT_METH_CD
							, ADMT_AMT
							, COUPN_TYPE_CD
							, COUPN_USE_POSS_DAY
							, COUPN_USE_POSS_YN
							, COUPN_USE_POSS_DAY_CNT
							, COUPN_CLASS_CD
							, DOW_1_USE_YN
							, DOW_2_USE_YN
							, DOW_3_USE_YN
							, DOW_4_USE_YN
							, DOW_5_USE_YN
							, DOW_6_USE_YN
							, DOW_7_USE_YN
							, MSHP_GRADE_CD,MSHIP_GRADE_CD
							, AMDR_ID
							, AMD_DT 
							, '141359' AS STOR_NO FROM CRM_MSHIP_COUPN_BAS
						WHERE MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo} FETCH FIRST 1 ROWS ONLY
					 )  B
					WHERE TGT_YN = 'Y' 
					AND  A.CUST_GRP_NO =  #{item}
			     <!-- <foreach collection="custGrpNoList" item="item" index="index" separator="," open="(" close=")"> -->
			          
			     </foreach>
				
			</if>
			
			
			 <!-- <if test="custGrpNoList !=null and custGrpNoList != ''  and custGrpNoList.size() > 0"> 
        	    	
                	INSERT INTO CRM_COUPN_PBLS_HST ( COUPN_PBLS_HST_SEQ,  MSHIP_COUPN_BAS_NO, ITG_CUST_NO, REGR_ID , REG_DT, USE_YN ) 
        	   		SELECT 
					 FN_CRM_AUTO_SEQ('CPN') ,   #{mshipCoupnBasNo}, ITG_CUST_NO, #{regrId}, SYSDATE ,  'N'
					FROM CRM_CUST_GRP_TGTR_REL grpRel
					WHERE TGT_YN = 'Y' 
					AND  grpRel.CUST_GRP_NO IN 
			     <foreach collection="custGrpNoList" item="item" index="index" separator="," open="(" close=")">
			           #{item}
			     </foreach>
				
			</if> -->
        
    </insert> 
    
    
     <insert id="pubStroeCoupon">
    
			INSERT ALL /* crmMshipCoupnBas.pubStroeCoupon */  INTO  CRM_COUPN_PBLS_HST ( 
                            COUPN_PBLS_HST_SEQ
                            , COUPN_PBLS_BAS_NO
                            , STOR_NO
                            , MSHIP_COUPN_BAS_NO
                            , COUPN_KND_CD
                            , COUPN_TGT_CD
                            , COUPN_APPLY_DIV_CD1
                            , COUPN_APPLY_DIV_CD2
                            , FROM_PBLS_STD_DAY
                            , TO_PBLS_STD_DAY
                            , USE_STD_DAY_COND_CD
                            , FROM_USE_STD_DAY
                            , TO_USE_STD_DAY
                            , GIFT_POSS_YN
                            , COUPN_ISSUE_METH_CD
                            , ISSUE_RSTRTN_CNT
                            , MAX_ISSUE_CNT
                            , MAX_USE_CNT
                            , APPLY_AMT
                            , APPLY_RATE
                            , MIN_BUY_AMT
                            , MAX_DC_AMT
                            , APPLY_CNT
                            , PRSNTTN_GODS_CD
                            , USE_DOW
                            , FROM_USE_HOUR
                            , TO_USE_HOUR
                            , USE_CHL_CD
                            , DUP_USE_YN
                            , USE_DIV_CD
                            , USE_YN
                            , COUPN_BAS_NM
                            , COUPN_BAS_CTNTS
                            , ADMT_METH_CD
                            , ADMT_AMT
                            , COUPN_TYPE_CD
                            , COUPN_USE_POSS_DAY
                            , COUPN_USE_POSS_YN
                            , COUPN_USE_POSS_DAY_CNT
                            , COUPN_CLASS_CD
                            , DOW_1_USE_YN
                            , DOW_2_USE_YN
                            , DOW_3_USE_YN
                            , DOW_4_USE_YN
                            , DOW_5_USE_YN
                            , DOW_6_USE_YN
                            , DOW_7_USE_YN
                            , MSHP_GRADE_CD
                            , REGR_ID
                            , REG_DT
                            , REG_CHL_CD
                            , SGNT_YN )
                       
                    SELECT 
                        FN_CRM_AUTO_SEQ('CPN') 
                          , FN_LUHN_COUPN( DECODE(B.MSHIP_GRADE_CD, '001', '01', '002', '51', '003', '05', NULL, '05') ) COUPN_PBLS_BAS_NO 
<!--                           ,  A.STOR_NO -->
                          , '141359'                          
                          , B.MSHIP_COUPN_BAS_NO
                          , B.COUPN_KND_CD
                          , B.COUPN_TGT_CD
                          , B.COUPN_APPLY_DIV_CD1
                          , B.COUPN_APPLY_DIV_CD2
                          , B.FROM_PBLS_STD_DAY
                          , B.TO_PBLS_STD_DAY
                          , B.USE_STD_DAY_COND_CD
                          , B.FROM_USE_STD_DAY
                          , B.TO_USE_STD_DAY
                          , B.GIFT_POSS_YN
                          , B.COUPN_ISSUE_METH_CD
                          , B.ISSUE_RSTRTN_CNT
                          , B.MAX_ISSUE_CNT
                          , B.MAX_USE_CNT
                          , B.APPLY_AMT
                          , B.APPLY_RATE
                          , B.MIN_BUY_AMT
                          , B.MAX_DC_AMT
                          , B.APPLY_CNT
                          , B.PRSNTTN_GODS_CD
                          , B.USE_DOW
                          , B.FROM_USE_HOUR
                          , B.TO_USE_HOUR
                          , B.USE_CHL_CD
                          , B.DUP_USE_YN
                          , B.USE_DIV_CD
                          , 'N' AS USE_YN
                          , B.COUPN_BAS_NM
                          , B.COUPN_BAS_CTNTS
                          , B.ADMT_METH_CD
                          , B.ADMT_AMT
                          , B.COUPN_TYPE_CD
                          , B.COUPN_USE_POSS_DAY
                          , B.COUPN_USE_POSS_YN
                          , B.COUPN_USE_POSS_DAY_CNT
                          , B.COUPN_CLASS_CD
                          , B.DOW_1_USE_YN
                          , B.DOW_2_USE_YN
                          , B.DOW_3_USE_YN
                          , B.DOW_4_USE_YN
                          , B.DOW_5_USE_YN
                          , B.DOW_6_USE_YN
                          , B.DOW_7_USE_YN
                          , B.MSHP_GRADE_CD
                          , NULL
                          , SYSDATE
                          , 'CRM'  
                          , 'Y'                  
                       FROM CRM_MSHIP_COUPN_BAS B
                      INNER JOIN (SELECT LEVEL LVL FROM DUAL CONNECT BY   #{pubCoupnCnt} >= LEVEL) C ON 1=1 
                      WHERE B.MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo}
                      	AND B.USE_YN = 'Y'
        
    </insert> 
    
    <select id="searchCoupnList" resultType="EzMap">
    	<include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingHeader"/>
    		SELECT /* com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao.searchCoupnList */
			    A.MSHIP_COUPN_BAS_NO
			    , A.COUPN_KND_CD
			    , A.COUPN_TGT_CD
			    , A.FROM_PBLS_STD_DAY
			    , A.TO_PBLS_STD_DAY
			    , A.FROM_USE_STD_DAY
			    , A.TO_USE_STD_DAY
			    , A.COUPN_ISSUE_METH_CD
			    , A.MAX_ISSUE_CNT
			    , A.MAX_USE_CNT
			    , A.MIN_BUY_AMT
			    , A.MAX_DC_AMT
			    , A.FROM_USE_HOUR
			    , A.TO_USE_HOUR
			    , A.USE_YN
			    , A.COUPN_BAS_NM
			    , A.MSHIP_GRADE_CD
			    , B.COUPN_PBLS_HST_SEQ
			    , B.COUPN_PBLS_BAS_NO
			    , B.ITG_CUST_NO
			    , C.CUST_NM
			    , C.MPHON_NO
                , A.REGR_ID
			    <!-- ,  C.MPHON_NO  MPHON_NO --> <!-- 복호화 데이터 많아서 제거 -->
			    , B.ADMT_AMT
			    , B.MSHP_GRADE_CD
			    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = B.STOR_NO) AS STOR_NM
			    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = B.USE_STOR_NO) AS USE_STOR_NM
			    , B.CAMP_NO
			    , B.PROM_NO
			    , B.USE_YN AS ISSU_USE_YN
			    , B.USE_DT
			    , B.AMD_DT
			    , B.REG_DT
			    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS T WHERE T.TOP_COMN_CD = 'MB080' and T.COMN_CD = B.COUPN_TYPE_CD ) COUPN_TYPE_CD_NM
			    <!-- , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS T WHERE T.TOP_COMN_CD = 'PO010' and T.COMN_CD = B.USE_DIV_CD ) USE_DIV_CD_NM -->
			    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS T WHERE T.TOP_COMN_CD = 'MB140' and T.COMN_CD = B.USE_YN ) USE_DIV_CD_NM
			    , CASE
                    WHEN A.USE_STD_DAY_COND_CD = 'Y' THEN TO_CHAR(B.REG_DT , 'YYYY-MM-DD')
                    ELSE TO_CHAR(TO_DATE(A.FROM_USE_STD_DAY,'YYYY-MM-DD'),'YYYY-MM-DD')
			    END COND_FROM_DT
			    , CASE
                    WHEN A.USE_STD_DAY_COND_CD = 'Y' THEN TO_CHAR(B.REG_DT + A.COUPN_USE_POSS_DAY , 'YYYY-MM-DD')
                    ELSE TO_CHAR(TO_DATE(A.TO_USE_STD_DAY,'YYYY-MM-DD'),'YYYY-MM-DD')
			    END COND_TO_DT
			    , CASE
			    	WHEN B.TRNS IS NOT NULL THEN 'Y'
			    	WHEN B.TRNS IS NULL THEN 'N'
			    END GIFT_STATU
			    , B.SALE_AMT
			    , B.ORDR_AMT
			 FROM CRM_MSHIP_COUPN_BAS A JOIN CRM_COUPN_PBLS_HST B   ON A.MSHIP_COUPN_BAS_NO = B.MSHIP_COUPN_BAS_NO  
			   LEFT JOIN CRM_CUST_BAS C ON B.ITG_CUST_NO = C.ITG_CUST_NO
			   LEFT JOIN CRM_STOR_BAS D  ON B.STOR_NO = D.STOR_NO
               
			    
		        <trim prefix="WHERE" prefixOverrides="AND |OR ">
		        	<if test="coupnTypeCd != null and coupnTypeCd != ''">
			         	AND A.COUPN_TYPE_CD =  #{coupnTypeCd}  
			        </if>
		        	<if test="coupnClassCd != null and coupnClassCd != ''">
			         	AND A.COUPN_CLASS_CD =  #{coupnClassCd}  
			        </if>
		        	<if test="coupnTgtCd != null and coupnTgtCd != ''">
			         	AND A.COUPN_TGT_CD =  #{coupnTgtCd}  
			        </if>
		        	<if test="useYn != null and useYn != ''">
			         	AND A.USE_YN =  #{useYn}  
			        </if>
			        <if test="useDivCd != null and useDivCd != ''">
			         	AND B.USE_YN =  #{useDivCd}  
			        </if>
			        <if test="fromUseDt != null and toUseDt != ''">
			         	AND TO_DATE(B.USE_DT, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(#{fromUseDt}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{toUseDt}, 'YYYYMMDDHH24MISS')
			        </if>
			        
			        <if test="fromPblsStdDay != null and toPblsStdDay != '' ">
		                  AND B.REG_DT BETWEEN TO_DATE(#{fromPblsStdDay}, 'YYYY-MM-DD') AND TO_DATE(#{toPblsStdDay}, 'YYYY-MM-DD') +1
		        	</if>
			        
		        	<if test="coupnBasNm != null and coupnBasNm != ''">
			         	AND A.COUPN_BAS_NM LIKE  '%'||  #{coupnBasNm} ||'%' 
			        </if>
		        	<if test="coupnPblsBasNo != null and coupnPblsBasNo != ''">
			         	AND B.COUPN_PBLS_BAS_NO LIKE  '%'||  #{coupnPblsBasNo} ||'%' 
			        </if>
			        <if test="custNm != null and custNm != ''">
			         	AND C.CUST_NM =    #{custNm} 
			        </if>
			        <if test="itgCustNo != null and itgCustNo != ''">
			         	AND C.ITG_CUST_NO =  #{itgCustNo}  
			        </if>
		        	<if test="storNm != null and storNm != ''">
			         	AND D.STOR_NM LIKE  '%'||  #{storNm} ||'%' 
			        </if>
		        	<if test="campNo != null and campNo != ''">
			         	AND B.CAMP_NO = #{campNo} 
			        </if>
			        <if test="promNo != null and promNo != ''">
			         	AND B.PROM_NO  = #{promNo}
			        </if>
		        </trim>
			ORDER BY B.REG_DT DESC
    	<include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingFooter"/>
    </select>
    
    <select id="searchCoupnListCount" resultType="int">
    	SELECT /* com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao.searchCoupnListCount */
			 COUNT(1) AS CNT
			 FROM CRM_MSHIP_COUPN_BAS A JOIN CRM_COUPN_PBLS_HST B   ON A.MSHIP_COUPN_BAS_NO = B.MSHIP_COUPN_BAS_NO  
			   LEFT JOIN CRM_CUST_BAS C ON B.ITG_CUST_NO = C.ITG_CUST_NO
			   LEFT JOIN CRM_STOR_BAS D  ON B.STOR_NO = D.STOR_NO
      
		        <trim prefix="WHERE" prefixOverrides="AND |OR ">
		        	<if test="coupnTypeCd != null and coupnTypeCd != ''">
			         	AND A.COUPN_TYPE_CD =  #{coupnTypeCd}  
			        </if>
		        	<if test="coupnClassCd != null and coupnClassCd != ''">
			         	AND A.COUPN_CLASS_CD =  #{coupnClassCd}  
			        </if>
		        	<if test="coupnTgtCd != null and coupnTgtCd != ''">
			         	AND A.COUPN_TGT_CD =  #{coupnTgtCd}  
			        </if>
		        	<if test="useYn != null and useYn != ''">
			         	AND A.USE_YN =  #{useYn}  
			        </if>
			        <if test="useDivCd != null and useDivCd != ''">
			         	AND B.USE_YN =  #{useDivCd}  
			        </if>
			        <if test="fromUseDt != null and toUseDt != ''">
			         	AND TO_DATE(B.USE_DT, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(#{fromUseDt}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{toUseDt}, 'YYYYMMDDHH24MISS')
			        </if>
			        
			        <if test="fromPblsStdDay != null and toPblsStdDay != '' ">
		                  AND B.REG_DT BETWEEN TO_DATE(#{fromPblsStdDay}, 'YYYY-MM-DD') AND TO_DATE(#{toPblsStdDay}, 'YYYY-MM-DD') +1
		        	</if>
			        
		        	<if test="coupnBasNm != null and coupnBasNm != ''">
			         	AND A.COUPN_BAS_NM LIKE  '%'||  #{coupnBasNm} ||'%' 
			        </if>
		        	<if test="coupnPblsBasNo != null and coupnPblsBasNo != ''">
			         	AND B.COUPN_PBLS_BAS_NO LIKE  '%'||  #{coupnPblsBasNo} ||'%' 
			        </if>
			        <if test="custNm != null and custNm != ''">
			         	AND C.CUST_NM =    #{custNm} 
			        </if>
			        <if test="itgCustNo != null and itgCustNo != ''">
			         	AND C.ITG_CUST_NO =  #{itgCustNo}  
			        </if>
		        	<if test="storNm != null and storNm != ''">
			         	AND D.STOR_NM LIKE  '%'||  #{storNm} ||'%' 
			        </if>
			        <if test="campNo != null and campNo != ''">
			         	AND B.CAMP_NO  = #{campNo}
			        </if>
			        <if test="promNo != null and promNo != ''">
			         	AND B.PROM_NO  =  #{promNo} 
			        </if>
		        </trim>
    </select>
        
    <select id="getDayCoupnCnt" resultType="int">
    	SELECT COUNT(*) AS CNT FROM CRM_COUPN_PBLS_HST WHERE MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo}    
    		AND TO_CHAR(REG_DT,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
    </select> 
    
     <select id="getMemSearchList" resultType="com.ceragem.crm.main.model.CrmCustBasVo" >
     	SELECT /* com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao.getCoupnMemList */ CTB.* FROM (
		     -- 세라체크
		     SELECT * FROM (
		        SELECT A.ITG_CUST_NO , COUNT(1) AS MESR_CNT , 0 AS SETL_AMT , 0 AS EXPRN_CNT  FROM  CRM_CUST_BAS A  
		        JOIN CRM_CUST_CRCK_HST D ON A.ITG_CUST_NO = D.ITG_CUST_NO
		            GROUP BY A.ITG_CUST_NO
		     ) 
		     <trim prefix="WHERE" prefixOverrides="AND">
		     	<choose>
			     	<when test="mesrCntSta != null and mesrCntSta != ''">
						AND MESR_CNT <![CDATA[>=]]> TO_NUMBER(#{mesrCntSta})
					</when>
					<when test="mesrCntEnd != null and mesrCntEnd != ''">
						AND MESR_CNT <![CDATA[<=]]> TO_NUMBER(#{mesrCntEnd})
					</when>
					<otherwise>
						AND MESR_CNT <![CDATA[<]]> 0
					</otherwise>
				</choose>
		     </trim>
		     UNION ALL   
		     --  거래이력
		    SELECT * FROM ( 
		        SELECT A.ITG_CUST_NO ,0 AS MESR_CNT , SUM(SETL_AMT) AS SETL_AMT , 0 AS EXPRN_CNT FROM  CRM_CUST_BAS A  
		            JOIN CRM_CUST_BOS_CNTRT_HST B ON A.ITG_CUST_NO = B.ITG_CUST_NO
		                GROUP BY A.ITG_CUST_NO  
		    )   
		    <trim prefix="WHERE" prefixOverrides="AND">
		    	<choose>
		    		<when test="buyTotAmtSta != null and buyTotAmtSta != ''">
						AND BASS_SALE_AMT <![CDATA[>=]]> TO_NUMBER(#{buyTotAmtSta})
					</when>
					<when test="buyTotAmtEnd != null and buyTotAmtEnd != ''">
						AND BASS_SALE_AMT <![CDATA[<=]]> TO_NUMBER(#{buyTotAmtEnd})
					</when>
					<otherwise>
						AND SETL_AMT <![CDATA[<]]> 0
					</otherwise>
		    	</choose>
		    </trim> 
		    UNION ALL    
		    -- 매장체험
		     SELECT * FROM (    
		         SELECT A.ITG_CUST_NO ,0 AS MESR_CNT , 0 AS SETL_AMT  , COUNT(1) AS EXPRN_CNT FROM  CRM_CUST_BAS A  
		            JOIN CRM_CUST_EXPRN_HST C ON A.ITG_CUST_NO = C.ITG_CUST_NO
		                GROUP BY A.ITG_CUST_NO    
		      ) 
		      <trim prefix="WHERE" prefixOverrides="AND">
		      	<choose>
		      		<when test="storExprnCntSta != null and storExprnCntSta != ''">
						AND EXPRN_CNT <![CDATA[>=]]> TO_NUMBER(#{storExprnCntSta})
					</when>
					<when test="storExprnCntEnd != null and storExprnCntEnd != ''">
						AND EXPRN_CNT <![CDATA[<=]]> TO_NUMBER(#{storExprnCntEnd})
					</when>
					<otherwise>
						AND EXPRN_CNT <![CDATA[<]]> 0
					</otherwise>
		      	</choose>
		      </trim> 
		) TEM 
		JOIN  CRM_CUST_BAS CTB
		ON CTB.ITG_CUST_NO = TEM.ITG_CUST_NO(+)  
			<if test="custNm != null and custNm != ''">
				AND CTB.CUST_NM = #{custNm}
			</if>  
			<if test="itgCustNo != null and itgCustNo != ''">
				AND CTB.ITG_CUST_NO = #{itgCustNo}
			</if>  
			<if test="mshipGradeCd != null and mshipGradeCd != ''">
				AND CTB.MSHIP_GRADE_CD = #{mshipGradeCd}
			</if>
			<if test="gndrCd != null and gndrCd != ''">
				AND CTB.GNDR_CD = #{gndrCd}
			</if>  
		   ORDER BY TEM.ITG_CUST_NO DESC
 
    </select>
    
    <select id="getTargetSearchList" parameterType="EzMap" resultType="EzMap">
    	<include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingHeader"/>
		SELECT 	/* com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao.getTargetSearchList */ 
		    CST.ITG_CUST_NO										/*통합고객번호*/
		    , CST.CUST_NM											/*회원명*/
		    , CST.GNDR_CD											/*성별코드*/
		    , TO_NUMBER(CST.BIRTHDAY) AS BIRTHDAY					/*생년월일*/
		    , (
		        TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - 
		        TO_NUMBER(SUBSTRB(CST.BIRTHDAY, 0, 4))
		    ) AS AGE											/*연령*/
		    , CST.CUST_STATUS_CD									/*고객상태코드*/
		    , CST.CUST_TYPE_CD									/*고객유형코드*/
		    , CST.CUST_DIV_CD										/*고객구분코드*/
		    , CST.DISTRCT_CD										/*지역코드*/
		    , CST.RCMD_STOR_NO									/*추천매장번호*/
		    , CST.MARRY_YN										/*결혼여부*/
		    , CST.FAMLY_REL_CD									/*가족관계코드*/
		    , CST.DWEL_NFPY_CD									/*주거평수코드*/
		    , CST.INTRST_FILD_CD									/*관심분야코드*/
		    , CST.SMS_RCV_AGREE_YN								/*SMS수신동의여부*/
		    , CST.EMAIL_RCV_AGREE_YN								/*이메일수신동의여부*/
		    , CST.PUSH_RCV_AGREE_YN								/*PUSH수신동의여부*/
		    , CST.RCV_RFSL_YN										/*수신거부여부*/
		    , CST.MSHIP_SBSC_YN									/*멤버십가입여부*/
		    , CST.MSHIP_TYPE_CD									/*멤버십유형코드*/
		    , CST.MSHIP_SBSC_DT									/*멤버십가입일시*/
		    , CST.MSHIP_ADVNCMT_SCORE								/*멤버십등급점수*/
		    , NVL(CST.MSHIP_GRADE_CD, '001') AS MSHIP_GRADE_CD	/*멤버십등급코드*/
		    , CST.REG_DT										/*등록일시*/
		    , NVL2(CST.MPHON_BK_DGT_NO, '010-****-'|| CST.MPHON_BK_DGT_NO, '') AS MPHON_NO_MASKING
		    , CST.MSHIP_LOGIN_ID
		   	, ORD.TOT_POINT
		    , ORD.EXPRN_CNT
		    , ORD.EXPRN_DT
		    , ORD.ITEM_NM AS SALE_ITEM
		    , ORD.ORD_DE AS SALE_DT
		    , (SELECT AGREE_YN MARKETING_YN FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = CST.ITG_CUST_NO) A WHERE RNUM = 1)  MARKETING_AGREE_YN
		 FROM ( 
		    	/*회원 메인*/ 
		        SELECT ITG_CUST_NO FROM CRM_CUST_BAS
				    <trim prefix="WHERE" prefixOverrides="AND | OR">
			   			<if test="birthdaySta != null and birthdaySta != ''">
							AND BIRTHDAY <![CDATA[>=]]> TO_NUMBER(#{birthdaySta})
						</if>
						<if test="birthdayEnd != null and birthdayEnd != ''">
							AND BIRTHDAY <![CDATA[<=]]> TO_NUMBER(#{birthdayEnd})
						</if>
						<if test="ageStt != null and ageStt != ''">
							AND (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4)))  <![CDATA[>=]]> TO_NUMBER(#{ageStt})
							AND (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4)))  <![CDATA[<]]> TO_NUMBER(#{ageStt})+10
			 			</if>
			   			<if test="gndrCd != null and gndrCd != ''">
							AND GNDR_CD = #{gndrCd}
						</if>
						<if test="mshipGradeCd != null and mshipGradeCd != ''">
							AND REGEXP_LIKE(MSHIP_GRADE_CD, REPLACE(#{mshipGradeCd}, ',', '|'))
						</if>
						<if test="mshipTypeCd != null and mshipTypeCd != ''">
							AND REGEXP_LIKE(MSHIP_TYPE_CD, REPLACE(#{mshipTypeCd}, ',', '|'))
						</if>
						<if test="custNm != null and custNm != ''">
							AND CUST_NM = #{custNm}
						</if>
						<if test="itgCustNo != null and itgCustNo != ''">
							AND ITG_CUST_NO = #{itgCustNo}
						</if>
						<if test="mphonNo != null and mphonNo != ''">
				            AND MPHON_NO        =       #{mphonNo}
				        </if>
					</trim>
				 <if test="(dealDaySta != null and dealDaySta != '') or (dealDayEnd != null and dealDayEnd != '') or (payTotAmtSta != null and payTotAmtSta != '') or (payTotAmtEnd != null and payTotAmtEnd != '')">
				 	 INTERSECT
				 	 /*거래이력*/
			         SELECT A.ITG_CUST_NO FROM  CRM_CUST_BAS A 
			                JOIN CRM_CUST_BOS_CNTRT_HST B ON A.ITG_CUST_NO = B.ITG_CUST_NO 
			                <trim prefix="WHERE" prefixOverrides="AND">
								<choose>
									<when test="(dealDaySta != null and dealDaySta != '') or (dealDayEnd != null and dealDayEnd != '')">
										<if test="dealDaySta != null and dealDaySta != ''">
											AND ORD_DE <![CDATA[>=]]> #{dealDaySta}
										</if>
										<if test="dealDayEnd != null and dealDayEnd != ''">
											AND ORD_DE <![CDATA[<=]]> #{dealDayEnd}
										</if>
									</when>
									<when test="(payTotAmtSta != null and payTotAmtSta != '') or (payTotAmtEnd != null and payTotAmtEnd != '')">
										<if test="payTotAmtSta != null and payTotAmtSta != ''">
											AND SETL_AMT <![CDATA[>=]]> TO_NUMBER(#{payTotAmtSta})
										</if>
										<if test="payTotAmtEnd != null and payTotAmtEnd != ''">
											AND SETL_AMT <![CDATA[<=]]> TO_NUMBER(#{payTotAmtEnd})
										</if>
									</when>
								</choose>
							</trim>
			                GROUP BY A.ITG_CUST_NO 
				 </if>
				 <if test="(storExprnCntSta != null and storExprnCntSta != '') or (storExprnCntEnd != null and storExprnCntEnd != '')">
					 INTERSECT
					  /*매장체험*/      
			        SELECT ITG_CUST_NO FROM (       
			            SELECT A.ITG_CUST_NO,COUNT(1) AS EXPRN_CNT FROM  CRM_CUST_BAS A 
			                JOIN CRM_CUST_EXPRN_HST C ON A.ITG_CUST_NO = C.ITG_CUST_NO 
			                GROUP BY A.ITG_CUST_NO   
			         )  
			        <trim prefix="WHERE" prefixOverrides="AND">
			        	<choose>
				        	<when test="storExprnCntSta != null and storExprnCntSta != ''">
								AND EXPRN_CNT <![CDATA[>=]]> TO_NUMBER(#{storExprnCntSta})
							</when>
							<when test="storExprnCntEnd != null and storExprnCntEnd != ''">
								AND EXPRN_CNT <![CDATA[<=]]> TO_NUMBER(#{storExprnCntEnd})
							</when>
						</choose>
			        </trim>
				 </if>
				 <if test="(mesrCntSta != null and mesrCntSta != '') or (mesrCntEnd != null and mesrCntEnd != '')">
				 	INTERSECT
				 	/*세라체크*/
			        SELECT ITG_CUST_NO FROM (        
			            SELECT A.ITG_CUST_NO ,COUNT(1) AS MESR_CNT FROM  CRM_CUST_BAS A 
			                JOIN CRM_CUST_CRCK_HST D ON A.ITG_CUST_NO = D.ITG_CUST_NO
			                GROUP BY A.ITG_CUST_NO 
			        )
			        <trim prefix="WHERE" prefixOverrides="AND">
			        	<choose>
				        	<when test="mesrCntSta != null and mesrCntSta != ''">
								AND MESR_CNT <![CDATA[>=]]> TO_NUMBER(#{mesrCntSta})
							</when>
							<when test="mesrCntEnd != null and mesrCntEnd != ''">
								AND MESR_CNT <![CDATA[<=]]> TO_NUMBER(#{mesrCntEnd})
							</when>
						</choose>
			        </trim>
				 </if>
				 <if test="(buyRcmdCntSta != null and buyRcmdCntSta != '') or (buyRcmdCntEnd != null and buyRcmdCntEnd != '')">
				 	INTERSECT
				 	/*추천이력*/
			        SELECT ITG_CUST_NO FROM (        
			            SELECT A.ITG_CUST_NO , RCMD_TYPE_CD ,COUNT(1) AS RCMD_CNT FROM  CRM_CUST_BAS A 
			                JOIN CRM_RCMD_HST D ON A.ITG_CUST_NO = D.ITG_CUST_NO
			                GROUP BY A.ITG_CUST_NO , RCMD_TYPE_CD
			        ) 
			        <trim prefix="WHERE" prefixOverrides="AND">
			        	<choose>
							<when test="(buyRcmdCntSta != null and buyRcmdCntSta != '') or (buyRcmdCntEnd != null and buyRcmdCntEnd != '')">
								AND RCMD_TYPE_CD = '001' 
								<if test="buyRcmdCntSta != null and buyRcmdCntSta != ''">
									AND RCMD_CNT <![CDATA[>=]]> TO_NUMBER(#{buyRcmdCntSta})
								</if>
								<if test="buyRcmdCntEnd != null and buyRcmdCntEnd != ''">
									AND RCMD_CNT <![CDATA[<=]]> TO_NUMBER(#{buyRcmdCntEnd})
								</if>
							</when>
						</choose>
			        </trim>
				 </if>
		) TEM LEFT JOIN CRM_CUST_BAS CST ON (TEM.ITG_CUST_NO = CST.ITG_CUST_NO)
		LEFT JOIN (
			SELECT PLU.*,HST.ITEM_NM,HST.ORD_DE FROM (
			    SELECT 
                    T3.*
                    , NVL(T4.EXPRN_CNT,0) AS EXPRN_CNT
                    , T4.EXPRN_DT
                    FROM (               
                    SELECT 
                     T1.*
                     , NVL(T2.TOTAL_POINT,0) AS TOT_POINT
                     FROM (
                        SELECT CUST.ITG_CUST_NO , MAX(BOS.CNTR_NO) AS CNTR_NO FROM CRM_CUST_BAS CUST 
                                        JOIN CRM_CUST_BOS_CNTRT_HST BOS ON CUST.ITG_CUST_NO = BOS.ITG_CUST_NO
                                    GROUP BY CUST.ITG_CUST_NO
                    ) T1 JOIN (
                        SELECT 
                            CUST.ITG_CUST_NO 
                            , NVL(SUM(
                                        CASE WHEN 0 >= OCCUR_POINT_SCORE THEN OCCUR_POINT_SCORE
                                             WHEN EXTNC_DT IS NOT NULL THEN OCCUR_POINT_SCORE
                                             WHEN TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN VALID_PERD_STA_YMD AND VALID_PERD_END_YMD THEN OCCUR_POINT_SCORE
                                             WHEN VALID_PERD_STA_YMD > TO_CHAR(SYSDATE,'YYYYMMDD') THEN OCCUR_POINT_SCORE
                                             WHEN TO_CHAR(SYSDATE,'YYYYMMDD') > VALID_PERD_END_YMD THEN
                                                  NVL((SELECT NVL(SUM(USE_POINT_SCORE),0) FROM CRM_POINT_USE_REL WHERE OCCUR_POINT_HST_SEQ = POINT_HST_SEQ ),0) 
                                             ELSE 0 END
                            ),0) TOTAL_POINT
                             FROM CRM_CUST_BAS CUST 
                            JOIN CRM_POINT_HST PNT ON CUST.ITG_CUST_NO = PNT.ITG_CUST_NO
                                        GROUP BY CUST.ITG_CUST_NO
                    ) T2 ON T1.ITG_CUST_NO = T2.ITG_CUST_NO(+)  
                ) T3 JOIN (
                    SELECT CUST.ITG_CUST_NO , COUNT(1) AS EXPRN_CNT , MAX(TO_CHAR(EXPRN.REG_DT,'YYYY-MM-DD HH24:MM:SS')) AS EXPRN_DT FROM CRM_CUST_BAS CUST 
                                    JOIN CRM_CUST_EXPRN_HST EXPRN ON CUST.ITG_CUST_NO = EXPRN.ITG_CUST_NO
                                GROUP BY CUST.ITG_CUST_NO
                ) T4 ON  T3.ITG_CUST_NO = T4.ITG_CUST_NO(+)
			) PLU JOIN CRM_CUST_BOS_CNTRT_HST HST ON PLU.CNTR_NO = HST.CNTR_NO
		) ORD ON (TEM.ITG_CUST_NO = ORD.ITG_CUST_NO) 
		ORDER BY CST.CUST_NM
		<include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingFooter"/>
    </select>
    
    <select id="getTargetSearchCount" parameterType="EzMap" resultType="int">
    	SELECT 	/* com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao.getTargetSearchCount */ 
		    COUNT(1) AS CNT
		 FROM ( 
		    /*회원 메인*/ 
	        SELECT ITG_CUST_NO FROM CRM_CUST_BAS
			    <trim prefix="WHERE" prefixOverrides="AND | OR">
		   			<if test="birthdaySta != null and birthdaySta != ''">
						AND BIRTHDAY <![CDATA[>=]]> TO_NUMBER(#{birthdaySta})
					</if>
					<if test="birthdayEnd != null and birthdayEnd != ''">
						AND BIRTHDAY <![CDATA[<=]]> TO_NUMBER(#{birthdayEnd})
					</if>
					<if test="ageStt != null and ageStt != ''">
						AND (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4)))  <![CDATA[>=]]> TO_NUMBER(#{ageStt})
						AND (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4)))  <![CDATA[<]]> TO_NUMBER(#{ageStt})+10
		 			</if>
		   			<if test="gndrCd != null and gndrCd != ''">
						AND GNDR_CD = #{gndrCd}
					</if>
					<if test="mshipGradeCd != null and mshipGradeCd != ''">
						AND REGEXP_LIKE(MSHIP_GRADE_CD, REPLACE(#{mshipGradeCd}, ',', '|'))
					</if>
					<if test="mshipTypeCd != null and mshipTypeCd != ''">
						AND REGEXP_LIKE(MSHIP_TYPE_CD, REPLACE(#{mshipTypeCd}, ',', '|'))
					</if>
					<if test="custNm != null and custNm != ''">
						AND CUST_NM = #{custNm}
					</if>
					<if test="itgCustNo != null and itgCustNo != ''">
						AND ITG_CUST_NO = #{itgCustNo}
					</if>
					<if test="mphonNo != null and mphonNo != ''">
			            AND MPHON_NO        =       #{mphonNo}
			        </if>
				</trim>
			 <if test="(dealDaySta != null and dealDaySta != '') or (dealDayEnd != null and dealDayEnd != '') or (payTotAmtSta != null and payTotAmtSta != '') or (payTotAmtEnd != null and payTotAmtEnd != '')">
			 	 INTERSECT
			 	 /*거래이력*/
		         SELECT A.ITG_CUST_NO FROM  CRM_CUST_BAS A 
		                JOIN CRM_CUST_BOS_CNTRT_HST B ON A.ITG_CUST_NO = B.ITG_CUST_NO 
		                <trim prefix="WHERE" prefixOverrides="AND">
							<choose>
								<when test="(dealDaySta != null and dealDaySta != '') or (dealDayEnd != null and dealDayEnd != '')">
									<if test="dealDaySta != null and dealDaySta != ''">
										AND ORD_DE <![CDATA[>=]]> #{dealDaySta}
									</if>
									<if test="dealDayEnd != null and dealDayEnd != ''">
										AND ORD_DE <![CDATA[<=]]> #{dealDayEnd}
									</if>
								</when>
								<when test="(payTotAmtSta != null and payTotAmtSta != '') or (payTotAmtEnd != null and payTotAmtEnd != '')">
									<if test="payTotAmtSta != null and payTotAmtSta != ''">
										AND SETL_AMT <![CDATA[>=]]> TO_NUMBER(#{payTotAmtSta})
									</if>
									<if test="payTotAmtEnd != null and payTotAmtEnd != ''">
										AND SETL_AMT <![CDATA[<=]]> TO_NUMBER(#{payTotAmtEnd})
									</if>
								</when>
							</choose>
						</trim>
		                GROUP BY A.ITG_CUST_NO 
			 </if>
			 <if test="(storExprnCntSta != null and storExprnCntSta != '') or (storExprnCntEnd != null and storExprnCntEnd != '')">
				 INTERSECT
				  /*매장체험*/      
		        SELECT ITG_CUST_NO FROM (       
		            SELECT A.ITG_CUST_NO,COUNT(1) AS EXPRN_CNT FROM  CRM_CUST_BAS A 
		                JOIN CRM_CUST_EXPRN_HST C ON A.ITG_CUST_NO = C.ITG_CUST_NO 
		                GROUP BY A.ITG_CUST_NO   
		         )  
		        <trim prefix="WHERE" prefixOverrides="AND">
		        	<choose>
			        	<when test="storExprnCntSta != null and storExprnCntSta != ''">
							AND EXPRN_CNT <![CDATA[>=]]> TO_NUMBER(#{storExprnCntSta})
						</when>
						<when test="storExprnCntEnd != null and storExprnCntEnd != ''">
							AND EXPRN_CNT <![CDATA[<=]]> TO_NUMBER(#{storExprnCntEnd})
						</when>
					</choose>
		        </trim>
			 </if>
			 <if test="(mesrCntSta != null and mesrCntSta != '') or (mesrCntEnd != null and mesrCntEnd != '')">
			 	INTERSECT
			 	/*세라체크*/
		        SELECT ITG_CUST_NO FROM (        
		            SELECT A.ITG_CUST_NO ,COUNT(1) AS MESR_CNT FROM  CRM_CUST_BAS A 
		                JOIN CRM_CUST_CRCK_HST D ON A.ITG_CUST_NO = D.ITG_CUST_NO
		                GROUP BY A.ITG_CUST_NO 
		        )
		        <trim prefix="WHERE" prefixOverrides="AND">
		        	<choose>
			        	<when test="mesrCntSta != null and mesrCntSta != ''">
							AND MESR_CNT <![CDATA[>=]]> TO_NUMBER(#{mesrCntSta})
						</when>
						<when test="mesrCntEnd != null and mesrCntEnd != ''">
							AND MESR_CNT <![CDATA[<=]]> TO_NUMBER(#{mesrCntEnd})
						</when>
					</choose>
		        </trim>
			 </if>
			 <if test="(buyRcmdCntSta != null and buyRcmdCntSta != '') or (buyRcmdCntEnd != null and buyRcmdCntEnd != '')">
			 	INTERSECT
			 	/*추천이력*/
		        SELECT ITG_CUST_NO FROM (        
		            SELECT A.ITG_CUST_NO , RCMD_TYPE_CD ,COUNT(1) AS RCMD_CNT FROM  CRM_CUST_BAS A 
		                JOIN CRM_RCMD_HST D ON A.ITG_CUST_NO = D.ITG_CUST_NO
		                GROUP BY A.ITG_CUST_NO , RCMD_TYPE_CD
		        ) 
		        <trim prefix="WHERE" prefixOverrides="AND">
		        	<choose>
						<when test="(buyRcmdCntSta != null and buyRcmdCntSta != '') or (buyRcmdCntEnd != null and buyRcmdCntEnd != '')">
							AND RCMD_TYPE_CD = '001' 
							<if test="buyRcmdCntSta != null and buyRcmdCntSta != ''">
								AND RCMD_CNT <![CDATA[>=]]> TO_NUMBER(#{buyRcmdCntSta})
							</if>
							<if test="buyRcmdCntEnd != null and buyRcmdCntEnd != ''">
								AND RCMD_CNT <![CDATA[<=]]> TO_NUMBER(#{buyRcmdCntEnd})
							</if>
						</when>
					</choose>
		        </trim>
			 </if>
	) TEM LEFT JOIN CRM_CUST_BAS CST ON (TEM.ITG_CUST_NO = CST.ITG_CUST_NO)
    </select>
    
    <select id="getTargetSearchListForAll" parameterType="EzMap" resultType="EzMap">
    	SELECT 	/* com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao.getTargetSearchListForAll */ 
		    CST.ITG_CUST_NO										/*통합고객번호*/
		    , CST.CUST_NM											/*회원명*/
		    , CST.GNDR_CD											/*성별코드*/
		    , TO_NUMBER(CST.BIRTHDAY) AS BIRTHDAY					/*생년월일*/
		    , (
		        TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - 
		        TO_NUMBER(SUBSTRB(CST.BIRTHDAY, 0, 4))
		    ) AS AGE											/*연령*/
		    , CST.CUST_STATUS_CD									/*고객상태코드*/
		    , CST.CUST_TYPE_CD									/*고객유형코드*/
		    , CST.CUST_DIV_CD										/*고객구분코드*/
		    , CST.DISTRCT_CD										/*지역코드*/
		    , CST.RCMD_STOR_NO									/*추천매장번호*/
		    , CST.MARRY_YN										/*결혼여부*/
		    , CST.FAMLY_REL_CD									/*가족관계코드*/
		    , CST.DWEL_NFPY_CD									/*주거평수코드*/
		    , CST.INTRST_FILD_CD									/*관심분야코드*/
		    , CST.SMS_RCV_AGREE_YN								/*SMS수신동의여부*/
		    , CST.EMAIL_RCV_AGREE_YN								/*이메일수신동의여부*/
		    , CST.PUSH_RCV_AGREE_YN								/*PUSH수신동의여부*/
		    , CST.RCV_RFSL_YN										/*수신거부여부*/
		    , CST.MSHIP_SBSC_YN									/*멤버십가입여부*/
		    , CST.MSHIP_TYPE_CD									/*멤버십유형코드*/
		    , CST.MSHIP_SBSC_DT									/*멤버십가입일시*/
		    , CST.MSHIP_ADVNCMT_SCORE								/*멤버십등급점수*/
		    , NVL(CST.MSHIP_GRADE_CD, '001') AS MSHIP_GRADE_CD	/*멤버십등급코드*/
		    , CST.REG_DT										/*등록일시*/
		    , NVL2(CST.MPHON_BK_DGT_NO, '010-****-'|| CST.MPHON_BK_DGT_NO, '') AS MPHON_NO_MASKING
		    , CST.MSHIP_LOGIN_ID
		   	, ORD.TOT_POINT
		    , ORD.EXPRN_CNT
		    , ORD.EXPRN_DT
		    , ORD.ITEM_NM AS SALE_ITEM
		    , ORD.ORD_DE AS SALE_DT
		 FROM ( 
		    	/*회원 메인*/ 
		        SELECT ITG_CUST_NO FROM CRM_CUST_BAS
				    <trim prefix="WHERE" prefixOverrides="AND | OR">
			   			<if test="birthdaySta != null and birthdaySta != ''">
							AND BIRTHDAY <![CDATA[>=]]> TO_NUMBER(#{birthdaySta})
						</if>
						<if test="birthdayEnd != null and birthdayEnd != ''">
							AND BIRTHDAY <![CDATA[<=]]> TO_NUMBER(#{birthdayEnd})
						</if>
						<if test="ageStt != null and ageStt != ''">
							AND (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4)))  <![CDATA[>=]]> TO_NUMBER(#{ageStt})
							AND (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4)))  <![CDATA[<]]> TO_NUMBER(#{ageStt})+10
			 			</if>
			   			<if test="gndrCd != null and gndrCd != ''">
							AND GNDR_CD = #{gndrCd}
						</if>
						<if test="mshipGradeCd != null and mshipGradeCd != ''">
							AND REGEXP_LIKE(MSHIP_GRADE_CD, REPLACE(#{mshipGradeCd}, ',', '|'))
						</if>
						<if test="mshipTypeCd != null and mshipTypeCd != ''">
							AND REGEXP_LIKE(MSHIP_TYPE_CD, REPLACE(#{mshipTypeCd}, ',', '|'))
						</if>
						<if test="custNm != null and custNm != ''">
							AND CUST_NM = #{custNm}
						</if>
						<if test="itgCustNo != null and itgCustNo != ''">
							AND ITG_CUST_NO = #{itgCustNo}
						</if>
					</trim>
				 <if test="(dealDaySta != null and dealDaySta != '') or (dealDayEnd != null and dealDayEnd != '') or (payTotAmtSta != null and payTotAmtSta != '') or (payTotAmtEnd != null and payTotAmtEnd != '')">
				 	 INTERSECT
				 	 /*거래이력*/
			         SELECT A.ITG_CUST_NO FROM  CRM_CUST_BAS A 
			                JOIN CRM_CUST_BOS_CNTRT_HST B ON A.ITG_CUST_NO = B.ITG_CUST_NO 
			                <trim prefix="WHERE" prefixOverrides="AND">
								<choose>
									<when test="(dealDaySta != null and dealDaySta != '') or (dealDayEnd != null and dealDayEnd != '')">
										<if test="dealDaySta != null and dealDaySta != ''">
											AND ORD_DE <![CDATA[>=]]> #{dealDaySta}
										</if>
										<if test="dealDayEnd != null and dealDayEnd != ''">
											AND ORD_DE <![CDATA[<=]]> #{dealDayEnd}
										</if>
									</when>
									<when test="(payTotAmtSta != null and payTotAmtSta != '') or (payTotAmtEnd != null and payTotAmtEnd != '')">
										<if test="payTotAmtSta != null and payTotAmtSta != ''">
											AND SETL_AMT <![CDATA[>=]]> TO_NUMBER(#{payTotAmtSta})
										</if>
										<if test="payTotAmtEnd != null and payTotAmtEnd != ''">
											AND SETL_AMT <![CDATA[<=]]> TO_NUMBER(#{payTotAmtEnd})
										</if>
									</when>
								</choose>
							</trim>
			                GROUP BY A.ITG_CUST_NO 
				 </if>
				 <if test="(storExprnCntSta != null and storExprnCntSta != '') or (storExprnCntEnd != null and storExprnCntEnd != '')">
					 INTERSECT
					  /*매장체험*/      
			        SELECT ITG_CUST_NO FROM (       
			            SELECT A.ITG_CUST_NO,COUNT(1) AS EXPRN_CNT FROM  CRM_CUST_BAS A 
			                JOIN CRM_CUST_EXPRN_HST C ON A.ITG_CUST_NO = C.ITG_CUST_NO 
			                GROUP BY A.ITG_CUST_NO   
			         )  
			        <trim prefix="WHERE" prefixOverrides="AND">
			        	<choose>
				        	<when test="storExprnCntSta != null and storExprnCntSta != ''">
								AND EXPRN_CNT <![CDATA[>=]]> TO_NUMBER(#{storExprnCntSta})
							</when>
							<when test="storExprnCntEnd != null and storExprnCntEnd != ''">
								AND EXPRN_CNT <![CDATA[<=]]> TO_NUMBER(#{storExprnCntEnd})
							</when>
						</choose>
			        </trim>
				 </if>
				 <if test="(mesrCntSta != null and mesrCntSta != '') or (mesrCntEnd != null and mesrCntEnd != '')">
				 	INTERSECT
				 	/*세라체크*/
			        SELECT ITG_CUST_NO FROM (        
			            SELECT A.ITG_CUST_NO ,COUNT(1) AS MESR_CNT FROM  CRM_CUST_BAS A 
			                JOIN CRM_CUST_CRCK_HST D ON A.ITG_CUST_NO = D.ITG_CUST_NO
			                GROUP BY A.ITG_CUST_NO 
			        )
			        <trim prefix="WHERE" prefixOverrides="AND">
			        	<choose>
				        	<when test="mesrCntSta != null and mesrCntSta != ''">
								AND MESR_CNT <![CDATA[>=]]> TO_NUMBER(#{mesrCntSta})
							</when>
							<when test="mesrCntEnd != null and mesrCntEnd != ''">
								AND MESR_CNT <![CDATA[<=]]> TO_NUMBER(#{mesrCntEnd})
							</when>
						</choose>
			        </trim>
				 </if>
				 <if test="(buyRcmdCntSta != null and buyRcmdCntSta != '') or (buyRcmdCntEnd != null and buyRcmdCntEnd != '')">
				 	INTERSECT
				 	/*추천이력*/
			        SELECT ITG_CUST_NO FROM (        
			            SELECT A.ITG_CUST_NO , RCMD_TYPE_CD ,COUNT(1) AS RCMD_CNT FROM  CRM_CUST_BAS A 
			                JOIN CRM_RCMD_HST D ON A.ITG_CUST_NO = D.ITG_CUST_NO
			                GROUP BY A.ITG_CUST_NO , RCMD_TYPE_CD
			        ) 
			        <trim prefix="WHERE" prefixOverrides="AND">
			        	<choose>
							<when test="(buyRcmdCntSta != null and buyRcmdCntSta != '') or (buyRcmdCntEnd != null and buyRcmdCntEnd != '')">
								AND RCMD_TYPE_CD = '001' 
								<if test="buyRcmdCntSta != null and buyRcmdCntSta != ''">
									AND RCMD_CNT <![CDATA[>=]]> TO_NUMBER(#{buyRcmdCntSta})
								</if>
								<if test="buyRcmdCntEnd != null and buyRcmdCntEnd != ''">
									AND RCMD_CNT <![CDATA[<=]]> TO_NUMBER(#{buyRcmdCntEnd})
								</if>
							</when>
						</choose>
			        </trim>
				 </if>
		) TEM LEFT JOIN CRM_CUST_BAS CST ON (TEM.ITG_CUST_NO = CST.ITG_CUST_NO)
		LEFT JOIN (
			SELECT PLU.*,HST.ITEM_NM,HST.ORD_DE FROM (
			    SELECT
			        CUST_BOS.ITG_CUST_NO
			        , CUST_POINT.TOT_POINT
			        , CUST_EXPRN.EXPRN_CNT
			        , CUST_EXPRN.EXPRN_DT
			        , MAX(CUST_BOS.CNTR_NO) AS CNTR_NO
			     FROM (
			        SELECT CUST.ITG_CUST_NO , MAX(BOS.CNTR_NO) AS CNTR_NO FROM CRM_CUST_BAS CUST 
			            JOIN CRM_CUST_BOS_CNTRT_HST BOS ON CUST.ITG_CUST_NO = BOS.ITG_CUST_NO
			        GROUP BY CUST.ITG_CUST_NO
			    ) CUST_BOS LEFT JOIN (
			        SELECT CUST.ITG_CUST_NO ,SUM(POINT.OCCUR_POINT_SCORE) AS TOT_POINT FROM CRM_CUST_BAS CUST 
			            JOIN CRM_POINT_HST POINT ON CUST.ITG_CUST_NO = POINT.ITG_CUST_NO 
			        GROUP BY CUST.ITG_CUST_NO
			    ) CUST_POINT ON CUST_BOS.ITG_CUST_NO = CUST_POINT.ITG_CUST_NO 
			    LEFT JOIN (
			        SELECT CUST.ITG_CUST_NO,COUNT(1) AS EXPRN_CNT , MAX(EXPRN.REG_DT) AS EXPRN_DT FROM CRM_CUST_BAS CUST 
			            JOIN CRM_CUST_EXPRN_HST EXPRN ON CUST.ITG_CUST_NO = EXPRN.ITG_CUST_NO
			        GROUP BY CUST.ITG_CUST_NO
			    ) CUST_EXPRN ON CUST_POINT.ITG_CUST_NO = CUST_EXPRN.ITG_CUST_NO 
			        GROUP BY CUST_BOS.ITG_CUST_NO ,CUST_EXPRN.EXPRN_CNT , CUST_POINT.TOT_POINT , CUST_EXPRN.EXPRN_DT
			) PLU JOIN CRM_CUST_BOS_CNTRT_HST HST ON PLU.CNTR_NO = HST.CNTR_NO
		) ORD ON (TEM.ITG_CUST_NO = ORD.ITG_CUST_NO) 
		ORDER BY CST.CUST_NM
    </select>
	
	<select id="getCustGrpNo" resultType="String">
		SELECT A.ITG_CUST_NO AS CUST_NO FROM CRM_CUST_GRP_TGTR_REL A JOIN CRM_CUST_GRP_BAS B ON A.CUST_GRP_NO = B.CUST_GRP_NO
                AND B.CUST_GRP_NO IN
                <foreach item="item" index="index" collection="custGrpNo" open="(" separator="," close=")">
                   #{item}
                </foreach>
	</select>
	
	<select id="getCoupnNoForCust" resultType="String">
		SELECT COUPN_PBLS_BAS_NO FROM (  
	        SELECT MAX(COUPN_PBLS_HST_SEQ) AS COUPN_PBLS_HST_SEQ FROM CRM_COUPN_PBLS_HST WHERE MSHIP_COUPN_BAS_NO  = #{mshipCoupnBasNo} 
                AND ITG_CUST_NO = #{itgCustNo}
           ) TEM JOIN CRM_COUPN_PBLS_HST HST ON  TEM.COUPN_PBLS_HST_SEQ =   HST.COUPN_PBLS_HST_SEQ 
	</select>
	
	<select id="getCoupnInfoForLast" resultType="EzMap">
		SELECT 
			BAS.MSHIP_COUPN_BAS_NO
		    , BAS.COUPN_KND_CD
		    , BAS.COUPN_TGT_CD
		    , BAS.COUPN_APPLY_DIV_CD1
		    , BAS.COUPN_APPLY_DIV_CD2
		    , BAS.FROM_PBLS_STD_DAY
		    , BAS.TO_PBLS_STD_DAY
		    , BAS.USE_STD_DAY_COND_CD
		    , BAS.FROM_USE_STD_DAY
		    , BAS.TO_USE_STD_DAY
		    , BAS.GIFT_POSS_YN
		    , BAS.COUPN_ISSUE_METH_CD
		    , BAS.ISSUE_RSTRTN_CNT
		    , BAS.MAX_ISSUE_CNT
		    , BAS.MAX_USE_CNT
		    , BAS.APPLY_AMT
		    , BAS.APPLY_RATE
		    , BAS.MIN_BUY_AMT
		    , BAS.MAX_DC_AMT
		    , BAS.APPLY_CNT
		    , BAS.PRSNTTN_GODS_CD
		    , BAS.USE_DOW
		    , BAS.FROM_USE_HOUR
		    , BAS.TO_USE_HOUR
		    , BAS.USE_CHL_CD
		    , BAS.DUP_USE_YN
		    , BAS.USE_DIV_CD
		    , BAS.USE_YN
		    , BAS.COUPN_BAS_NM
		    , BAS.COUPN_BAS_CTNTS
		    , BAS.ADMT_METH_CD
		    , BAS.ADMT_AMT
		    , BAS.COUPN_TYPE_CD
		    , BAS.COUPN_USE_POSS_DAY
		    , BAS.COUPN_USE_POSS_YN
		    , BAS.COUPN_USE_POSS_DAY_CNT
		    , BAS.COUPN_CLASS_CD
		    , BAS.DOW_1_USE_YN
		    , BAS.DOW_2_USE_YN
		    , BAS.DOW_3_USE_YN
		    , BAS.DOW_4_USE_YN
		    , BAS.DOW_5_USE_YN
		    , BAS.DOW_6_USE_YN
		    , BAS.DOW_7_USE_YN
		    , BAS.MSHP_GRADE_CD
		    , BAS.REGR_ID
		    , TO_CHAR(BAS.REG_DT,'YYYY-MM-DD HH24:MM:SS') AS REG_DT
		    , BAS.REG_CHL_CD
		    , BAS.MSHIP_GRADE_CD
		    , BAS.CPRT_CMP_NO
		    , BAS.APPLY_MSHP_GRADE_CTNTS
		 FROM (		
			SELECT MAX(MSHIP_COUPN_BAS_NO) AS MSHIP_COUPN_BAS_NO FROM CRM_MSHIP_COUPN_BAS 
			) TEM JOIN CRM_MSHIP_COUPN_BAS BAS ON TEM.MSHIP_COUPN_BAS_NO = BAS.MSHIP_COUPN_BAS_NO
		
	</select>
	
	<select id="getCoupnInfo" resultType="EzMap">
		SELECT 
			BAS.MSHIP_COUPN_BAS_NO
		    , BAS.COUPN_KND_CD
		    , BAS.COUPN_TGT_CD
		    , BAS.COUPN_APPLY_DIV_CD1
		    , BAS.COUPN_APPLY_DIV_CD2
		    , BAS.FROM_PBLS_STD_DAY
		    , BAS.TO_PBLS_STD_DAY
		    , BAS.USE_STD_DAY_COND_CD
		    , BAS.FROM_USE_STD_DAY
		    , BAS.TO_USE_STD_DAY
		    , BAS.GIFT_POSS_YN
		    , BAS.COUPN_ISSUE_METH_CD
		    , BAS.ISSUE_RSTRTN_CNT
		    , BAS.MAX_ISSUE_CNT
		    , BAS.MAX_USE_CNT
		    , BAS.APPLY_AMT
		    , BAS.APPLY_RATE
		    , BAS.MIN_BUY_AMT
		    , BAS.MAX_DC_AMT
		    , BAS.APPLY_CNT
		    , BAS.PRSNTTN_GODS_CD
		    , BAS.USE_DOW
		    , BAS.FROM_USE_HOUR
		    , BAS.TO_USE_HOUR
		    , BAS.USE_CHL_CD
		    , BAS.DUP_USE_YN
		    , BAS.USE_DIV_CD
		    , BAS.USE_YN
		    , BAS.COUPN_BAS_NM
		    , BAS.COUPN_BAS_CTNTS
		    , BAS.ADMT_METH_CD
		    , BAS.ADMT_AMT
		    , BAS.COUPN_TYPE_CD
		    , BAS.COUPN_USE_POSS_DAY
		    , BAS.COUPN_USE_POSS_YN
		    , BAS.COUPN_USE_POSS_DAY_CNT
		    , BAS.COUPN_CLASS_CD
		    , BAS.DOW_1_USE_YN
		    , BAS.DOW_2_USE_YN
		    , BAS.DOW_3_USE_YN
		    , BAS.DOW_4_USE_YN
		    , BAS.DOW_5_USE_YN
		    , BAS.DOW_6_USE_YN
		    , BAS.DOW_7_USE_YN
		    , BAS.MSHP_GRADE_CD
		    , BAS.REGR_ID
		    , TO_CHAR(BAS.REG_DT,'YYYY-MM-DD HH24:MM:SS') AS REG_DT
		    , BAS.REG_CHL_CD
		    , BAS.MSHIP_GRADE_CD
		    , BAS.CPRT_CMP_NO
		    , BAS.APPLY_MSHP_GRADE_CTNTS
		 FROM CRM_MSHIP_COUPN_BAS BAS
		 	WHERE BAS.MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo}
		
	</select>
	
	<select id="getCustPhonDecrypt" resultType="EzMap">
		SELECT 
			ITG_CUST_NO
			,  MPHON_NO AS MPHON_NO
			,  EMAIL_ADDR AS EMAIL_ADDR
			FROM CRM_CUST_BAS 
			<trim prefix="WHERE" prefixOverrides="AND |OR ">  
	             <if test="custHp != null and custHp != ''">
	                 	AND ITG_CUST_NO IN
	            	<foreach item="item" index="index" collection="custHp" open="(" separator="," close=")">
	                    #{item}
	                </foreach>
	    		 </if>
      		</trim>
	</select>
	
	<!-- sendMsgCoupn -->
	<insert id="sendMsgCoupn">
		<foreach collection="sendData" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO EON.SMS_SND_LIST  ( 
				CLIENT
				, CAMPAIGN_ID
				, MEMBER_SEQ
				, REV_ID
				, REV_NM
				, DESTEL
				, DUMMY10
				, COUPON_NUM 
				, DUMMY1
				, MAPPING1	/*이름*/
				, MAPPING3  /*쿠폰명*/
				, MAPPING4  /*유효기간*/        
				, MAPPING5  /*쿠폰번호*/        
			) VALUES(
				#{item.clientId}                    
				, #{item.campId}                         
				, #{item.memSeq} 
				, #{item.itgCustNo}
				, #{item.custNm}
				, #{item.mphonNo}	
				, #{item.itgCustNo} 
				, #{item.coupnPblsBasNo}
				, #{item.campId} 
				, #{item.custNm}
				, #{item.coupnBasNm}
				, #{item.condToDt}
				, #{item.coupnPblsBasNo}
			)
		</foreach>
	</insert>
	
	<update  id="copyStor">
		INSERT INTO CRM_MSHIP_APPLY_STOR_REL (
		    STOR_NO
		    , AMDR_ID
		    , AMD_DT
		    , REGR_ID
		    , REG_DT
		    , REG_CHL_CD
		    , STOR_REL_BAS_NO
		    , MSHIP_COUPN_BAS_NO
		)
		SELECT 
		    STOR_NO
		    , AMDR_ID
		    , SYSDATE AS AMD_DT
		    , REGR_ID
		    , SYSDATE AS REG_DT
		    , REG_CHL_CD
		    , FN_CRM_AUTO_SEQ('STR') AS STOR_REL_BAS_NO
		    , #{newMshipCoupnBasNo} AS MSHIP_COUPN_BAS_NO
		 FROM CRM_MSHIP_APPLY_STOR_REL where MSHIP_COUPN_BAS_NO = #{oldMshipCoupnBasNo}
	</update >
	
	<update  id="copyGods">
		INSERT INTO CRM_MSHIP_APPLY_GODS_REL (
		    GODS_NO
		    , AMDR_ID
		    , AMD_DT
		    , REGR_ID 
		    , REG_DT
		    , REG_CHL_CD
		    , GODS_REL_BAS_NO
		    , MSHIP_COUPN_BAS_NO
		 )
		 SELECT 
		    GODS_NO
		    , AMDR_ID
		    , SYSDATE AS AMD_DT
		    , REGR_ID 
		    , SYSDATE AS REG_DT
		    , REG_CHL_CD
		    , FN_CRM_AUTO_SEQ('MRB') AS GODS_REL_BAS_NO
		    , #{newMshipCoupnBasNo} AS MSHIP_COUPN_BAS_NO
		 FROM CRM_MSHIP_APPLY_GODS_REL WHERE MSHIP_COUPN_BAS_NO = #{oldMshipCoupnBasNo}
	</update >
	
	<update  id="copyChls">
		INSERT INTO CRM_MSHIP_APPLY_CHL_REL (
		    APPLY_CHL_CD
		    , AMDR_ID
		    , AMD_DT
		    , REGR_ID 
		    , REG_DT
		    , REG_CHL_CD
		    , CHL_REL_BAS_NO
		    , MSHIP_COUPN_BAS_NO
		 )
		 SELECT 
		    APPLY_CHL_CD
		    , AMDR_ID
		    , SYSDATE AS AMD_DT
		    , REGR_ID 
		    , SYSDATE AS REG_DT
		    , REG_CHL_CD
		    , FN_CRM_AUTO_SEQ('CHL') AS CHL_REL_BAS_NO
		    , #{newMshipCoupnBasNo} AS MSHIP_COUPN_BAS_NO
		 FROM CRM_MSHIP_APPLY_CHL_REL WHERE MSHIP_COUPN_BAS_NO = #{oldMshipCoupnBasNo}
	</update >
	
	<select id="getCustCoupnCnt" resultType="int">
		SELECT COUNT(1) AS CNT FROM CRM_COUPN_PBLS_HST
			WHERE MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo} AND ITG_CUST_NO = #{custNo} 
 	</select>
 	
 	<insert id="pubCouponAll">
    
			INSERT ALL /* crmMshipCoupnBas.pubCouponAll */  INTO  CRM_COUPN_PBLS_HST ( 
                            COUPN_PBLS_HST_SEQ
                            , COUPN_PBLS_BAS_NO
                            , ITG_CUST_NO
                            , MSHIP_COUPN_BAS_NO
                            , COUPN_KND_CD
                            , COUPN_TGT_CD
                            , COUPN_APPLY_DIV_CD1
                            , COUPN_APPLY_DIV_CD2
                            , FROM_PBLS_STD_DAY
                            , TO_PBLS_STD_DAY
                            , USE_STD_DAY_COND_CD
                            , FROM_USE_STD_DAY
                            , TO_USE_STD_DAY
                            , GIFT_POSS_YN
                            , COUPN_ISSUE_METH_CD
                            , ISSUE_RSTRTN_CNT
                            , MAX_ISSUE_CNT
                            , MAX_USE_CNT
                            , APPLY_AMT
                            , APPLY_RATE
                            , MIN_BUY_AMT
                            , MAX_DC_AMT
                            , APPLY_CNT
                            , PRSNTTN_GODS_CD
                            , USE_DOW
                            , FROM_USE_HOUR
                            , TO_USE_HOUR
                            , USE_CHL_CD
                            , DUP_USE_YN
                            , USE_DIV_CD
                            , USE_YN
                            , COUPN_BAS_NM
                            , COUPN_BAS_CTNTS
                            , ADMT_METH_CD
                            , ADMT_AMT
                            , COUPN_TYPE_CD
                            , COUPN_USE_POSS_DAY
                            , COUPN_USE_POSS_YN
                            , COUPN_USE_POSS_DAY_CNT
                            , COUPN_CLASS_CD
                            , DOW_1_USE_YN
                            , DOW_2_USE_YN
                            , DOW_3_USE_YN
                            , DOW_4_USE_YN
                            , DOW_5_USE_YN
                            , DOW_6_USE_YN
                            , DOW_7_USE_YN
                            , MSHP_GRADE_CD
                            , REGR_ID
                            , REG_DT
                            , REG_CHL_CD
                            , STOR_NO )
                       
                    SELECT 
                        FN_CRM_AUTO_SEQ('CPN') 
                          , FN_LUHN_COUPN( DECODE(B.MSHIP_GRADE_CD, '001', '01', '002', '51', '003', '05', NULL, '05') ) COUPN_PBLS_BAS_NO 
                          , C.ITG_CUST_NO                        
                          , B.MSHIP_COUPN_BAS_NO
                          , B.COUPN_KND_CD
                          , B.COUPN_TGT_CD
                          , B.COUPN_APPLY_DIV_CD1
                          , B.COUPN_APPLY_DIV_CD2
                          , B.FROM_PBLS_STD_DAY
                          , B.TO_PBLS_STD_DAY
                          , B.USE_STD_DAY_COND_CD
                          , B.FROM_USE_STD_DAY
                          , B.TO_USE_STD_DAY
                          , B.GIFT_POSS_YN
                          , B.COUPN_ISSUE_METH_CD
                          , B.ISSUE_RSTRTN_CNT
                          , B.MAX_ISSUE_CNT
                          , B.MAX_USE_CNT
                          , B.APPLY_AMT
                          , B.APPLY_RATE
                          , B.MIN_BUY_AMT
                          , B.MAX_DC_AMT
                          , B.APPLY_CNT
                          , B.PRSNTTN_GODS_CD
                          , B.USE_DOW
                          , B.FROM_USE_HOUR
                          , B.TO_USE_HOUR
                          , B.USE_CHL_CD
                          , B.DUP_USE_YN
                          , B.USE_DIV_CD
                          , 'N' AS USE_YN
                          , B.COUPN_BAS_NM
                          , B.COUPN_BAS_CTNTS
                          , B.ADMT_METH_CD
                          , B.ADMT_AMT
                          , B.COUPN_TYPE_CD
                          , B.COUPN_USE_POSS_DAY
                          , B.COUPN_USE_POSS_YN
                          , B.COUPN_USE_POSS_DAY_CNT
                          , B.COUPN_CLASS_CD
                          , B.DOW_1_USE_YN
                          , B.DOW_2_USE_YN
                          , B.DOW_3_USE_YN
                          , B.DOW_4_USE_YN
                          , B.DOW_5_USE_YN
                          , B.DOW_6_USE_YN
                          , B.DOW_7_USE_YN
                          , B.MSHP_GRADE_CD
                          , NULL
                          , SYSDATE
                          , 'CRM' 
                          , '141359'                   
                       FROM CRM_MSHIP_COUPN_BAS B
                      INNER JOIN (
					   <choose>
						<when test = "custNo != null and custNo != '' and grpNo == null">
							SELECT ITG_CUST_NO  FROM CRM_CUST_BAS WHERE ('CUST',ITG_CUST_NO ) IN 
							<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
								('CUST',#{item})
							</foreach>
						</when>
						<when test="custNo != null and custNo != '' and grpNo != null">
							SELECT ITG_CUST_NO  FROM CRM_CUST_BAS WHERE ('CUST',ITG_CUST_NO ) IN 
							<foreach item="item" index="index" collection="custNo" open="(" separator="," close=")">
								('CUST',#{item})
							</foreach>
							UNION
							SELECT 
								DISTINCT A.ITG_CUST_NO 
								FROM CRM_CUST_GRP_TGTR_REL A JOIN CRM_CUST_GRP_BAS B ON A.CUST_GRP_NO = B.CUST_GRP_NO
								AND B.CUST_GRP_NO IN 
								<foreach item="item" index="index" collection="grpNo" open="(" separator="," close=")">
									#{item}
								</foreach>
						</when>
						<otherwise>
							SELECT 
								DISTINCT A.ITG_CUST_NO 
								FROM CRM_CUST_GRP_TGTR_REL A JOIN CRM_CUST_GRP_BAS B ON A.CUST_GRP_NO = B.CUST_GRP_NO
								AND B.CUST_GRP_NO IN 
								<foreach item="item" index="index" collection="grpNo" open="(" separator="," close=")">
									#{item}
								</foreach>
						</otherwise>
					</choose>
					  ) C ON 1=1 
					  JOIN CRM_CUST_BAS D ON C.ITG_CUST_NO = D.ITG_CUST_NO
                      WHERE B.MSHIP_COUPN_BAS_NO = #{mshipCoupnBasNo}
                      	AND B.USE_YN = 'Y'
					<if test="cpnMshpGradeCd != null and cpnMshpGradeCd != ''">
		                 	AND D.MSHIP_GRADE_CD IN
		            	<foreach item="item" index="index" collection="cpnMshpGradeCd" open="(" separator="," close=")">
		                    #{item}
		                </foreach>
		    		</if>
		       		<if test="coupnTgtCd eq '001'">
							AND D.MSHIP_SBSC_YN = 'Y' 
		      		</if>
		      		<if test="coupnTgtCd eq '002'">
							AND D.MSHIP_SBSC_YN != 'Y' 
		      		</if>
        
    </insert> 
    
    <select id="searchCoupnListAll" resultType="EzMap">
    		SELECT /* com.ceragem.crm.memship.dao.CrmMshipCoupnBasDao.searchCoupnListAll */
			    A.MSHIP_COUPN_BAS_NO
			    , A.COUPN_BAS_NM
			    , B.COUPN_PBLS_BAS_NO
			    , B.ITG_CUST_NO
			    , C.CUST_NM
			    ,  C.MPHON_NO  MPHON_NO
			    ,  C.EMAIL_ADDR AS EMAIL_ADDR
			    , B.USE_YN AS ISSU_USE_YN
			    , CASE
                    WHEN A.USE_STD_DAY_COND_CD = 'Y' THEN TO_CHAR(B.REG_DT + A.COUPN_USE_POSS_DAY , 'YYYY-MM-DD')
                    ELSE TO_CHAR(TO_DATE(A.TO_USE_STD_DAY,'YYYY-MM-DD'),'YYYY-MM-DD')
			    END COND_TO_DT
			 FROM CRM_MSHIP_COUPN_BAS A JOIN CRM_COUPN_PBLS_HST B   ON A.MSHIP_COUPN_BAS_NO = B.MSHIP_COUPN_BAS_NO  
			   LEFT JOIN CRM_CUST_BAS C ON B.ITG_CUST_NO = C.ITG_CUST_NO
			   LEFT JOIN CRM_STOR_BAS D  ON B.STOR_NO = D.STOR_NO
			    
		        <trim prefix="WHERE" prefixOverrides="AND |OR ">
		        	<if test="coupnTypeCd != null and coupnTypeCd != ''">
			         	AND A.COUPN_TYPE_CD =  #{coupnTypeCd}  
			        </if>
		        	<if test="coupnClassCd != null and coupnClassCd != ''">
			         	AND A.COUPN_CLASS_CD =  #{coupnClassCd}  
			        </if>
		        	<if test="coupnTgtCd != null and coupnTgtCd != ''">
			         	AND A.COUPN_TGT_CD =  #{coupnTgtCd}  
			        </if>
		        	<if test="useYn != null and useYn != ''">
			         	AND A.USE_YN =  #{useYn}  
			        </if>
			        <if test="useDivCd != null and useDivCd != ''">
			         	AND B.USE_YN =  #{useDivCd}  
			        </if>
			        <if test="fromUseDt != null and toUseDt != ''">
			         	AND TO_DATE(B.USE_DT, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(#{fromUseDt}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{toUseDt}, 'YYYYMMDDHH24MISS')
			        </if>
			        
			        <if test="fromPblsStdDay != null and toPblsStdDay != '' ">
		                  AND B.REG_DT BETWEEN TO_DATE(#{fromPblsStdDay}, 'YYYY-MM-DD') AND TO_DATE(#{toPblsStdDay}, 'YYYY-MM-DD') +1
		        	</if>
			        
		        	<if test="coupnBasNm != null and coupnBasNm != ''">
			         	AND A.COUPN_BAS_NM LIKE  '%'||  #{coupnBasNm} ||'%' 
			        </if>
		        	<if test="coupnPblsBasNo != null and coupnPblsBasNo != ''">
			         	AND B.COUPN_PBLS_BAS_NO LIKE  '%'||  #{coupnPblsBasNo} ||'%' 
			        </if>
			        <if test="custNm != null and custNm != ''">
			         	AND C.CUST_NM =    #{custNm} 
			        </if>
			        <if test="itgCustNo != null and itgCustNo != ''">
			         	AND C.ITG_CUST_NO =  #{itgCustNo}  
			        </if>
		        	<if test="storNm != null and storNm != ''">
			         	AND D.STOR_NM LIKE  '%'||  #{storNm} ||'%' 
			        </if>
		        	<if test="campNo != null and campNo != ''">
			         	AND B.CAMP_NO LIKE  '%'||  #{campNo} ||'%' 
			        </if>
		        </trim>
			ORDER BY B.REG_DT DESC
    </select>
</mapper>
