<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceragem.crm.cst.dao.CusStatDao">
    <sql id="sqlPkConditions">
                WHERE ITG_CUST_NO       =       #{itgCustNo}
    </sql>
    <sql id="sqlCols">
                      ITG_CUST_NO                    /*통합고객번호        */
                    , CORP_DIV_YN                    /*법인구분여부        */
                    , CUST_NM                    /*고객명        */
                    , GNDR_CD                    /*성별코드        */
                    , BIRTHDAY                    /*생년월일        */
                    , BIZ_NO                    /*사업자등록번호        */
                    , CORP_REG_NO                    /*법인등록번호        */
                    , CORP_TEL_NO                    /*법인전화번호        */
                    , FORN_YN                    /*외국인여부        */
                    , REP_NM                    /*대표명        */
                    , MPHON_NO                    /*이동전화번호        */
                    , MPHON_BK_DGT_NO                    /*이동전화뒤자리번호        */
                    , EMAIL_ADDR                    /*이메일주소        */
                    , PIC_NM                    /*담당자명        */
                    , PIC_MPHON_NO                    /*담당자이동전화번호        */
                    , PIC_MPHON_BK_DGT_NO                    /*담당자이동전화뒤자리번호        */
                    , PIC_EMAIL_ADDR                    /*담당자이메일주소        */
                    , INDI_INFO_VALID_PERD_STA_DT                    /*개인정보유효기간시작일시        */
                    , INDI_INFO_VALID_PERD_END_DT                    /*개인정보유효기간종료일시        */
                    , CUST_STATUS_CD                    /*고객상태코드        */
                    , CUST_STATUS_CHNG_DT                    /*고객상태변경일시        */
                    , CUST_INFO_CHNG_DT                    /*고객정보변경일시        */
                    , CUST_TYPE_CD                    /*고객유형코드        */
                    , CUST_DIV_CD                    /*고객구분코드        */
                    , DISTRCT_CD                    /*지역코드        */
                    , ZIP_CD                    /*우편번호        */
                    , ADDR_1_CTNTS                    /*주소1내용        */
                    , ADDR_2_CTNTS                    /*주소2내용        */
                    , RCMD_STOR_NO                    /*추천매장번호        */
                    , RCMDR_CUST_NO                    /*추천인고객번호        */
                    , RCMD_EXECVDEMP_NO                    /*추천임직원번호        */
                    , MARRY_YN                    /*결혼여부        */
                    , REP_HSHLD_NO                    /*대표가구번호        */
                    , FAMLY_REL_CD                    /*가족관계코드        */
                    , DWEL_NFPY_CD                    /*주거평수코드        */
                    , INTRST_FILD_CD                    /*관심분야코드        */
                    , REP_GODS_NO                    /*대표제품번호        */
                    , REP_USE_CUST_DIV_CD                    /*대표사용고객구분코드        */
                    , SMS_RCV_AGREE_YN                    /*SMS수신동의여부        */
                    , SMS_RCV_AGREE_DT                    /*SMS수신동의일시        */
                    , SMS_RCV_AGREE_CHL_CD                    /*SMS수신동의채널코드        */
                    , EMAIL_RCV_AGREE_YN                    /*이메일수신동의여부        */
                    , EMAIL_RCV_AGREE_DT                    /*이메일수신동의일시        */
                    , EMAIL_RCV_AGREE_CHL_CD                    /*이메일수신동의채널코드        */
                    , ALRM_TK_RCV_AGREE_YN                    /*알람톡수신동의여부        */
                    , ALRM_TK_RCV_AGREE_DT                    /*알람톡수신동의일시        */
                    , ALRM_TK_RCV_AGREE_CHL_CD                    /*알람톡수신동의채널코드        */
                    , PUSH_RCV_AGREE_YN                    /*PUSH수신동의여부        */
                    , PUSH_RCV_AGREE_DT                    /*PUSH수신동의일시        */
                    , PUSH_RCV_AGREE_CHL_CD                    /*PUSH수신동의채널코드        */
                    , CI_CERTF_YN                    /*CI인증여부        */
                    , CI                    /*CI        */
                    , DI_CERTF_YN                    /*DI인증여부        */
                    , DI                    /*DI        */
                    , RCV_RFSL_YN                    /*수신거부여부        */
                    , CPRT_CMP_NO                    /*제휴회사번호        */
                    , MSHIP_SBSC_YN                    /*멤버십가입여부        */
                    , MSHIP_LOGIN_ID                    /*멤버십로그인ID        */
                    , MSHIP_SBT_NO                    /*멤버십대체번호        */
                    , MSHIP_LOGIN_PWD                    /*멤버십로그인비밀번호        */
                    , MSHIP_LAST_LOGIN_DT                    /*멤버십최종로그인일시        */
                    , MSHIP_LAST_LOGIN_IP_ADDR                    /*멤버십최종로그인IP주소        */
                    , MSHIP_LAST_STOR_VISIT_DT                    /*멤버십최종매장방문일시        */
                    , MSHIP_LAST_VISIT_STOR_NO                    /*멤버십최종방문매장번호        */
                    , MSHIP_TYPE_CD                    /*멤버십유형코드        */
                    , MSHIP_SBSC_DT                    /*멤버십가입일시        */
                    , MSHIP_GRADE_CD                    /*멤버십등급코드        */
                    , MSHIP_GRADE_CHNG_DT                    /*멤버십등급변경일시        */
                    , MSHIP_INFO_CHNG_DT                    /*멤버십정보변경일시        */
                    , MSHIP_INFO_CONFR_EXECVDEMP_NO                    /*멤버십정보확인자임직원번호        */
                    , CPRT_EXECVDEMP_NO                    /*제휴임직원번호        */
                    , MSHIP_LEAVE_DT                    /*멤버십탈퇴일시        */
                    , EXTNC_POINT_LMT_SCORE                    /*소멸포인트한도점수        */
                    , ACCUM_POINT_LMT_SCORE                    /*적립포인트한도점수        */
                    , REMAIN_POINT_SCORE                    /*잔여포인트점수        */
                    , MSHIP_CHL_CD                    /*멤버십채널코드        */
                    , BLLK_REG_STOR_NO                    /*블랙등록매장번호        */
                    , BLLKMSHP_YN                    /*블랙회원여부        */
                    , BLLK_REG_CHL_CD                    /*블랙등록채널코드        */
                    , BLLK_REG_WHY_CTNTS                    /*블랙등록사유내용        */
                    , BLLK_REG_DT                    /*블랙등록일시        */
                    , PRTCT_FAMLY_YN                    /*보호가족여부        */
                    , MSHIP_EXPT_GRADE_CD                    /*멤버십예정등급코드        */
                    , MSHIP_ADVNCMT_SCORE                    /*멤버십승급점수        */
                    , AMDR_ID                    /*수정자ID        */
                    , DORM_PERD_CD                    /*휴면기간코드        */
                    , AMD_DT                    /*수정일시        */
                    , REGR_ID                    /*등록자ID        */
                    , REG_DT                    /*등록일시        */
                    , REG_CHL_CD                    /*등록채널코드        공통코드 : S000        [CRM : CRM , CTC : 상담 , AS : AS , SAP : SAP , POS : POS , BOS : BOS , MEM : 멤버십 , CERA : 세라체크 , DNA : 세라DNA , IoT : IoT]*/
    </sql>
    <sql id="sqlSelectCols">
                      A.ITG_CUST_NO                    /*통합고객번호        */
                    , A.CORP_DIV_YN                    /*법인구분여부        */
                    , A.CUST_NM                    /*고객명        */
                    , A.GNDR_CD                    /*성별코드        */
                    , A.BIRTHDAY                    /*생년월일        */
                    , A.BIZ_NO                    /*사업자등록번호        */
                    , A.CORP_REG_NO                    /*법인등록번호        */
                    , A.CORP_TEL_NO                    /*법인전화번호        */
                    , A.FORN_YN                    /*외국인여부        */
                    , A.REP_NM                    /*대표명        */
                    , A.MPHON_NO                    /*이동전화번호        */
                    , A.MPHON_BK_DGT_NO                    /*이동전화뒤자리번호        */
                    , A.EMAIL_ADDR                    /*이메일주소        */
                    , A.PIC_NM                    /*담당자명        */
                    , A.PIC_MPHON_NO                    /*담당자이동전화번호        */
                    , A.PIC_MPHON_BK_DGT_NO                    /*담당자이동전화뒤자리번호        */
                    , A.PIC_EMAIL_ADDR                    /*담당자이메일주소        */
                    , TO_CHAR(A.INDI_INFO_VALID_PERD_STA_DT,'YYYYMMDDHH24MISS')    INDI_INFO_VALID_PERD_STA_DT                    /*개인정보유효기간시작일시        */
                    , TO_CHAR(A.INDI_INFO_VALID_PERD_END_DT,'YYYYMMDDHH24MISS')    INDI_INFO_VALID_PERD_END_DT                    /*개인정보유효기간종료일시        */
                    , A.CUST_STATUS_CD                    /*고객상태코드        */
                    , TO_CHAR(A.CUST_STATUS_CHNG_DT,'YYYYMMDDHH24MISS')    CUST_STATUS_CHNG_DT                    /*고객상태변경일시        */
                    , TO_CHAR(A.CUST_INFO_CHNG_DT,'YYYYMMDDHH24MISS')    CUST_INFO_CHNG_DT                    /*고객정보변경일시        */
                    , A.CUST_TYPE_CD                    /*고객유형코드        */
                    , A.CUST_DIV_CD                    /*고객구분코드        */
                    , A.DISTRCT_CD                    /*지역코드        */
                    , A.ZIP_CD                    /*우편번호        */
                    , A.ADDR_1_CTNTS                    /*주소1내용        */
                    , A.ADDR_2_CTNTS                    /*주소2내용        */
                    , A.RCMD_STOR_NO                    /*추천매장번호        */
                    , A.RCMDR_CUST_NO                    /*추천인고객번호        */
                    , A.RCMD_EXECVDEMP_NO                    /*추천임직원번호        */
                    , A.MARRY_YN                    /*결혼여부        */
                    , A.REP_HSHLD_NO                    /*대표가구번호        */
                    , A.FAMLY_REL_CD                    /*가족관계코드        */
                    , A.DWEL_NFPY_CD                    /*주거평수코드        */
                    , A.INTRST_FILD_CD                    /*관심분야코드        */
                    , A.REP_GODS_NO                    /*대표제품번호        */
                    , A.REP_USE_CUST_DIV_CD                    /*대표사용고객구분코드        */
                    , A.SMS_RCV_AGREE_YN                    /*SMS수신동의여부        */
                    , TO_CHAR(A.SMS_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    SMS_RCV_AGREE_DT                    /*SMS수신동의일시        */
                    , A.SMS_RCV_AGREE_CHL_CD                    /*SMS수신동의채널코드        */
                    , A.EMAIL_RCV_AGREE_YN                    /*이메일수신동의여부        */
                    , TO_CHAR(A.EMAIL_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    EMAIL_RCV_AGREE_DT                    /*이메일수신동의일시        */
                    , A.EMAIL_RCV_AGREE_CHL_CD                    /*이메일수신동의채널코드        */
                    , A.ALRM_TK_RCV_AGREE_YN                    /*알람톡수신동의여부        */
                    , TO_CHAR(A.ALRM_TK_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    ALRM_TK_RCV_AGREE_DT                    /*알람톡수신동의일시        */
                    , A.ALRM_TK_RCV_AGREE_CHL_CD                    /*알람톡수신동의채널코드        */
                    , A.PUSH_RCV_AGREE_YN                    /*PUSH수신동의여부        */
                    , TO_CHAR(A.PUSH_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    PUSH_RCV_AGREE_DT                    /*PUSH수신동의일시        */
                    , A.PUSH_RCV_AGREE_CHL_CD                    /*PUSH수신동의채널코드        */
                    , A.CI_CERTF_YN                    /*CI인증여부        */
                    , A.CI                    /*CI        */
                    , A.DI_CERTF_YN                    /*DI인증여부        */
                    , A.DI                    /*DI        */
                    , A.RCV_RFSL_YN                    /*수신거부여부        */
                    , A.CPRT_CMP_NO                    /*제휴회사번호        */
                    , A.MSHIP_SBSC_YN                    /*멤버십가입여부        */
                    , A.MSHIP_LOGIN_ID                    /*멤버십로그인ID        */
                    , A.MSHIP_SBT_NO                    /*멤버십대체번호        */
                    , A.MSHIP_LOGIN_PWD                    /*멤버십로그인비밀번호        */
                    , TO_CHAR(A.MSHIP_LAST_LOGIN_DT,'YYYYMMDDHH24MISS')    MSHIP_LAST_LOGIN_DT                    /*멤버십최종로그인일시        */
                    , A.MSHIP_LAST_LOGIN_IP_ADDR                    /*멤버십최종로그인IP주소        */
                    , TO_CHAR(A.MSHIP_LAST_STOR_VISIT_DT,'YYYYMMDDHH24MISS')    MSHIP_LAST_STOR_VISIT_DT                    /*멤버십최종매장방문일시        */
                    , A.MSHIP_LAST_VISIT_STOR_NO                    /*멤버십최종방문매장번호        */
                    , A.MSHIP_TYPE_CD                    /*멤버십유형코드        */
                    , TO_CHAR(A.MSHIP_SBSC_DT,'YYYYMMDDHH24MISS')    MSHIP_SBSC_DT                    /*멤버십가입일시        */
                    , A.MSHIP_GRADE_CD                    /*멤버십등급코드        */
                    , TO_CHAR(A.MSHIP_GRADE_CHNG_DT,'YYYYMMDDHH24MISS')    MSHIP_GRADE_CHNG_DT                    /*멤버십등급변경일시        */
                    , TO_CHAR(A.MSHIP_INFO_CHNG_DT,'YYYYMMDDHH24MISS')    MSHIP_INFO_CHNG_DT                    /*멤버십정보변경일시        */
                    , A.MSHIP_INFO_CONFR_EXECVDEMP_NO                    /*멤버십정보확인자임직원번호        */
                    , A.CPRT_EXECVDEMP_NO                    /*제휴임직원번호        */
                    , TO_CHAR(A.MSHIP_LEAVE_DT,'YYYYMMDDHH24MISS')    MSHIP_LEAVE_DT                    /*멤버십탈퇴일시        */
                    , A.EXTNC_POINT_LMT_SCORE                    /*소멸포인트한도점수        */
                    , A.ACCUM_POINT_LMT_SCORE                    /*적립포인트한도점수        */
                    , A.REMAIN_POINT_SCORE                    /*잔여포인트점수        */
                    , A.MSHIP_CHL_CD                    /*멤버십채널코드        */
                    , A.BLLK_REG_STOR_NO                    /*블랙등록매장번호        */
                    , A.BLLKMSHP_YN                    /*블랙회원여부        */
                    , A.BLLK_REG_CHL_CD                    /*블랙등록채널코드        */
                    , A.BLLK_REG_WHY_CTNTS                    /*블랙등록사유내용        */
                    , TO_CHAR(A.BLLK_REG_DT,'YYYYMMDDHH24MISS')    BLLK_REG_DT                    /*블랙등록일시        */
                    , A.PRTCT_FAMLY_YN                    /*보호가족여부        */
                    , A.MSHIP_EXPT_GRADE_CD                    /*멤버십예정등급코드        */
                    , A.MSHIP_ADVNCMT_SCORE                    /*멤버십승급점수        */
                    , A.AMDR_ID                    /*수정자ID        */
                    , A.DORM_PERD_CD                    /*휴면기간코드        */
                    , TO_CHAR(A.AMD_DT,'YYYYMMDDHH24MISS')    AMD_DT                    /*수정일시        */
                    , A.REGR_ID                    /*등록자ID        */
                    , TO_CHAR(A.REG_DT,'YYYYMMDDHH24MISS')    REG_DT                    /*등록일시        */
                    , A.REG_CHL_CD                    /*등록채널코드        공통코드 : S000        [CRM : CRM , CTC : 상담 , AS : AS , SAP : SAP , POS : POS , BOS : BOS , MEM : 멤버십 , CERA : 세라체크 , DNA : 세라DNA , IoT : IoT]*/
    </sql>
    <sql id="sqlConditions">
        <where>
            <if test="itgCustNo != null and itgCustNo != ''">
                      AND A.ITG_CUST_NO     =       #{itgCustNo}
            </if>
            <if test="corpDivYn != null and corpDivYn != ''">
                      AND A.CORP_DIV_YN     =       #{corpDivYn}
            </if>
            <if test="custNm != null and custNm != ''">
                      AND A.CUST_NM         =       #{custNm}
            </if>
            <if test="gndrCd != null and gndrCd != ''">
                <choose>
                    <when test="gndrCd instanceof String">
                        AND A.GNDR_CD         =       #{gndrCd}
                    </when>
                    <otherwise>
                        AND A.GNDR_CD         IN
                        <foreach item="item" index="index" collection="gndrCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="birthday != null and birthday != ''">
                      AND A.BIRTHDAY        =       #{birthday}
            </if>
            <if test="bizNo != null and bizNo != ''">
                      AND A.BIZ_NO          =       #{bizNo}
            </if>
            <if test="corpRegNo != null and corpRegNo != ''">
                      AND A.CORP_REG_NO     =       #{corpRegNo}
            </if>
            <if test="corpTelNo != null and corpTelNo != ''">
                      AND A.CORP_TEL_NO     =       #{corpTelNo}
            </if>
            <if test="fornYn != null and fornYn != ''">
                      AND A.FORN_YN         =       #{fornYn}
            </if>
            <if test="repNm != null and repNm != ''">
                      AND A.REP_NM          =       #{repNm}
            </if>
            <if test="mphonNo != null and mphonNo != ''">
                      AND A.MPHON_NO        =       #{mphonNo}
            </if>
            <if test="mphonBkDgtNo != null and mphonBkDgtNo != ''">
                      AND A.MPHON_BK_DGT_NO =       #{mphonBkDgtNo}
            </if>
            <if test="emailAddr != null and emailAddr != ''">
                      AND A.EMAIL_ADDR      =       #{emailAddr}
            </if>
            <if test="picNm != null and picNm != ''">
                      AND A.PIC_NM          =       #{picNm}
            </if>
            <if test="picMphonNo != null and picMphonNo != ''">
                      AND A.PIC_MPHON_NO    =       #{picMphonNo}
            </if>
            <if test="picMphonBkDgtNo != null and picMphonBkDgtNo != ''">
                      AND A.PIC_MPHON_BK_DGT_NO=       #{picMphonBkDgtNo}
            </if>
            <if test="picEmailAddr != null and picEmailAddr != ''">
                      AND A.PIC_EMAIL_ADDR  =       #{picEmailAddr}
            </if>
            <if test="indiInfoValidPerdStaDt != null and indiInfoValidPerdStaDt != ''">
                      AND A.INDI_INFO_VALID_PERD_STA_DT=       TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="indiInfoValidPerdEndDt != null and indiInfoValidPerdEndDt != ''">
                      AND A.INDI_INFO_VALID_PERD_END_DT=       TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="custStatusCd != null and custStatusCd != ''">
                <choose>
                    <when test="custStatusCd instanceof String">
                        AND A.CUST_STATUS_CD  =       #{custStatusCd}
                    </when>
                    <otherwise>
                        AND A.CUST_STATUS_CD  IN
                        <foreach item="item" index="index" collection="custStatusCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="custStatusChngDt != null and custStatusChngDt != ''">
                      AND A.CUST_STATUS_CHNG_DT=       TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="custInfoChngDt != null and custInfoChngDt != ''">
                      AND A.CUST_INFO_CHNG_DT=       TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="custTypeCd != null and custTypeCd != ''">
                <choose>
                    <when test="custTypeCd instanceof String">
                        AND A.CUST_TYPE_CD    =       #{custTypeCd}
                    </when>
                    <otherwise>
                        AND A.CUST_TYPE_CD    IN
                        <foreach item="item" index="index" collection="custTypeCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="custDivCd != null and custDivCd != ''">
                <choose>
                    <when test="custDivCd instanceof String">
                        AND A.CUST_DIV_CD     =       #{custDivCd}
                    </when>
                    <otherwise>
                        AND A.CUST_DIV_CD     IN
                        <foreach item="item" index="index" collection="custDivCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="distrctCd != null and distrctCd != ''">
                <choose>
                    <when test="distrctCd instanceof String">
                        AND A.DISTRCT_CD      =       #{distrctCd}
                    </when>
                    <otherwise>
                        AND A.DISTRCT_CD      IN
                        <foreach item="item" index="index" collection="distrctCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="zipCd != null and zipCd != ''">
                <choose>
                    <when test="zipCd instanceof String">
                        AND A.ZIP_CD          =       #{zipCd}
                    </when>
                    <otherwise>
                        AND A.ZIP_CD          IN
                        <foreach item="item" index="index" collection="zipCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="addr1Ctnts != null and addr1Ctnts != ''">
                      AND A.ADDR_1_CTNTS    =       #{addr1Ctnts}
            </if>
            <if test="addr2Ctnts != null and addr2Ctnts != ''">
                      AND A.ADDR_2_CTNTS    =       #{addr2Ctnts}
            </if>
            <if test="rcmdStorNo != null and rcmdStorNo != ''">
                      AND A.RCMD_STOR_NO    =       #{rcmdStorNo}
            </if>
            <if test="rcmdrCustNo != null and rcmdrCustNo != ''">
                      AND A.RCMDR_CUST_NO   =       #{rcmdrCustNo}
            </if>
            <if test="rcmdExecvdempNo != null and rcmdExecvdempNo != ''">
                      AND A.RCMD_EXECVDEMP_NO=       #{rcmdExecvdempNo}
            </if>
            <if test="marryYn != null and marryYn != ''">
                      AND A.MARRY_YN        =       #{marryYn}
            </if>
            <if test="repHshldNo != null and repHshldNo != ''">
                      AND A.REP_HSHLD_NO    =       #{repHshldNo}
            </if>
            <if test="famlyRelCd != null and famlyRelCd != ''">
                <choose>
                    <when test="famlyRelCd instanceof String">
                        AND A.FAMLY_REL_CD    =       #{famlyRelCd}
                    </when>
                    <otherwise>
                        AND A.FAMLY_REL_CD    IN
                        <foreach item="item" index="index" collection="famlyRelCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="dwelNfpyCd != null and dwelNfpyCd != ''">
                <choose>
                    <when test="dwelNfpyCd instanceof String">
                        AND A.DWEL_NFPY_CD    =       #{dwelNfpyCd}
                    </when>
                    <otherwise>
                        AND A.DWEL_NFPY_CD    IN
                        <foreach item="item" index="index" collection="dwelNfpyCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="intrstFildCd != null and intrstFildCd != ''">
                <choose>
                    <when test="intrstFildCd instanceof String">
                        AND A.INTRST_FILD_CD  =       #{intrstFildCd}
                    </when>
                    <otherwise>
                        AND A.INTRST_FILD_CD  IN
                        <foreach item="item" index="index" collection="intrstFildCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="repGodsNo != null and repGodsNo != ''">
                      AND A.REP_GODS_NO     =       #{repGodsNo}
            </if>
            <if test="repUseCustDivCd != null and repUseCustDivCd != ''">
                <choose>
                    <when test="repUseCustDivCd instanceof String">
                        AND A.REP_USE_CUST_DIV_CD=       #{repUseCustDivCd}
                    </when>
                    <otherwise>
                        AND A.REP_USE_CUST_DIV_CDIN
                        <foreach item="item" index="index" collection="repUseCustDivCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="smsRcvAgreeYn != null and smsRcvAgreeYn != ''">
                      AND A.SMS_RCV_AGREE_YN=       #{smsRcvAgreeYn}
            </if>
            <if test="smsRcvAgreeDt != null and smsRcvAgreeDt != ''">
                      AND A.SMS_RCV_AGREE_DT=       TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="smsRcvAgreeChlCd != null and smsRcvAgreeChlCd != ''">
                <choose>
                    <when test="smsRcvAgreeChlCd instanceof String">
                        AND A.SMS_RCV_AGREE_CHL_CD=       #{smsRcvAgreeChlCd}
                    </when>
                    <otherwise>
                        AND A.SMS_RCV_AGREE_CHL_CDIN
                        <foreach item="item" index="index" collection="smsRcvAgreeChlCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="emailRcvAgreeYn != null and emailRcvAgreeYn != ''">
                      AND A.EMAIL_RCV_AGREE_YN=       #{emailRcvAgreeYn}
            </if>
            <if test="emailRcvAgreeDt != null and emailRcvAgreeDt != ''">
                      AND A.EMAIL_RCV_AGREE_DT=       TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="emailRcvAgreeChlCd != null and emailRcvAgreeChlCd != ''">
                <choose>
                    <when test="emailRcvAgreeChlCd instanceof String">
                        AND A.EMAIL_RCV_AGREE_CHL_CD=       #{emailRcvAgreeChlCd}
                    </when>
                    <otherwise>
                        AND A.EMAIL_RCV_AGREE_CHL_CDIN
                        <foreach item="item" index="index" collection="emailRcvAgreeChlCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="alrmTkRcvAgreeYn != null and alrmTkRcvAgreeYn != ''">
                      AND A.ALRM_TK_RCV_AGREE_YN=       #{alrmTkRcvAgreeYn}
            </if>
            <if test="alrmTkRcvAgreeDt != null and alrmTkRcvAgreeDt != ''">
                      AND A.ALRM_TK_RCV_AGREE_DT=       TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="alrmTkRcvAgreeChlCd != null and alrmTkRcvAgreeChlCd != ''">
                <choose>
                    <when test="alrmTkRcvAgreeChlCd instanceof String">
                        AND A.ALRM_TK_RCV_AGREE_CHL_CD=       #{alrmTkRcvAgreeChlCd}
                    </when>
                    <otherwise>
                        AND A.ALRM_TK_RCV_AGREE_CHL_CDIN
                        <foreach item="item" index="index" collection="alrmTkRcvAgreeChlCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="pushRcvAgreeYn != null and pushRcvAgreeYn != ''">
                      AND A.PUSH_RCV_AGREE_YN=       #{pushRcvAgreeYn}
            </if>
            <if test="pushRcvAgreeDt != null and pushRcvAgreeDt != ''">
                      AND A.PUSH_RCV_AGREE_DT=       TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="pushRcvAgreeChlCd != null and pushRcvAgreeChlCd != ''">
                <choose>
                    <when test="pushRcvAgreeChlCd instanceof String">
                        AND A.PUSH_RCV_AGREE_CHL_CD=       #{pushRcvAgreeChlCd}
                    </when>
                    <otherwise>
                        AND A.PUSH_RCV_AGREE_CHL_CDIN
                        <foreach item="item" index="index" collection="pushRcvAgreeChlCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="ciCertfYn != null and ciCertfYn != ''">
                      AND A.CI_CERTF_YN     =       #{ciCertfYn}
            </if>
            <if test="ci != null and ci != ''">
                      AND A.CI              =       #{ci}
            </if>
            <if test="diCertfYn != null and diCertfYn != ''">
                      AND A.DI_CERTF_YN     =       #{diCertfYn}
            </if>
            <if test="di != null and di != ''">
                      AND A.DI              =       #{di}
            </if>
            <if test="rcvRfslYn != null and rcvRfslYn != ''">
                      AND A.RCV_RFSL_YN     =       #{rcvRfslYn}
            </if>
            <if test="cprtCmpNo != null and cprtCmpNo != ''">
                      AND A.CPRT_CMP_NO     =       #{cprtCmpNo}
            </if>
            <if test="mshipSbscYn != null and mshipSbscYn != ''">
                      AND A.MSHIP_SBSC_YN   =       #{mshipSbscYn}
            </if>
            <if test="mshipLoginId != null and mshipLoginId != ''">
                      AND A.MSHIP_LOGIN_ID  =       #{mshipLoginId}
            </if>
            <if test="mshipSbtNo != null and mshipSbtNo != ''">
                      AND A.MSHIP_SBT_NO    =       #{mshipSbtNo}
            </if>
            <if test="mshipLoginPwd != null and mshipLoginPwd != ''">
                      AND A.MSHIP_LOGIN_PWD =       #{mshipLoginPwd}
            </if>
            <if test="mshipLastLoginDt != null and mshipLastLoginDt != ''">
                      AND A.MSHIP_LAST_LOGIN_DT=       TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="mshipLastLoginIpAddr != null and mshipLastLoginIpAddr != ''">
                      AND A.MSHIP_LAST_LOGIN_IP_ADDR=       #{mshipLastLoginIpAddr}
            </if>
            <if test="mshipLastStorVisitDt != null and mshipLastStorVisitDt != ''">
                      AND A.MSHIP_LAST_STOR_VISIT_DT=       TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="mshipLastVisitStorNo != null and mshipLastVisitStorNo != ''">
                      AND A.MSHIP_LAST_VISIT_STOR_NO=       #{mshipLastVisitStorNo}
            </if>
            <if test="mshipTypeCd != null and mshipTypeCd != ''">
                <choose>
                    <when test="mshipTypeCd instanceof String">
                        AND A.MSHIP_TYPE_CD   =       #{mshipTypeCd}
                    </when>
                    <otherwise>
                        AND A.MSHIP_TYPE_CD   IN
                        <foreach item="item" index="index" collection="mshipTypeCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="mshipSbscDt != null and mshipSbscDt != ''">
                      AND A.MSHIP_SBSC_DT   =       TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="mshipGradeCd != null and mshipGradeCd != ''">
                <choose>
                    <when test="mshipGradeCd instanceof String">
                        AND A.MSHIP_GRADE_CD  =       #{mshipGradeCd}
                    </when>
                    <otherwise>
                        AND A.MSHIP_GRADE_CD  IN
                        <foreach item="item" index="index" collection="mshipGradeCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="mshipGradeChngDt != null and mshipGradeChngDt != ''">
                      AND A.MSHIP_GRADE_CHNG_DT=       TO_DATE(#{mshipGradeChngDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="mshipInfoChngDt != null and mshipInfoChngDt != ''">
                      AND A.MSHIP_INFO_CHNG_DT=       TO_DATE(#{mshipInfoChngDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="mshipInfoConfrExecvdempNo != null and mshipInfoConfrExecvdempNo != ''">
                      AND A.MSHIP_INFO_CONFR_EXECVDEMP_NO=       #{mshipInfoConfrExecvdempNo}
            </if>
            <if test="cprtExecvdempNo != null and cprtExecvdempNo != ''">
                      AND A.CPRT_EXECVDEMP_NO=       #{cprtExecvdempNo}
            </if>
            <if test="mshipLeaveDt != null and mshipLeaveDt != ''">
                      AND A.MSHIP_LEAVE_DT  =       TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="extncPointLmtScore != null and extncPointLmtScore != ''">
                      AND A.EXTNC_POINT_LMT_SCORE=       #{extncPointLmtScore}
            </if>
            <if test="accumPointLmtScore != null and accumPointLmtScore != ''">
                      AND A.ACCUM_POINT_LMT_SCORE=       #{accumPointLmtScore}
            </if>
            <if test="remainPointScore != null and remainPointScore != ''">
                      AND A.REMAIN_POINT_SCORE=       #{remainPointScore}
            </if>
            <if test="mshipChlCd != null and mshipChlCd != ''">
                <choose>
                    <when test="mshipChlCd instanceof String">
                        AND A.MSHIP_CHL_CD    =       #{mshipChlCd}
                    </when>
                    <otherwise>
                        AND A.MSHIP_CHL_CD    IN
                        <foreach item="item" index="index" collection="mshipChlCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="bllkRegStorNo != null and bllkRegStorNo != ''">
                      AND A.BLLK_REG_STOR_NO=       #{bllkRegStorNo}
            </if>
            <if test="bllkmshpYn != null and bllkmshpYn != ''">
                      AND A.BLLKMSHP_YN     =       #{bllkmshpYn}
            </if>
            <if test="bllkRegChlCd != null and bllkRegChlCd != ''">
                <choose>
                    <when test="bllkRegChlCd instanceof String">
                        AND A.BLLK_REG_CHL_CD =       #{bllkRegChlCd}
                    </when>
                    <otherwise>
                        AND A.BLLK_REG_CHL_CD IN
                        <foreach item="item" index="index" collection="bllkRegChlCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="bllkRegWhyCtnts != null and bllkRegWhyCtnts != ''">
                      AND A.BLLK_REG_WHY_CTNTS=       #{bllkRegWhyCtnts}
            </if>
            <if test="bllkRegDt != null and bllkRegDt != ''">
                      AND A.BLLK_REG_DT     =       TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="prtctFamlyYn != null and prtctFamlyYn != ''">
                      AND A.PRTCT_FAMLY_YN  =       #{prtctFamlyYn}
            </if>
            <if test="mshipExptGradeCd != null and mshipExptGradeCd != ''">
                <choose>
                    <when test="mshipExptGradeCd instanceof String">
                        AND A.MSHIP_EXPT_GRADE_CD=       #{mshipExptGradeCd}
                    </when>
                    <otherwise>
                        AND A.MSHIP_EXPT_GRADE_CDIN
                        <foreach item="item" index="index" collection="mshipExptGradeCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="mshipAdvncmtScore != null and mshipAdvncmtScore != ''">
                      AND A.MSHIP_ADVNCMT_SCORE=       #{mshipAdvncmtScore}
            </if>
            <if test="dormPerdCd != null and dormPerdCd != ''">
                <choose>
                    <when test="dormPerdCd instanceof String">
                        AND A.DORM_PERD_CD    =       #{dormPerdCd}
                    </when>
                    <otherwise>
                        AND A.DORM_PERD_CD    IN
                        <foreach item="item" index="index" collection="dormPerdCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="regChlCd != null and regChlCd != ''">
                <choose>
                    <when test="regChlCd instanceof String">
                        AND A.REG_CHL_CD      =       #{regChlCd}
                    </when>
                    <otherwise>
                        AND A.REG_CHL_CD      IN
                        <foreach item="item" index="index" collection="regChlCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </where>
    </sql>
    <sql id="sqlOrderBy">
        <choose>
            <when test="colSortName ==null or colSortName == ''">
                ORDER BY      REG_DT DESC
            </when>
            <when test="colSortName.equals('itgCustNo')">
                ORDER BY      ITG_CUST_NO
            </when>
            <when test="colSortName.equals('corpDivYn')">
                ORDER BY      CORP_DIV_YN
            </when>
            <when test="colSortName.equals('custNm')">
                ORDER BY      CUST_NM
            </when>
            <when test="colSortName.equals('gndrCd')">
                ORDER BY      GNDR_CD
            </when>
            <when test="colSortName.equals('birthday')">
                ORDER BY      BIRTHDAY
            </when>
            <when test="colSortName.equals('bizNo')">
                ORDER BY      BIZ_NO
            </when>
            <when test="colSortName.equals('corpRegNo')">
                ORDER BY      CORP_REG_NO
            </when>
            <when test="colSortName.equals('corpTelNo')">
                ORDER BY      CORP_TEL_NO
            </when>
            <when test="colSortName.equals('fornYn')">
                ORDER BY      FORN_YN
            </when>
            <when test="colSortName.equals('repNm')">
                ORDER BY      REP_NM
            </when>
            <when test="colSortName.equals('mphonNo')">
                ORDER BY      MPHON_NO
            </when>
            <when test="colSortName.equals('mphonBkDgtNo')">
                ORDER BY      MPHON_BK_DGT_NO
            </when>
            <when test="colSortName.equals('emailAddr')">
                ORDER BY      EMAIL_ADDR
            </when>
            <when test="colSortName.equals('picNm')">
                ORDER BY      PIC_NM
            </when>
            <when test="colSortName.equals('picMphonNo')">
                ORDER BY      PIC_MPHON_NO
            </when>
            <when test="colSortName.equals('picMphonBkDgtNo')">
                ORDER BY      PIC_MPHON_BK_DGT_NO
            </when>
            <when test="colSortName.equals('picEmailAddr')">
                ORDER BY      PIC_EMAIL_ADDR
            </when>
            <when test="colSortName.equals('indiInfoValidPerdStaDt')">
                ORDER BY      INDI_INFO_VALID_PERD_STA_DT
            </when>
            <when test="colSortName.equals('indiInfoValidPerdEndDt')">
                ORDER BY      INDI_INFO_VALID_PERD_END_DT
            </when>
            <when test="colSortName.equals('custStatusCd')">
                ORDER BY      CUST_STATUS_CD
            </when>
            <when test="colSortName.equals('custStatusChngDt')">
                ORDER BY      CUST_STATUS_CHNG_DT
            </when>
            <when test="colSortName.equals('custInfoChngDt')">
                ORDER BY      CUST_INFO_CHNG_DT
            </when>
            <when test="colSortName.equals('custTypeCd')">
                ORDER BY      CUST_TYPE_CD
            </when>
            <when test="colSortName.equals('custDivCd')">
                ORDER BY      CUST_DIV_CD
            </when>
            <when test="colSortName.equals('distrctCd')">
                ORDER BY      DISTRCT_CD
            </when>
            <when test="colSortName.equals('zipCd')">
                ORDER BY      ZIP_CD
            </when>
            <when test="colSortName.equals('addr1Ctnts')">
                ORDER BY      ADDR_1_CTNTS
            </when>
            <when test="colSortName.equals('addr2Ctnts')">
                ORDER BY      ADDR_2_CTNTS
            </when>
            <when test="colSortName.equals('rcmdStorNo')">
                ORDER BY      RCMD_STOR_NO
            </when>
            <when test="colSortName.equals('rcmdrCustNo')">
                ORDER BY      RCMDR_CUST_NO
            </when>
            <when test="colSortName.equals('rcmdExecvdempNo')">
                ORDER BY      RCMD_EXECVDEMP_NO
            </when>
            <when test="colSortName.equals('marryYn')">
                ORDER BY      MARRY_YN
            </when>
            <when test="colSortName.equals('repHshldNo')">
                ORDER BY      REP_HSHLD_NO
            </when>
            <when test="colSortName.equals('famlyRelCd')">
                ORDER BY      FAMLY_REL_CD
            </when>
            <when test="colSortName.equals('dwelNfpyCd')">
                ORDER BY      DWEL_NFPY_CD
            </when>
            <when test="colSortName.equals('intrstFildCd')">
                ORDER BY      INTRST_FILD_CD
            </when>
            <when test="colSortName.equals('repGodsNo')">
                ORDER BY      REP_GODS_NO
            </when>
            <when test="colSortName.equals('repUseCustDivCd')">
                ORDER BY      REP_USE_CUST_DIV_CD
            </when>
            <when test="colSortName.equals('smsRcvAgreeYn')">
                ORDER BY      SMS_RCV_AGREE_YN
            </when>
            <when test="colSortName.equals('smsRcvAgreeDt')">
                ORDER BY      SMS_RCV_AGREE_DT
            </when>
            <when test="colSortName.equals('smsRcvAgreeChlCd')">
                ORDER BY      SMS_RCV_AGREE_CHL_CD
            </when>
            <when test="colSortName.equals('emailRcvAgreeYn')">
                ORDER BY      EMAIL_RCV_AGREE_YN
            </when>
            <when test="colSortName.equals('emailRcvAgreeDt')">
                ORDER BY      EMAIL_RCV_AGREE_DT
            </when>
            <when test="colSortName.equals('emailRcvAgreeChlCd')">
                ORDER BY      EMAIL_RCV_AGREE_CHL_CD
            </when>
            <when test="colSortName.equals('alrmTkRcvAgreeYn')">
                ORDER BY      ALRM_TK_RCV_AGREE_YN
            </when>
            <when test="colSortName.equals('alrmTkRcvAgreeDt')">
                ORDER BY      ALRM_TK_RCV_AGREE_DT
            </when>
            <when test="colSortName.equals('alrmTkRcvAgreeChlCd')">
                ORDER BY      ALRM_TK_RCV_AGREE_CHL_CD
            </when>
            <when test="colSortName.equals('pushRcvAgreeYn')">
                ORDER BY      PUSH_RCV_AGREE_YN
            </when>
            <when test="colSortName.equals('pushRcvAgreeDt')">
                ORDER BY      PUSH_RCV_AGREE_DT
            </when>
            <when test="colSortName.equals('pushRcvAgreeChlCd')">
                ORDER BY      PUSH_RCV_AGREE_CHL_CD
            </when>
            <when test="colSortName.equals('ciCertfYn')">
                ORDER BY      CI_CERTF_YN
            </when>
            <when test="colSortName.equals('ci')">
                ORDER BY      CI
            </when>
            <when test="colSortName.equals('diCertfYn')">
                ORDER BY      DI_CERTF_YN
            </when>
            <when test="colSortName.equals('di')">
                ORDER BY      DI
            </when>
            <when test="colSortName.equals('rcvRfslYn')">
                ORDER BY      RCV_RFSL_YN
            </when>
            <when test="colSortName.equals('cprtCmpNo')">
                ORDER BY      CPRT_CMP_NO
            </when>
            <when test="colSortName.equals('mshipSbscYn')">
                ORDER BY      MSHIP_SBSC_YN
            </when>
            <when test="colSortName.equals('mshipLoginId')">
                ORDER BY      MSHIP_LOGIN_ID
            </when>
            <when test="colSortName.equals('mshipSbtNo')">
                ORDER BY      MSHIP_SBT_NO
            </when>
            <when test="colSortName.equals('mshipLoginPwd')">
                ORDER BY      MSHIP_LOGIN_PWD
            </when>
            <when test="colSortName.equals('mshipLastLoginDt')">
                ORDER BY      MSHIP_LAST_LOGIN_DT
            </when>
            <when test="colSortName.equals('mshipLastLoginIpAddr')">
                ORDER BY      MSHIP_LAST_LOGIN_IP_ADDR
            </when>
            <when test="colSortName.equals('mshipLastStorVisitDt')">
                ORDER BY      MSHIP_LAST_STOR_VISIT_DT
            </when>
            <when test="colSortName.equals('mshipLastVisitStorNo')">
                ORDER BY      MSHIP_LAST_VISIT_STOR_NO
            </when>
            <when test="colSortName.equals('mshipTypeCd')">
                ORDER BY      MSHIP_TYPE_CD
            </when>
            <when test="colSortName.equals('mshipSbscDt')">
                ORDER BY      MSHIP_SBSC_DT
            </when>
            <when test="colSortName.equals('mshipGradeCd')">
                ORDER BY      MSHIP_GRADE_CD
            </when>
            <when test="colSortName.equals('mshipGradeChngDt')">
                ORDER BY      MSHIP_GRADE_CHNG_DT
            </when>
            <when test="colSortName.equals('mshipInfoChngDt')">
                ORDER BY      MSHIP_INFO_CHNG_DT
            </when>
            <when test="colSortName.equals('mshipInfoConfrExecvdempNo')">
                ORDER BY      MSHIP_INFO_CONFR_EXECVDEMP_NO
            </when>
            <when test="colSortName.equals('cprtExecvdempNo')">
                ORDER BY      CPRT_EXECVDEMP_NO
            </when>
            <when test="colSortName.equals('mshipLeaveDt')">
                ORDER BY      MSHIP_LEAVE_DT
            </when>
            <when test="colSortName.equals('extncPointLmtScore')">
                ORDER BY      EXTNC_POINT_LMT_SCORE
            </when>
            <when test="colSortName.equals('accumPointLmtScore')">
                ORDER BY      ACCUM_POINT_LMT_SCORE
            </when>
            <when test="colSortName.equals('remainPointScore')">
                ORDER BY      REMAIN_POINT_SCORE
            </when>
            <when test="colSortName.equals('mshipChlCd')">
                ORDER BY      MSHIP_CHL_CD
            </when>
            <when test="colSortName.equals('bllkRegStorNo')">
                ORDER BY      BLLK_REG_STOR_NO
            </when>
            <when test="colSortName.equals('bllkmshpYn')">
                ORDER BY      BLLKMSHP_YN
            </when>
            <when test="colSortName.equals('bllkRegChlCd')">
                ORDER BY      BLLK_REG_CHL_CD
            </when>
            <when test="colSortName.equals('bllkRegWhyCtnts')">
                ORDER BY      BLLK_REG_WHY_CTNTS
            </when>
            <when test="colSortName.equals('bllkRegDt')">
                ORDER BY      BLLK_REG_DT
            </when>
            <when test="colSortName.equals('prtctFamlyYn')">
                ORDER BY      PRTCT_FAMLY_YN
            </when>
            <when test="colSortName.equals('mshipExptGradeCd')">
                ORDER BY      MSHIP_EXPT_GRADE_CD
            </when>
            <when test="colSortName.equals('mshipAdvncmtScore')">
                ORDER BY      MSHIP_ADVNCMT_SCORE
            </when>
            <when test="colSortName.equals('amdrId')">
                ORDER BY      AMDR_ID
            </when>
            <when test="colSortName.equals('dormPerdCd')">
                ORDER BY      DORM_PERD_CD
            </when>
            <when test="colSortName.equals('amdDt')">
                ORDER BY      AMD_DT
            </when>
            <when test="colSortName.equals('regrId')">
                ORDER BY      REGR_ID
            </when>
            <when test="colSortName.equals('regDt')">
                ORDER BY      REG_DT
            </when>
            <when test="colSortName.equals('regChlCd')">
                ORDER BY      REG_CHL_CD
            </when>
            <otherwise>
                ORDER BY      REG_DT
            </otherwise>
        </choose>
        <if test="colSortName !=null and colSortDir !='' and colSortDir !=null and colSortDir !='' and colSortDir.equals('desc')">
            DESC
        </if>
    </sql>
    <select id="selectListCount" resultType="int">
                SELECT /* com.ceragem.crm.cst.dao.CusStatDao.selectListCount */ COUNT(1)
                 FROM CRM_CUST_BAS A
        <include refid="sqlConditions"/>
    </select>
    <select id="selectList" resultType="com.ceragem.crm.cst.model.CusStatVo">
        <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingHeader"/>
               SELECT /* com.ceragem.crm.cst.dao.CusStatDao.selectList */ <include refid="sqlSelectCols"/>
                 FROM CRM_CUST_BAS A
        <include refid="sqlConditions"/>
        <include refid="sqlOrderBy"/>
        <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingFooter"/>
    </select>
    <select id="select" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT /* com.ceragem.crm.cst.dao.CusStatDao.select */ <include refid="sqlSelectCols"/>
                 FROM CRM_CUST_BAS A
        <include refid="sqlPkConditions"/>
    </select>
    <insert id="insert">
                INSERT /* com.ceragem.crm.cst.dao.CusStatDao.insert */ INTO CRM_CUST_BAS (
        <include refid="sqlCols"/>
                 ) VALUES (
                       #{itgCustNo}
                     , NVL(#{corpDivYn},'N')
                     , #{custNm}
                     , #{gndrCd}
                     , #{birthday}
                     , #{bizNo}
                     , #{corpRegNo}
                     , #{corpTelNo}
                     , NVL(#{fornYn},'N')
                     , #{repNm}
                     , #{mphonNo}
                     , #{mphonBkDgtNo}
                     , #{emailAddr}
                     , #{picNm}
                     , #{picMphonNo}
                     , #{picMphonBkDgtNo}
                     , #{picEmailAddr}
                     , TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
                     , #{custStatusCd}
                     , TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
                     , #{custTypeCd}
                     , #{custDivCd}
                     , #{distrctCd}
                     , #{zipCd}
                     , #{addr1Ctnts}
                     , #{addr2Ctnts}
                     , #{rcmdStorNo}
                     , #{rcmdrCustNo}
                     , #{rcmdExecvdempNo}
                     , NVL(#{marryYn},'N')
                     , #{repHshldNo}
                     , #{famlyRelCd}
                     , #{dwelNfpyCd}
                     , #{intrstFildCd}
                     , #{repGodsNo}
                     , #{repUseCustDivCd}
                     , NVL(#{smsRcvAgreeYn},'N')
                     , TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{smsRcvAgreeChlCd}
                     , NVL(#{emailRcvAgreeYn},'N')
                     , TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{emailRcvAgreeChlCd}
                     , NVL(#{alrmTkRcvAgreeYn},'N')
                     , TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{alrmTkRcvAgreeChlCd}
                     , NVL(#{pushRcvAgreeYn},'N')
                     , TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{pushRcvAgreeChlCd}
                     , NVL(#{ciCertfYn},'N')
                     , #{ci}
                     , NVL(#{diCertfYn},'N')
                     , #{di}
                     , NVL(#{rcvRfslYn},'N')
                     , #{cprtCmpNo}
                     , NVL(#{mshipSbscYn},'N')
                     , #{mshipLoginId}
                     , #{mshipSbtNo}
                     , #{mshipLoginPwd}
                     , TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS')
                     , #{mshipLastLoginIpAddr}
                     , TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS')
                     , #{mshipLastVisitStorNo}
                     , #{mshipTypeCd}
                     , TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS')
                     , #{mshipGradeCd}
                     , TO_DATE(#{mshipGradeChngDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{mshipInfoChngDt},'YYYYMMDDHH24MISS')
                     , #{mshipInfoConfrExecvdempNo}
                     , #{cprtExecvdempNo}
                     , TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS')
                     , #{extncPointLmtScore}
                     , #{accumPointLmtScore}
                     , #{remainPointScore}
                     , #{mshipChlCd}
                     , #{bllkRegStorNo}
                     , NVL(#{bllkmshpYn},'N')
                     , #{bllkRegChlCd}
                     , #{bllkRegWhyCtnts}
                     , TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS')
                     , NVL(#{prtctFamlyYn},'N')
                     , #{mshipExptGradeCd}
                     , #{mshipAdvncmtScore}
                     , #{amdrId}
                     , #{dormPerdCd}
                     , SYSDATE
                     , #{regrId}
                     , SYSDATE
                     , #{regChlCd}
                 )
    </insert>
    <update id="update">
               UPDATE /* com.ceragem.crm.cst.dao.CusStatDao.update */ CRM_CUST_BAS
                  SET CORP_DIV_YN                             =         NVL(#{corpDivYn},'N')
                    , CUST_NM                                 =         #{custNm}
                    , GNDR_CD                                 =         #{gndrCd}
                    , BIRTHDAY                                =         #{birthday}
                    , BIZ_NO                                  =         #{bizNo}
                    , CORP_REG_NO                             =         #{corpRegNo}
                    , CORP_TEL_NO                             =         #{corpTelNo}
                    , FORN_YN                                 =         NVL(#{fornYn},'N')
                    , REP_NM                                  =         #{repNm}
                    , MPHON_NO                                =         #{mphonNo}
                    , MPHON_BK_DGT_NO                         =         #{mphonBkDgtNo}
                    , EMAIL_ADDR                              =         #{emailAddr}
                    , PIC_NM                                  =         #{picNm}
                    , PIC_MPHON_NO                            =         #{picMphonNo}
                    , PIC_MPHON_BK_DGT_NO                     =         #{picMphonBkDgtNo}
                    , PIC_EMAIL_ADDR                          =         #{picEmailAddr}
                    , INDI_INFO_VALID_PERD_STA_DT             =         TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
                    , INDI_INFO_VALID_PERD_END_DT             =         TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
                    , CUST_STATUS_CD                          =         #{custStatusCd}
                    , CUST_STATUS_CHNG_DT                     =         TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS')
                    , CUST_INFO_CHNG_DT                       =         TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
                    , CUST_TYPE_CD                            =         #{custTypeCd}
                    , CUST_DIV_CD                             =         #{custDivCd}
                    , DISTRCT_CD                              =         #{distrctCd}
                    , ZIP_CD                                  =         #{zipCd}
                    , ADDR_1_CTNTS                            =         #{addr1Ctnts}
                    , ADDR_2_CTNTS                            =         #{addr2Ctnts}
                    , RCMD_STOR_NO                            =         #{rcmdStorNo}
                    , RCMDR_CUST_NO                           =         #{rcmdrCustNo}
                    , RCMD_EXECVDEMP_NO                       =         #{rcmdExecvdempNo}
                    , MARRY_YN                                =         NVL(#{marryYn},'N')
                    , REP_HSHLD_NO                            =         #{repHshldNo}
                    , FAMLY_REL_CD                            =         #{famlyRelCd}
                    , DWEL_NFPY_CD                            =         #{dwelNfpyCd}
                    , INTRST_FILD_CD                          =         #{intrstFildCd}
                    , REP_GODS_NO                             =         #{repGodsNo}
                    , REP_USE_CUST_DIV_CD                     =         #{repUseCustDivCd}
                    , SMS_RCV_AGREE_YN                        =         NVL(#{smsRcvAgreeYn},'N')
                    , SMS_RCV_AGREE_DT                        =         TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , SMS_RCV_AGREE_CHL_CD                    =         #{smsRcvAgreeChlCd}
                    , EMAIL_RCV_AGREE_YN                      =         NVL(#{emailRcvAgreeYn},'N')
                    , EMAIL_RCV_AGREE_DT                      =         TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , EMAIL_RCV_AGREE_CHL_CD                  =         #{emailRcvAgreeChlCd}
                    , ALRM_TK_RCV_AGREE_YN                    =         NVL(#{alrmTkRcvAgreeYn},'N')
                    , ALRM_TK_RCV_AGREE_DT                    =         TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , ALRM_TK_RCV_AGREE_CHL_CD                =         #{alrmTkRcvAgreeChlCd}
                    , PUSH_RCV_AGREE_YN                       =         NVL(#{pushRcvAgreeYn},'N')
                    , PUSH_RCV_AGREE_DT                       =         TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , PUSH_RCV_AGREE_CHL_CD                   =         #{pushRcvAgreeChlCd}
                    , CI_CERTF_YN                             =         NVL(#{ciCertfYn},'N')
                    , CI                                      =         #{ci}
                    , DI_CERTF_YN                             =         NVL(#{diCertfYn},'N')
                    , DI                                      =         #{di}
                    , RCV_RFSL_YN                             =         NVL(#{rcvRfslYn},'N')
                    , CPRT_CMP_NO                             =         #{cprtCmpNo}
                    , MSHIP_SBSC_YN                           =         NVL(#{mshipSbscYn},'N')
                    , MSHIP_LOGIN_ID                          =         #{mshipLoginId}
                    , MSHIP_SBT_NO                            =         #{mshipSbtNo}
                    , MSHIP_LOGIN_PWD                         =         #{mshipLoginPwd}
                    , MSHIP_LAST_LOGIN_DT                     =         TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS')
                    , MSHIP_LAST_LOGIN_IP_ADDR                =         #{mshipLastLoginIpAddr}
                    , MSHIP_LAST_STOR_VISIT_DT                =         TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS')
                    , MSHIP_LAST_VISIT_STOR_NO                =         #{mshipLastVisitStorNo}
                    , MSHIP_TYPE_CD                           =         #{mshipTypeCd}
                    , MSHIP_SBSC_DT                           =         TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS')
                    , MSHIP_GRADE_CD                          =         #{mshipGradeCd}
                    , MSHIP_GRADE_CHNG_DT                     =         TO_DATE(#{mshipGradeChngDt},'YYYYMMDDHH24MISS')
                    , MSHIP_INFO_CHNG_DT                      =         TO_DATE(#{mshipInfoChngDt},'YYYYMMDDHH24MISS')
                    , MSHIP_INFO_CONFR_EXECVDEMP_NO           =         #{mshipInfoConfrExecvdempNo}
                    , CPRT_EXECVDEMP_NO                       =         #{cprtExecvdempNo}
                    , MSHIP_LEAVE_DT                          =         TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS')
                    , EXTNC_POINT_LMT_SCORE                   =         #{extncPointLmtScore}
                    , ACCUM_POINT_LMT_SCORE                   =         #{accumPointLmtScore}
                    , REMAIN_POINT_SCORE                      =         #{remainPointScore}
                    , MSHIP_CHL_CD                            =         #{mshipChlCd}
                    , BLLK_REG_STOR_NO                        =         #{bllkRegStorNo}
                    , BLLKMSHP_YN                             =         NVL(#{bllkmshpYn},'N')
                    , BLLK_REG_CHL_CD                         =         #{bllkRegChlCd}
                    , BLLK_REG_WHY_CTNTS                      =         #{bllkRegWhyCtnts}
                    , BLLK_REG_DT                             =         TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS')
                    , PRTCT_FAMLY_YN                          =         NVL(#{prtctFamlyYn},'N')
                    , MSHIP_EXPT_GRADE_CD                     =         #{mshipExptGradeCd}
                    , MSHIP_ADVNCMT_SCORE                     =         #{mshipAdvncmtScore}
                    , AMDR_ID                                 =         #{amdrId}
                    , DORM_PERD_CD                            =         #{dormPerdCd}
                    , AMD_DT                                  =         SYSDATE
                    , REG_CHL_CD                              =         #{regChlCd}
        <include refid="sqlPkConditions"/>
    </update>
    <delete id="delete">
               DELETE /* com.ceragem.crm.cst.dao.CusStatDao.delete */
                 FROM CRM_CUST_BAS
        <include refid="sqlPkConditions"/>
    </delete>
    
    <select id="getMemberStat1List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT 
			       SUM (DECODE (STAT_TYPE, '001', TOTAL_CNT, 0)) TOTAL_NEW_CNT,
			       SUM (DECODE (STAT_TYPE, '001', TOTAL_MAN_CNT, 0)) TOTAL_MAN_NEW_CNT,
			       SUM (DECODE (STAT_TYPE, '001', TOTAL_WOMAN_CNT, 0)) TOTAL_WOMAN_NEW_CNT,
			       SUM (DECODE (STAT_TYPE, '001', TOTAL_CNT - TOTAL_MAN_CNT - TOTAL_WOMAN_CNT, 0)) TOTAL_ETC_NEW_CNT,
			       SUM (DECODE (STAT_TYPE, '002', TOTAL_CNT, 0)) TOTAL_DORM_CNT,
			       SUM (DECODE (STAT_TYPE, '002', TOTAL_MAN_CNT, 0)) TOTAL_MAN_DORM_CNT,
			       SUM (DECODE (STAT_TYPE, '002', TOTAL_WOMAN_CNT, 0)) TOTAL_WOMAN_DORM_CNT,
			       SUM (DECODE (STAT_TYPE, '002', TOTAL_CNT - TOTAL_MAN_CNT - TOTAL_WOMAN_CNT, 0)) TOTAL_ETC_DORM_CNT,
			       SUM (DECODE (STAT_TYPE, '003', TOTAL_CNT, 0)) TOTAL_LVE_CNT,
			       SUM (DECODE (STAT_TYPE, '003', TOTAL_MAN_CNT, 0)) TOTAL_MAN_LVE_CNT,
			       SUM (DECODE (STAT_TYPE, '003', TOTAL_WOMAN_CNT, 0)) TOTAL_WOMAN_LVE_CNT,
			       SUM (DECODE (STAT_TYPE, '003', TOTAL_CNT - TOTAL_MAN_CNT - TOTAL_WOMAN_CNT, 0)) TOTAL_ETC_LVE_CNT
			  FROM (SELECT COUNT (1)                                    TOTAL_CNT,
			               COUNT (DECODE (A.GNDR_CD, 'M', 1, NULL))     TOTAL_MAN_CNT,
			               COUNT (DECODE (A.GNDR_CD, 'F', 1, NULL))     TOTAL_WOMAN_CNT,
			               '001'                                        STAT_TYPE
			        FROM CRM_CUST_BAS A
            <choose>
            	<when test="searchDiv.equals('day')">
			        WHERE A.MSHIP_SBSC_DT BETWEEN TO_DATE (#{strtDtD}, 'YYYYMMDD') AND TO_DATE (#{endDtD}, 'YYYYMMDD') +1
			    </when>
                <when test="searchDiv.equals('month')">
                    WHERE A.MSHIP_SBSC_DT BETWEEN TO_DATE (#{strtDtM} || '01', 'YYYYMMDD') AND ADD_MONTHS (TO_DATE (#{endDtM} || '01', 'YYYYMMDD'), 1) - 1
                </when>
            </choose>						        	
			        UNION ALL
			        
			        SELECT COUNT (1)                                    TOTAL_CNT,
			               COUNT (DECODE (A.GNDR_CD, 'M', 1, NULL))     TOTAL_MAN_CNT,
			               COUNT (DECODE (A.GNDR_CD, 'F', 1, NULL))     TOTAL_WOMAN_CNT,
			               '002'                                        STAT_TYPE
			        FROM CRM_DORM_CUST_BAS A
			<choose>
            	<when test="searchDiv.equals('day')">
			        WHERE A.REG_DT BETWEEN TO_DATE (#{strtDtD}, 'YYYYMMDD') AND TO_DATE (#{endDtD}, 'YYYYMMDD') +1 AND A.CUST_STATUS_CD != '003'
			    </when>
                <when test="searchDiv.equals('month')">
                    WHERE A.REG_DT BETWEEN TO_DATE (#{strtDtM} || '01', 'YYYYMMDD') AND ADD_MONTHS (TO_DATE (#{endDtM} || '01', 'YYYYMMDD'), 1) - 1 AND A.CUST_STATUS_CD != '003'
                </when>
            </choose>
			        UNION ALL
			        SELECT COUNT (1)                                    TOTAL_CNT,
			               COUNT (DECODE (A.GNDR_CD, 'M', 1, NULL))     TOTAL_MAN_CNT,
			               COUNT (DECODE (A.GNDR_CD, 'F', 1, NULL))     TOTAL_WOMAN_CNT,
			               '003'                                        STAT_TYPE
			        FROM CRM_CUST_BAS A
			<choose>
            	<when test="searchDiv.equals('day')">
			        WHERE A.MSHIP_LEAVE_DT BETWEEN TO_DATE (#{strtDtD}, 'YYYYMMDD') AND TO_DATE (#{endDtD}, 'YYYYMMDD')+1 ) A
			    </when>
                <when test="searchDiv.equals('month')">
                    WHERE A.MSHIP_LEAVE_DT BETWEEN TO_DATE (#{strtDtM} || '01', 'YYYYMMDD') AND ADD_MONTHS (TO_DATE (#{endDtM} || '01', 'YYYYMMDD'), 1) - 1) A
                </when>
            </choose>
    </select>
    
    <select id="getMemberStat2List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT 
					COUNT(1) TOTAL_CNT
					, COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
					, COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
					, COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
					, COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
					, COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
					, COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
					, COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
					, COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
					, '001' STAT_TYPE
                    , '신규회원' STAT_TYPE_NM 
					FROM CRM_CUST_BAS A
			<choose>
            	<when test="searchDiv.equals('day')">
					WHERE A.MSHIP_SBSC_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
				</when>
                <when test="searchDiv.equals('month')">
                    WHERE A.MSHIP_SBSC_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
                </when>
            </choose>
					UNION ALL
					SELECT COUNT(1) TOTAL_CNT
					, COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
					, COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
					, COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
					, COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
					, COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
					, COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
					, COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
					, COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
					, '002' STAT_TYPE 
                    , '휴면회원' STAT_TYPE_NM
					FROM CRM_DORM_CUST_BAS A
			<choose>
            	<when test="searchDiv.equals('day')">
					WHERE A.REG_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
				</when>
                <when test="searchDiv.equals('month')">
                    WHERE A.REG_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
                </when>
            </choose>
					  AND A.CUST_STATUS_CD  != '003'
					  UNION ALL
					SELECT COUNT(1) TOTAL_CNT
					, COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
					, COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
					, COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
					, COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
					, COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
					, COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
					, COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
					, COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
					, '003' STAT_TYPE
                    , '탈퇴회원' STAT_TYPE_NM 
					FROM CRM_CUST_BAS A
			<choose>
            	<when test="searchDiv.equals('day')">
					WHERE A.MSHIP_LEAVE_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
				</when>
                <when test="searchDiv.equals('month')">
                    WHERE A.MSHIP_LEAVE_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
				</when>
            </choose>
    </select>
    
    <select id="getMemberStat3List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT B.SBSC_DT 
				     , NVL(A.TOTAL_CNT,0) TOTAL_CNT
				     , NVL(A.TOTAL_MAN_CNT,0) TOTAL_MAN_CNT
				     , NVL(A.TOTAL_WOMAN_CNT,0) TOTAL_WOMAN_CNT
				     , NVL(A.TOTAL_ETC_CNT,0) TOTAL_ETC_CNT
				     , NVL(A.AGE10,0) AGE10
				     , NVL(A.AGE20,0) AGE20
				     , NVL(A.AGE30,0) AGE30
				     , NVL(A.AGE40,0) AGE40
				     , NVL(A.AGE50,0) AGE50
				     , NVL(A.AGE60,0) AGE60
				     , NVL(A.AGE70,0) AGE70
				     , NVL(A.AGEETC,0) AGEETC
				  FROM (SELECT TO_CHAR(MSHIP_SBSC_DT,'YYYYMMDD') SBSC_DT 
				     , COUNT(1) TOTAL_CNT
				     , COUNT(DECODE(A.GNDR_CD,'M',1,NULL)) TOTAL_MAN_CNT
				     , COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_WOMAN_CNT
				     , COUNT(1) - COUNT(DECODE(A.GNDR_CD,'M',1,NULL))  - COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_ETC_CNT
				     , COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
				    , COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
				    , COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
				    , COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
				    , COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
				    , COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
				    , COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
				    , COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC 
				FROM CRM_CUST_BAS A
		<choose>
            <when test="searchDiv.equals('day')">
				WHERE A.MSHIP_SBSC_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
			</when>
            <when test="searchDiv.equals('month')">
                WHERE A.MSHIP_SBSC_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
            </when>
        </choose>
				GROUP BY TO_CHAR(MSHIP_SBSC_DT,'YYYYMMDD') ) A
		<choose>
            <when test="searchDiv.equals('day')">
				, (SELECT TO_CHAR( TO_DATE(#{strtDtD},'YYYYMMDD') +  LEVEL-1 ,'YYYYMMDD') SBSC_DT
			</when>
            <when test="searchDiv.equals('month')">
                , (SELECT TO_CHAR( TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') +  LEVEL-1 ,'YYYYMMDD') SBSC_DT
            </when>
        </choose>
				FROM DUAL
		<choose>
            <when test="searchDiv.equals('day')">
				CONNECT BY TO_DATE(#{endDtD},'YYYYMMDD') - TO_DATE(#{strtDtD},'YYYYMMDD') >= LEVEL) B
			</when>
            <when test="searchDiv.equals('month')">
                CONNECT BY ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') >= LEVEL) B
            </when>
        </choose>
				WHERE B.SBSC_DT = A.SBSC_DT(+)
				ORDER BY B.SBSC_DT 
    </select>
    
    <select id="getActiveStat1List" resultType="com.ceragem.crm.cst.model.CusStatVo">
    	<!-- 기존 : 채널별로 마지막 날짜 업데이트 > 수정후 채널 빼고 고객ID 최근날짜  -->
               SELECT /*getActiveStat1List*/ COUNT(1) TOTAL_CNT
                      , COUNT(DECODE(A.GNDR_CD,'M',1,NULL)) TOTAL_MAN_CNT 
                      , COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_WOMAN_CNT
                      , COUNT(1) - COUNT(DECODE(A.GNDR_CD,'M',1,NULL))  - COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_ETC_CNT
                      , '001' STAT_TYPE
                      , '활동회원' STAT_TYPE_NM
                 FROM CRM_CUST_BAS A
                WHERE ITG_CUST_NO IN 
                (SELECT ITG_CUST_NO 
                   FROM CRM_CUST_RCNTLY_ATVY_HST B 
                  WHERE A.ITG_CUST_NO=B.ITG_CUST_NO 
            <choose>
                <when test="searchDiv.equals('day')">
                    AND B.CHL_ATVY_DATE BETWEEN #{strtDtD} AND #{endDtD})
                </when>
                <when test="searchDiv.equals('month')">
                    AND SUBSTR(B.CHL_ATVY_DATE,1,6) BETWEEN #{strtDtM} AND #{endDtM})
                </when>
            </choose>
    </select>
    
    <select id="getActiveStat2List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT
               /*getActiveStat2List*/
               COUNT(1) TOTAL_CNT
               , COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
               , COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
               , COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
               , COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
               , COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
               , COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
               , COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
               , COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
               , '001' STAT_TYPE
               , '활동회원' STAT_TYPE_NM
               FROM CRM_CUST_BAS A
              WHERE ITG_CUST_NO IN 
              (SELECT ITG_CUST_NO 
                 FROM CRM_CUST_RCNTLY_ATVY_HST B 
                WHERE A.ITG_CUST_NO=B.ITG_CUST_NO
              <choose>
              <when test="searchDiv.equals('day')">
                  AND B.CHL_ATVY_DATE BETWEEN #{strtDtD} AND #{endDtD})
              </when>
              <when test="searchDiv.equals('month')">
                  AND SUBSTR(B.CHL_ATVY_DATE,1,6) BETWEEN #{strtDtM} AND #{endDtM})
              </when>
          </choose>
    </select>
    
    <select id="getActiveStat3List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT A.COMN_CD, C.TOTAL_CNT,B.TOTAL_CNT TOTAL_ACT_CNT 
                 FROM CRM_COMN_CD_BAS A ,( 
                  SELECT COUNT(1) TOTAL_CNT
                         , A.MSHIP_GRADE_CD
                    FROM CRM_CUST_BAS A
                   WHERE ITG_CUST_NO IN 
                   (SELECT ITG_CUST_NO 
                      FROM CRM_CUST_RCNTLY_ATVY_HST B 
                     WHERE A.ITG_CUST_NO=B.ITG_CUST_NO 
               <choose>
                   <when test="searchDiv.equals('day')">
                       AND B.CHL_ATVY_DATE BETWEEN #{strtDtD} AND #{endDtD})
                   </when>
                   <when test="searchDiv.equals('month')">
                       AND SUBSTR(B.CHL_ATVY_DATE,1,6) BETWEEN #{strtDtM} AND #{endDtM})
                   </when>
               </choose>
                  GROUP BY MSHIP_GRADE_CD) B,(
                   SELECT COUNT(1) TOTAL_CNT
                      , A.MSHIP_GRADE_CD
                 FROM CRM_CUST_BAS A
                 GROUP BY MSHIP_GRADE_CD
                  )C
                  WHERE A.COMN_CD = B.MSHIP_GRADE_CD(+)
                  AND A.COMN_CD = C.MSHIP_GRADE_CD(+)
                  AND A.TOP_COMN_CD = 'MB020'
                  AND A.COMN_CD_LVL_NO = 2
                  ORDER BY A.COMN_CD_ODRG
    </select>

    <select id="getCeraCkStat1List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT /*getCeraCkStat1List*/ COUNT(1) TOTAL_CNT
                      , COUNT(DECODE(A.GNDR_CD,'M',1,NULL)) TOTAL_MAN_CNT 
                      , COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_WOMAN_CNT
                      , COUNT(1) - COUNT(DECODE(A.GNDR_CD,'M',1,NULL))  - COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_ETC_CNT
                      , '측정고객 수' STAT_TYPE_NM
                 FROM CRM_CUST_BAS A  , CRM_CUST_CRCK_HST B
                WHERE A.ITG_CUST_NO=B.ITG_CUST_NO
                
            <choose>
                <when test="searchDiv.equals('day')">
                    AND SUBSTR(B.START_TIME,1,8) BETWEEN #{strtDtD} AND #{endDtD}
                </when>
                <when test="searchDiv.equals('month')">
                    AND SUBSTR(B.START_TIME,1,6) BETWEEN #{strtDtM} AND #{endDtM}
                </when>
            </choose>
    </select>
    
    <select id="getCeraCkStat2List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT
               /*getCeraCkStat2List*/
               COUNT(1) TOTAL_CNT
               , COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
               , COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
               , COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
               , COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
               , COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
               , COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
               , COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
               , COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
               , '측정고객 수' STAT_TYPE_NM
               FROM CRM_CUST_BAS A , CRM_CUST_CRCK_HST B
              WHERE A.ITG_CUST_NO=B.ITG_CUST_NO
              <choose>
                <when test="searchDiv.equals('day')">
                    AND SUBSTR(B.START_TIME,1,8) BETWEEN #{strtDtD} AND #{endDtD}
                </when>
                <when test="searchDiv.equals('month')">
                    AND SUBSTR(B.START_TIME,1,6) BETWEEN #{strtDtM} AND #{endDtM}
                </when>
          </choose>
    </select>
    
    <select id="getCeraCkStat3List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT B.START_TIME 
                     , NVL(A.TOTAL_CNT,0) TOTAL_CNT
                     , NVL(A.TOTAL_MAN_CNT,0) TOTAL_MAN_CNT
                     , NVL(A.TOTAL_WOMAN_CNT,0) TOTAL_WOMAN_CNT
                     , NVL(A.TOTAL_ETC_CNT,0) TOTAL_ETC_CNT
                     , NVL(A.AGE10,0) AGE10
                     , NVL(A.AGE20,0) AGE20
                     , NVL(A.AGE30,0) AGE30
                     , NVL(A.AGE40,0) AGE40
                     , NVL(A.AGE50,0) AGE50
                     , NVL(A.AGE60,0) AGE60
                     , NVL(A.AGE70,0) AGE70
                     , NVL(A.AGEETC,0) AGEETC
                  FROM (SELECT START_TIME
                               , COUNT(1) TOTAL_CNT
                               , COUNT(DECODE(B.GNDR_CD,'M',1,NULL)) TOTAL_MAN_CNT
                               , COUNT(DECODE(B.GNDR_CD,'F',1,NULL)) TOTAL_WOMAN_CNT
                               , COUNT(1) - COUNT(DECODE(B.GNDR_CD,'M',1,NULL))  - COUNT(DECODE(B.GNDR_CD,'F',1,NULL)) TOTAL_ETC_CNT
                               , COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
                               , COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
                               , COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
                               , COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
                               , COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
                               , COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
                               , COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
                               , COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC 
                          FROM (SELECT ITG_CUST_NO , SUBSTR(START_TIME,1,8) START_TIME 
                                  FROM CRM_CUST_CRCK_HST 
                                 WHERE (<choose>
                                            <when test="searchDiv.equals('day')">
                                                SUBSTR(START_TIME,1,8) BETWEEN #{strtDtD} AND #{endDtD}
                                            </when>
                                            <when test="searchDiv.equals('month')">
                                                SUBSTR(START_TIME,1,6) BETWEEN #{strtDtM} AND #{endDtM}
                                            </when>
                                        </choose>)
                              GROUP BY ITG_CUST_NO, START_TIME) A, CRM_CUST_BAS B
                         WHERE A.ITG_CUST_NO = B.ITG_CUST_NO
                      GROUP BY A.START_TIME ) A
         <choose>
            <when test="searchDiv.equals('day')">
                , (SELECT TO_CHAR( TO_DATE(#{strtDtD},'YYYYMMDD') +  LEVEL-1 ,'YYYYMMDD') START_TIME
            </when>
            <when test="searchDiv.equals('month')">
                , (SELECT TO_CHAR( TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') +  LEVEL-1 ,'YYYYMMDD') START_TIME
            </when>
        </choose>
                FROM DUAL
        <choose>
            <when test="searchDiv.equals('day')">
                CONNECT BY TO_DATE(#{endDtD},'YYYYMMDD') - TO_DATE(#{strtDtD},'YYYYMMDD') >= LEVEL) B
            </when>
            <when test="searchDiv.equals('month')">
                CONNECT BY ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') >= LEVEL) B
            </when>
        </choose>
                WHERE B.START_TIME = A.START_TIME(+)
                ORDER BY B.START_TIME
    </select>
    
    <select id="getGradeStat1List" resultType="com.ceragem.crm.cst.model.CusStatVo">
    	SELECT 
            TEM.COMN_CD
            , NVL((SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'MB020' AND COMN_CD = TEM.COMN_CD AND  COMN_CD_LVL_NO = 2),'합계') COMN_CD_NM
            , SUM(TEM.TOTAL_CNT) TOTAL_CNT
            , SUM(TEM.TOTAL_MAN_CNT) TOTAL_MAN_CNT
            , SUM(TEM.TOTAL_WOMAN_CNT) TOTAL_WOMAN_CNT
            , SUM(TEM.TOTAL_ETC_CNT) TOTAL_ETC_CNT
            , SUM(TEM.AGE10) AGE10
            , SUM(TEM.AGE20) AGE20
            , SUM(TEM.AGE30) AGE30
            , SUM(TEM.AGE40) AGE40
            , SUM(TEM.AGE50) AGE50
            , SUM(TEM.AGE60) AGE60
            , SUM(TEM.AGE70) AGE70
            , SUM(TEM.AGEETC) AGEETC
           FROM (
               SELECT A.COMN_CD
                      , NVL(B.TOTAL_CNT,0) TOTAL_CNT
                      , NVL(B.TOTAL_MAN_CNT,0) TOTAL_MAN_CNT
                      , NVL(B.TOTAL_WOMAN_CNT,0) TOTAL_WOMAN_CNT
                      , NVL(B.TOTAL_ETC_CNT,0) TOTAL_ETC_CNT
                      , NVL(B.AGE10,0) AGE10
                      , NVL(B.AGE20,0) AGE20
                      , NVL(B.AGE30,0) AGE30
                      , NVL(B.AGE40,0) AGE40
                      , NVL(B.AGE50,0) AGE50
                      , NVL(B.AGE60,0) AGE60
                      , NVL(B.AGE70,0) AGE70
                      , NVL(B.AGEETC,0) AGEETC
                 FROM CRM_COMN_CD_BAS A ,(
                 SELECT COUNT(1) TOTAL_CNT
                        , MSHP_GRADE_CD 
                        , COUNT(DECODE(A.GNDR_CD,'M',1,NULL)) TOTAL_MAN_CNT 
                        , COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_WOMAN_CNT
                        , COUNT(1) - COUNT(DECODE(A.GNDR_CD,'M',1,NULL))  - COUNT(DECODE(A.GNDR_CD,'F',1,NULL)) TOTAL_ETC_CNT
                        , COUNT(CASE WHEN 2 >= TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  THEN 1 ELSE NULL END) AGE10
                        , COUNT(CASE WHEN 3 >= TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
                        , COUNT(CASE WHEN 4 >= TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
                        , COUNT(CASE WHEN 5 >= TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
                        , COUNT(CASE WHEN 6 >= TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
                        , COUNT(CASE WHEN 7 >= TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
                        , COUNT(CASE WHEN  TRUNC((SUBSTR(#{searchDt},1,4)  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
                        , COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
                   FROM (
                   SELECT ITG_CUST_NO,GNDR_CD,BIRTHDAY, MSHP_GRADE_CD,APPLY_STD_STA_YMD STA_DT ,LEAD(APPLY_STD_STA_YMD,1,TO_CHAR(SYSDATE,'YYYYMMDD')) OVER (PARTITION BY ITG_CUST_NO ORDER BY APPLY_STD_STA_YMD ) END_DT FROM (
                   SELECT A.ITG_CUST_NO ,A.MSHP_GRADE_CD,A.APPLY_STD_STA_YMD,B.GNDR_CD, B.BIRTHDAY
                     FROM CRM_CUST_GRADE_CHNG_HST A
                    INNER JOIN CRM_CUST_BAS B ON A.ITG_CUST_NO = B.ITG_CUST_NO
                             UNION ALL
                     SELECT ITG_CUST_NO ,'001', TO_CHAR(REG_DT,'YYYYMMDD') ,GNDR_CD,BIRTHDAY
                     FROM CRM_CUST_BAS 
                     WHERE MSHIP_SBSC_DT IS NULL OR  TO_CHAR(REG_DT,'YYYYMMDD') != TO_CHAR(MSHIP_SBSC_DT,'YYYYMMDD')
                     UNION ALL
                     SELECT ITG_CUST_NO ,'002', TO_CHAR(MSHIP_SBSC_DT,'YYYYMMDD'),GNDR_CD,BIRTHDAY
                     FROM CRM_CUST_BAS
                     WHERE MSHIP_SBSC_DT IS NOT NULL
                     ) A
                     ) A
                     WHERE #{searchDt}  BETWEEN  STA_DT AND  END_DT
                     GROUP BY MSHP_GRADE_CD
                     )  B
                      WHERE A.COMN_CD = B.MSHP_GRADE_CD(+)
                  AND A.TOP_COMN_CD = 'MB020'
                  AND A.COMN_CD_LVL_NO = 2
                  ORDER BY A.COMN_CD_ODRG
             ) TEM
         GROUP BY ROLLUP(TEM.COMN_CD)
    </select>
	
	<select id="getRecommendStat1List" resultType="com.ceragem.crm.cst.model.CusStatVo">
			        SELECT COUNT (1)                                    TOTAL_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))     TOTAL_MAN_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))     TOTAL_WOMAN_CNT,
			               COUNT (1)
			               - COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))
			               - COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))   TOTAL_ETC_CNT,
			               '001'                                        STAT_TYPE
			        FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '001'
            <choose>
            	<when test="searchDiv.equals('day')">
			        AND A.AMD_DT BETWEEN TO_DATE (#{strtDtD}, 'YYYYMMDD') AND TO_DATE (#{endDtD}, 'YYYYMMDD')+1
			    </when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE (#{strtDtM} || '01', 'YYYYMMDD') AND ADD_MONTHS (TO_DATE (#{endDtM} || '01', 'YYYYMMDD'), 1) - 1
                </when>
            </choose>						        	
			        UNION ALL
			        
			        SELECT COUNT (1)                                    TOTAL_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))     TOTAL_MAN_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))     TOTAL_WOMAN_CNT,
			               COUNT (1)
			               - COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))
			               - COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))   TOTAL_ETC_CNT,
			               '002'                                        STAT_TYPE
			        FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '002'
			<choose>
            	<when test="searchDiv.equals('day')">
			        AND A.AMD_DT BETWEEN TO_DATE (#{strtDtD}, 'YYYYMMDD') AND TO_DATE (#{endDtD}, 'YYYYMMDD')+1
			    </when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE (#{strtDtM} || '01', 'YYYYMMDD') AND ADD_MONTHS (TO_DATE (#{endDtM} || '01', 'YYYYMMDD'), 1) - 1
                </when>
            </choose>
			        UNION ALL
			        SELECT COUNT (1)                                    TOTAL_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))     TOTAL_MAN_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))     TOTAL_WOMAN_CNT,
			               COUNT (1)
			               - COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))
			               - COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))   TOTAL_ETC_CNT,
			               '003'                                        STAT_TYPE
			        FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '003'
			<choose>
            	<when test="searchDiv.equals('day')">
			        AND A.AMD_DT BETWEEN TO_DATE (#{strtDtD}, 'YYYYMMDD') AND TO_DATE (#{endDtD}, 'YYYYMMDD')+1
			    </when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE (#{strtDtM} || '01', 'YYYYMMDD') AND ADD_MONTHS (TO_DATE (#{endDtM} || '01', 'YYYYMMDD'), 1) - 1
                </when>
            </choose>
            		UNION ALL
			        SELECT COUNT (1)                                    TOTAL_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))     TOTAL_MAN_CNT,
			               COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))     TOTAL_WOMAN_CNT,
			               COUNT (1)
			               - COUNT (DECODE (B.GNDR_CD, 'M', 1, NULL))
			               - COUNT (DECODE (B.GNDR_CD, 'F', 1, NULL))   TOTAL_ETC_CNT,
			               '004'                                        STAT_TYPE
			        FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '004'
			<choose>
            	<when test="searchDiv.equals('day')">
			        AND A.AMD_DT BETWEEN TO_DATE (#{strtDtD}, 'YYYYMMDD') AND TO_DATE (#{endDtD}, 'YYYYMMDD')+1
			    </when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE (#{strtDtM} || '01', 'YYYYMMDD') AND ADD_MONTHS (TO_DATE (#{endDtM} || '01', 'YYYYMMDD'), 1) - 1
                </when>
            </choose>
    </select>
	<select id="getRecommendStat2List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT 
					COUNT(1) TOTAL_CNT
					, COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
					, COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
					, COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
					, COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
					, COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
					, COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
					, COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
					, COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
					, '001' STAT_TYPE
                    , '구매추천' STAT_TYPE_NM 
					FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '001'
			<choose>
            	<when test="searchDiv.equals('day')">
					AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
				</when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
                </when>
            </choose>
					UNION ALL
					SELECT COUNT(1) TOTAL_CNT
					, COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
					, COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
					, COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
					, COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
					, COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
					, COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
					, COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
					, COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
					, '002' STAT_TYPE 
                    , '홈체험추천' STAT_TYPE_NM
					FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '002'
			<choose>
            	<when test="searchDiv.equals('day')">
					AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
				</when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
                </when>
            </choose>
					  UNION ALL
					SELECT COUNT(1) TOTAL_CNT
					, COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
					, COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
					, COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
					, COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
					, COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
					, COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
					, COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
					, COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
					, '003' STAT_TYPE
                    , '가입추천' STAT_TYPE_NM 
					FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '003'
			<choose>
            	<when test="searchDiv.equals('day')">
					AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
				</when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
				</when>
            </choose>
            		UNION ALL
					SELECT COUNT(1) TOTAL_CNT
					, COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
					, COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
					, COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
					, COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
					, COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
					, COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
					, COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
					, COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC
					, '004' STAT_TYPE
                    , '웰카페체험추천' STAT_TYPE_NM 
					FROM CRM_RCMD_HST A, CRM_CUST_BAS B
					WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
					  AND A.RCMD_TYPE_CD = '004'
			<choose>
            	<when test="searchDiv.equals('day')">
					AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
				</when>
                <when test="searchDiv.equals('month')">
                    AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
				</when>
            </choose>
    </select>
    <select id="getRecommendStat3List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT B.SBSC_DT 
				     , NVL(A.TOTAL_CNT,0) TOTAL_CNT
				     , NVL(A.TOTAL_MAN_CNT,0) TOTAL_MAN_CNT
				     , NVL(A.TOTAL_WOMAN_CNT,0) TOTAL_WOMAN_CNT
				     , NVL(A.TOTAL_ETC_CNT,0) TOTAL_ETC_CNT
				     , NVL(A.AGE10,0) AGE10
				     , NVL(A.AGE20,0) AGE20
				     , NVL(A.AGE30,0) AGE30
				     , NVL(A.AGE40,0) AGE40
				     , NVL(A.AGE50,0) AGE50
				     , NVL(A.AGE60,0) AGE60
				     , NVL(A.AGE70,0) AGE70
				     , NVL(A.AGEETC,0) AGEETC
				  FROM (SELECT TO_CHAR(A.AMD_DT,'YYYYMMDD') SBSC_DT 
				     , COUNT(1) TOTAL_CNT
				     , COUNT(DECODE(B.GNDR_CD,'M',1,NULL)) TOTAL_MAN_CNT
				     , COUNT(DECODE(B.GNDR_CD,'F',1,NULL)) TOTAL_WOMAN_CNT
				     , COUNT(1) - COUNT(DECODE(B.GNDR_CD,'M',1,NULL))  - COUNT(DECODE(B.GNDR_CD,'F',1,NULL)) TOTAL_ETC_CNT
				     , COUNT(CASE WHEN 2 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) THEN 1 ELSE NULL END) AGE10     
				    , COUNT(CASE WHEN 3 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 2 THEN 1 ELSE NULL END) AGE20
				    , COUNT(CASE WHEN 4 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 3 THEN 1 ELSE NULL END) AGE30
				    , COUNT(CASE WHEN 5 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 4 THEN 1 ELSE NULL END) AGE40
				    , COUNT(CASE WHEN 6 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 5 THEN 1 ELSE NULL END) AGE50
				    , COUNT(CASE WHEN 7 >= TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 ) AND TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 6 THEN 1 ELSE NULL END) AGE60
				    , COUNT(CASE WHEN  TRUNC((TO_CHAR(SYSDATE,'YYYY')  -  TO_NUMBER(SUBSTR(BIRTHDAY,1,4))) /10 )  > 7 THEN 1 ELSE NULL END) AGE70
				    , COUNT(DECODE(BIRTHDAY,NULL,1,null)) AGEETC 
				FROM CRM_RCMD_HST A, CRM_CUST_BAS B
			   WHERE A.RCMDR_CUST_NO = B.ITG_CUST_NO
		<choose>
            <when test="searchDiv.equals('day')">
				AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
			</when>
            <when test="searchDiv.equals('month')">
                AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
            </when>
        </choose>
				GROUP BY TO_CHAR(A.AMD_DT,'YYYYMMDD') ) A
		<choose>
            <when test="searchDiv.equals('day')">
				, (SELECT TO_CHAR( TO_DATE(#{strtDtD},'YYYYMMDD') +  LEVEL-1 ,'YYYYMMDD') SBSC_DT
			</when>
            <when test="searchDiv.equals('month')">
                , (SELECT TO_CHAR( TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') +  LEVEL-1 ,'YYYYMMDD') SBSC_DT
            </when>
        </choose>
				FROM DUAL
		<choose>
            <when test="searchDiv.equals('day')">
				CONNECT BY TO_DATE(#{endDtD},'YYYYMMDD') - TO_DATE(#{strtDtD},'YYYYMMDD') >= LEVEL) B
			</when>
            <when test="searchDiv.equals('month')">
                CONNECT BY ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') >= LEVEL) B
            </when>
        </choose>
				WHERE B.SBSC_DT = A.SBSC_DT(+)
				ORDER BY B.SBSC_DT 
    </select>
    <select id="getRecommendStat4List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT STOR_NM, RANK () OVER (ORDER BY COUNT DESC) RANK, COUNT
				  FROM (SELECT STOR_NM, RANK () OVER (ORDER BY COUNT DESC) RANK, COUNT
				          FROM (  SELECT B.STOR_NM, COUNT (*) AS COUNT
				                    FROM CRM_RCMD_HST A, CRM_STOR_BAS B
                    				WHERE A.RCMD_STOR_NO = B.STOR_NO AND RCMD_TYPE_CD = '001'
				<choose>
		            <when test="searchDiv.equals('day')">
						AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
					</when>
		            <when test="searchDiv.equals('month')">
		                AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
		            </when>
		        </choose>
				        GROUP BY STOR_NM))
				 		WHERE RANK <![CDATA[ <= ]]> 10
    </select>
    <select id="getRecommendStat5List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT STOR_NM, RANK () OVER (ORDER BY COUNT DESC) RANK, COUNT
				  FROM (SELECT STOR_NM, RANK () OVER (ORDER BY COUNT DESC) RANK, COUNT
				          FROM (  SELECT B.STOR_NM, COUNT (*) AS COUNT
				                    FROM CRM_RCMD_HST A, CRM_STOR_BAS B
                    				WHERE A.RCMD_STOR_NO = B.STOR_NO AND RCMD_TYPE_CD = '002'
				<choose>
		            <when test="searchDiv.equals('day')">
						AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
					</when>
		            <when test="searchDiv.equals('month')">
		                AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
		            </when>
		        </choose>
				        GROUP BY STOR_NM))
				 		WHERE RANK <![CDATA[ <= ]]> 10
    </select>
    <select id="getRecommendStat6List" resultType="com.ceragem.crm.cst.model.CusStatVo">
               SELECT RCMDR_CUST_NO, RANK () OVER (ORDER BY COUNT DESC) RANK, COUNT
				  FROM (SELECT RCMDR_CUST_NO, RANK () OVER (ORDER BY COUNT DESC) RANK, COUNT
				          FROM (  SELECT RCMDR_CUST_NO, COUNT (*) AS COUNT
				                    FROM CRM_RCMD_HST A
                    				WHERE RCMD_TYPE_CD = '003'
				<choose>
		            <when test="searchDiv.equals('day')">
						AND A.AMD_DT BETWEEN TO_DATE(#{strtDtD},'YYYYMMDD') AND TO_DATE(#{endDtD},'YYYYMMDD')+1
					</when>
		            <when test="searchDiv.equals('month')">
		                AND A.AMD_DT BETWEEN TO_DATE(#{strtDtM} || '01' ,'YYYYMMDD') AND ADD_MONTHS( TO_DATE(#{endDtM} || '01','YYYYMMDD') ,1) - 1
		            </when>
		        </choose>
				        GROUP BY RCMDR_CUST_NO))
				 		WHERE RANK <![CDATA[ <= ]]> 10
    </select>
    
    <select id="selectIotUseAgeStats" resultType="EzMap">
    	SELECT
			STATS_TITLE
			,TO_CHAR(age10, '999,999,999') AS age10
			,TO_CHAR(age20, '999,999,999') AS age20
			,TO_CHAR(age30, '999,999,999') AS age30
			,TO_CHAR(age40, '999,999,999') AS age40
			,TO_CHAR(age50, '999,999,999') AS age50
			,TO_CHAR(age60, '999,999,999') AS age60
			,TO_CHAR(age70, '999,999,999') AS age70
			,TO_CHAR(age0, '999,999,999') AS age0
			,TO_CHAR((age10+age20+age30+age40+age50+age60+age70+age0), '999,999,999') AS TOTAL_CNT
		FROM(
			SELECT
				STATS_TITLE
				,SUM(DECODE(CALC_AGE, '10', AGE_CNT)) AS age10
				,SUM(DECODE(CALC_AGE, '20', AGE_CNT)) AS age20
				,SUM(DECODE(CALC_AGE, '30', AGE_CNT)) AS age30
				,SUM(DECODE(CALC_AGE, '40', AGE_CNT)) AS age40
				,SUM(DECODE(CALC_AGE, '50', AGE_CNT)) AS age50
				,SUM(DECODE(CALC_AGE, '60', AGE_CNT)) AS age60
				,SUM(DECODE(CALC_AGE, '70', AGE_CNT)) AS age70
				,SUM(DECODE(CALC_AGE, '0', AGE_CNT)) AS age0
			FROM(
				SELECT
					'IoT 사용 회원 수' AS STATS_TITLE,
					lTB.CALC_AGE, NVL(AGE_CNT, 0) AS AGE_CNT
				FROM(
					SELECT 
						ABS(LEVEL-8)*10 AS CALC_AGE 
					FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 8
				) lTB
				LEFT JOIN(
					SELECT 
						CALC_AGE, COUNT(1) AS AGE_CNT
					FROM(
						SELECT
							ITG_CUST_NO, CUST_NM, BIRTHDAY, AGE, 
							CASE WHEN CALC_AGE = -1 THEN 0
								 WHEN CALC_AGE <![CDATA[>=]]> 70 THEN 70
								 WHEN CALC_AGE <![CDATA[<=]]> 10 AND CALC_AGE <![CDATA[>=]]> 0 THEN 10
								 ELSE CALC_AGE
							END AS CALC_AGE
						FROM(
							SELECT
								dTB.*, 
								CASE WHEN AGE = -1 THEN -1
									 ELSE TRUNC(AGE/10)*10
								END AS CALC_AGE
							FROM(
								SELECT 
									ITG_CUST_NO, CUST_NM, BIRTHDAY, 
									NVL((TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4))), -1) AS AGE
								FROM(
									SELECT
										hTB.ITG_CUST_NO, CUST_NM, BIRTHDAY
									FROM(
										SELECT
											ITG_CUST_NO
										FROM CRM_CUST_IOT_HST
										WHERE ITG_CUST_NO IS NOT NULL
										<choose>
											<when test="searchDateType.equals('month')">
												<if test="strtDtM != null and strtDtM != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
												</if>
												<if test="endDtM != null and endDtM != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
												</if>
											</when>
											<otherwise>
												<if test="strtDtD != null and strtDtD != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
												</if>
												<if test="endDtD != null and endDtD != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
												</if>
											</otherwise>
										</choose>
										<if test="deviceCd != null and deviceCd != ''">
											<choose>
												<when test="deviceCd.equals('VM34')">
													AND MODEL = 'masterv4'
												</when>
												<otherwise>
													AND MODEL = 'masterv6'
												</otherwise>
											</choose>
										</if>
										<if test="modeCd != null and modeCd != ''">
											AND MODE1 = #{modeCd}
										</if>
										GROUP BY ITG_CUST_NO
									) hTB
									LEFT JOIN CRM_CUST_BAS cTB
									ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
									WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
								)
							) dTB
						)
					)
					GROUP BY CALC_AGE
				) rTB
				ON(lTB.CALC_AGE = rTB.CALC_AGE)
			) 
			GROUP BY STATS_TITLE
		) mTB	
		UNION
		SELECT
			STATS_TITLE
			,FN_GET_DTMS(age10) AS age10
			,FN_GET_DTMS(age20) AS age20
			,FN_GET_DTMS(age30) AS age30
			,FN_GET_DTMS(age40) AS age40
			,FN_GET_DTMS(age50) AS age50
			,FN_GET_DTMS(age60) AS age60
			,FN_GET_DTMS(age70) AS age70
			,FN_GET_DTMS(age0) AS age0
			,FN_GET_DTMS(age10+age20+age30+age40+age50+age60+age70+age0) AS TOTAL_CNT
		FROM(
			SELECT
				STATS_TITLE
				,SUM(DECODE(CALC_AGE, '10', CALC_USE_TIME)) AS age10
				,SUM(DECODE(CALC_AGE, '20', CALC_USE_TIME)) AS age20
				,SUM(DECODE(CALC_AGE, '30', CALC_USE_TIME)) AS age30
				,SUM(DECODE(CALC_AGE, '40', CALC_USE_TIME)) AS age40
				,SUM(DECODE(CALC_AGE, '50', CALC_USE_TIME)) AS age50
				,SUM(DECODE(CALC_AGE, '60', CALC_USE_TIME)) AS age60
				,SUM(DECODE(CALC_AGE, '70', CALC_USE_TIME)) AS age70
				,SUM(DECODE(CALC_AGE, '0', CALC_USE_TIME)) AS age0
			FROM(
				SELECT
					'USETIME_SUM' AS STATS_TYPE, 
					'IoT 사용시간 합계' AS STATS_TITLE, 
					lTB.CALC_AGE, NVL(CALC_USE_TIME, 0) AS CALC_USE_TIME
				FROM(
					SELECT 
						ABS(LEVEL-8)*10 AS CALC_AGE 
					FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 8
				) lTB
				LEFT JOIN(
					SELECT 
						CALC_AGE, SUM(USE_TIME) AS CALC_USE_TIME
					FROM(
						SELECT
							ITG_CUST_NO, CUST_NM, USE_TIME, BIRTHDAY, AGE, 
							CASE WHEN CALC_AGE = -1 THEN 0
								 WHEN CALC_AGE <![CDATA[>=]]> 70 THEN 70
								 WHEN CALC_AGE <![CDATA[<=]]> 10 AND CALC_AGE >= 0 THEN 10
								 ELSE CALC_AGE
						    END AS CALC_AGE
						FROM(
							SELECT
								dTB.*, 
								CASE WHEN AGE = -1 THEN -1
									 ELSE TRUNC(AGE/10)*10
								END AS CALC_AGE
							FROM(
								SELECT 
									ITG_CUST_NO, CUST_NM, USE_TIME, BIRTHDAY, 
									NVL((TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4))), -1) AS AGE
								FROM(
									SELECT
										hTB.ITG_CUST_NO, CUST_NM, USE_TIME, BIRTHDAY, HISTORY_REG_DT
									FROM(
										SELECT
											ITG_CUST_NO, DURATION AS USE_TIME, HISTORY_REG_DT, HISTORY_SEQ
										FROM CRM_CUST_IOT_HST
										WHERE ITG_CUST_NO IS NOT NULL
										<choose>
											<when test="searchDateType.equals('month')">
												<if test="strtDtM != null and strtDtM != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
												</if>
												<if test="endDtM != null and endDtM != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
												</if>
											</when>
											<otherwise>
												<if test="strtDtD != null and strtDtD != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
												</if>
												<if test="endDtD != null and endDtD != ''">
													AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
												</if>
											</otherwise>
										</choose>
										<if test="deviceCd != null and deviceCd != ''">
											<choose>
												<when test="deviceCd.equals('VM34')">
													AND MODEL = 'masterv4'
												</when>
												<otherwise>
													AND MODEL = 'masterv6'
												</otherwise>
											</choose>
										</if>
										<if test="modeCd != null and modeCd != ''">
											AND MODE1 = #{modeCd}
										</if>
									) hTB
									LEFT JOIN CRM_CUST_BAS cTB
									ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
									WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
								)
							) dTB
						)
					)
					GROUP BY CALC_AGE
				) rTB
				ON(lTB.CALC_AGE = rTB.CALC_AGE)
			)
			GROUP BY STATS_TITLE
		) tTB	
	</select>
	
	<select id="selectIotUseAgeModeStats" resultType="EzMap">
		WITH custTB AS
		(
			SELECT
				ITG_CUST_NO, CUST_NM, MD_CD, BIRTHDAY, AGE, 
				CASE WHEN CALC_AGE = -1 THEN 0
					 WHEN CALC_AGE <![CDATA[>=]]> 70 THEN 70
					 WHEN CALC_AGE <![CDATA[<=]]> 10 AND CALC_AGE >= 0 THEN 10
					 ELSE CALC_AGE
				END AS CALC_AGE
			FROM(
				SELECT
					dTB.*, 
					CASE WHEN AGE = -1 THEN -1
						 ELSE TRUNC(AGE/10)*10
					END AS CALC_AGE
				FROM(
					SELECT 
						ITG_CUST_NO, CUST_NM, MD_CD, BIRTHDAY, 
						NVL((TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTRB(BIRTHDAY, 0, 4))), -1) AS AGE
					FROM(
						SELECT
							hTB.ITG_CUST_NO, CUST_NM, MD_CD, BIRTHDAY, HISTORY_REG_DT
						FROM(
							SELECT
								ITG_CUST_NO, MODE1 AS MD_CD, HISTORY_REG_DT, HISTORY_SEQ
							FROM CRM_CUST_IOT_HST	--회원이 여러번 들어와서 사용한 횟수를 보기때문에 회원별로 그룹짓지 않는다.
							WHERE ITG_CUST_NO IS NOT NULL
							<choose>
								<when test="searchDateType.equals('month')">
									<if test="strtDtM != null and strtDtM != ''">
										AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
									</if>
									<if test="endDtM != null and endDtM != ''">
										AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
									</if>
								</when>
								<otherwise>
									<if test="strtDtD != null and strtDtD != ''">
										AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
									</if>
									<if test="endDtD != null and endDtD != ''">
										AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
									</if>
								</otherwise>
							</choose>
							<if test="deviceCd != null and deviceCd != ''">
								<choose>
									<when test="deviceCd.equals('VM34')">
										AND MODEL = 'masterv4'
									</when>
									<otherwise>
										AND MODEL = 'masterv6'
									</otherwise>
								</choose>
							</if>
							<if test="modeCd != null and modeCd != ''">
								AND MODE1 = #{modeCd}
							</if>
						) hTB
						LEFT JOIN CRM_CUST_BAS cTB
						ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
						WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
					)
				) dTB
			)
		)
		SELECT 
			MD_CD_NM AS STATS_TITLE
			,TO_CHAR(age10, '999,999,999') AS age10
			,TO_CHAR(age20, '999,999,999') AS age20
			,TO_CHAR(age30, '999,999,999') AS age30
			,TO_CHAR(age40, '999,999,999') AS age40
			,TO_CHAR(age50, '999,999,999') AS age50
			,TO_CHAR(age60, '999,999,999') AS age60
			,TO_CHAR(age70, '999,999,999') AS age70
			,TO_CHAR(age0, '999,999,999') AS age0
			,TO_CHAR((age10+age20+age30+age40+age50+age60+age70+age0), '999,999,999') AS TOTAL_CNT
		FROM(
			SELECT
				sTB.MD_CD, MD_NM, MD_CD_NM,
				NVL(TB10.MD_CD_CNT, 0) AS age10,
				NVL(TB20.MD_CD_CNT, 0) AS age20,
				NVL(TB30.MD_CD_CNT, 0) AS age30,
				NVL(TB40.MD_CD_CNT, 0) AS age40,
				NVL(TB50.MD_CD_CNT, 0) AS age50,
				NVL(TB60.MD_CD_CNT, 0) AS age60,
				NVL(TB70.MD_CD_CNT, 0) AS age70,
				NVL(TB0.MD_CD_CNT, 0) AS age0 
			FROM(
				SELECT 
					COMN_CD || ' (' || COMN_CD_NM || ')' AS MD_CD_NM,
					COMN_CD AS MD_CD, COMN_CD_NM AS MD_NM, COMN_CD_ODRG
				FROM CRM_COMN_CD_BAS
				WHERE TOP_COMN_CD = #{deviceCd}
				AND COMN_CD_LVL_NO = 2
			) sTB
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 10
				GROUP BY MD_CD
			) TB10
			ON(sTB.MD_CD = TB10.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 20
				GROUP BY MD_CD
			) TB20
			ON(sTB.MD_CD = TB20.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 30
				GROUP BY MD_CD
			) TB30
			ON(sTB.MD_CD = TB30.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 40
				GROUP BY MD_CD
			) TB40
			ON(sTB.MD_CD = TB40.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 50
				GROUP BY MD_CD
			) TB50
			ON(sTB.MD_CD = TB50.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 60
				GROUP BY MD_CD
			) TB60
			ON(sTB.MD_CD = TB60.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 70
				GROUP BY MD_CD
			) TB70
			ON(sTB.MD_CD = TB70.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE CALC_AGE = 0
				GROUP BY MD_CD
			) TB0
			ON(sTB.MD_CD = TB0.MD_CD)
			ORDER BY COMN_CD_ODRG
		)
	</select>
	
	<select id="selectIotUseGndrStats" resultType="EzMap">
		SELECT
			STATS_TITLE
			,TO_CHAR(gndrm, '999,999,999') AS gndrm
			,TO_CHAR(gndrf, '999,999,999') AS gndrf
			,TO_CHAR(gndrn, '999,999,999') AS gndrn
			,TO_CHAR((gndrm+gndrf+gndrn), '999,999,999') AS TOTAL_CNT
		FROM(
			SELECT
				STATS_TITLE
				,SUM(DECODE(GNDR, 'M', GNDR_CNT)) AS gndrm
				,SUM(DECODE(GNDR, 'F', GNDR_CNT)) AS gndrf
				,SUM(DECODE(GNDR, 'N', GNDR_CNT)) AS gndrn
			FROM(
				SELECT
					'IoT 사용 회원 수' AS STATS_TITLE, lTB.GNDR, NVL(GNDR_CNT, 0) AS GNDR_CNT
				FROM(
					SELECT 'M' AS GNDR FROM dual union
					SELECT 'F' AS GNDR FROM dual union
					SELECT 'N' AS GNDR FROM dual
				) lTB
				LEFT JOIN(
					SELECT 
						GNDR, COUNT(1) AS GNDR_CNT
					FROM(
						SELECT 
							ITG_CUST_NO, CUST_NM, GNDR_CD, 
							NVL(GNDR_CD, 'N') AS GNDR
						FROM(
							SELECT
								hTB.ITG_CUST_NO, CUST_NM, GNDR_CD
							FROM(
								SELECT
									ITG_CUST_NO
								FROM CRM_CUST_IOT_HST
								WHERE ITG_CUST_NO IS NOT NULL
								<choose>
									<when test="searchDateType.equals('month')">
										<if test="strtDtM != null and strtDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
										</if>
										<if test="endDtM != null and endDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
										</if>
									</when>
									<otherwise>
										<if test="strtDtD != null and strtDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
										</if>
										<if test="endDtD != null and endDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
										</if>
									</otherwise>
								</choose>
								<if test="deviceCd != null and deviceCd != ''">
									<choose>
										<when test="deviceCd.equals('VM34')">
											AND MODEL = 'masterv4'
										</when>
										<otherwise>
											AND MODEL = 'masterv6'
										</otherwise>
									</choose>
								</if>
								<if test="modeCd != null and modeCd != ''">
									AND MODE1 = #{modeCd}
								</if>
								GROUP BY ITG_CUST_NO
							) hTB
							LEFT JOIN CRM_CUST_BAS cTB
							ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
							WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
						)
					)
					GROUP BY GNDR
				) rTB
				ON(lTB.GNDR = rTB.GNDR)
			) 
			GROUP BY STATS_TITLE
		)
		UNION
		SELECT
			STATS_TITLE
			,FN_GET_DTMS(gndrm) AS gndrm
			,FN_GET_DTMS(gndrf) AS gndrf
			,FN_GET_DTMS(gndrn) AS gndrn
			,FN_GET_DTMS(gndrm+gndrf+gndrn) AS TOTAL_CNT
		FROM(
			SELECT
				STATS_TITLE
				,SUM(DECODE(GNDR, 'M', CALC_USE_TIME)) AS gndrm
				,SUM(DECODE(GNDR, 'F', CALC_USE_TIME)) AS gndrf
				,SUM(DECODE(GNDR, 'N', CALC_USE_TIME)) AS gndrn
			FROM(
				SELECT
					'IoT 사용시간 합계' AS STATS_TITLE, lTB.GNDR, NVL(CALC_USE_TIME, 0) AS CALC_USE_TIME
				FROM(
					SELECT 'M' AS GNDR FROM dual union
					SELECT 'F' AS GNDR FROM dual union
					SELECT 'N' AS GNDR FROM dual
				) lTB
				LEFT JOIN(
					SELECT 
						GNDR, SUM(USE_TIME) AS CALC_USE_TIME
					FROM(
						SELECT 
							ITG_CUST_NO, CUST_NM, USE_TIME, GNDR_CD, 
							NVL(GNDR_CD, 'N') AS GNDR
						FROM(
							SELECT
								hTB.ITG_CUST_NO, CUST_NM, USE_TIME, GNDR_CD, HISTORY_REG_DT
							FROM(
								SELECT
									ITG_CUST_NO, DURATION AS USE_TIME, HISTORY_REG_DT, HISTORY_SEQ
								FROM CRM_CUST_IOT_HST
								WHERE ITG_CUST_NO IS NOT NULL
								<choose>
									<when test="searchDateType.equals('month')">
										<if test="strtDtM != null and strtDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
										</if>
										<if test="endDtM != null and endDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
										</if>
									</when>
									<otherwise>
										<if test="strtDtD != null and strtDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
										</if>
										<if test="endDtD != null and endDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
										</if>
									</otherwise>
								</choose>
								<if test="deviceCd != null and deviceCd != ''">
									<choose>
										<when test="deviceCd.equals('VM34')">
											AND MODEL = 'masterv4'
										</when>
										<otherwise>
											AND MODEL = 'masterv6'
										</otherwise>
									</choose>
								</if>
								<if test="modeCd != null and modeCd != ''">
									AND MODE1 = #{modeCd}
								</if>
							) hTB
							LEFT JOIN CRM_CUST_BAS cTB
							ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
							WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
						)
					)
					GROUP BY GNDR
				) rTB
				ON(lTB.GNDR = rTB.GNDR)
			)
			GROUP BY STATS_TITLE
		)
	</select>
	
	<select id="selectIotUseGndrModeStats" resultType="EzMap">
		WITH custTB AS
		(
			SELECT 
				ITG_CUST_NO, CUST_NM, MD_CD, GNDR_CD
			FROM(
				SELECT
					hTB.ITG_CUST_NO, CUST_NM, 
					NVL(GNDR_CD, 'N') AS GNDR_CD,
					MD_CD, HISTORY_REG_DT
				FROM(
					SELECT
						ITG_CUST_NO, MODE1 AS MD_CD, HISTORY_REG_DT, HISTORY_SEQ
					FROM CRM_CUST_IOT_HST
					WHERE ITG_CUST_NO IS NOT NULL
					<choose>
						<when test="searchDateType.equals('month')">
							<if test="strtDtM != null and strtDtM != ''">
								AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
							</if>
							<if test="endDtM != null and endDtM != ''">
								AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
							</if>
						</when>
						<otherwise>
							<if test="strtDtD != null and strtDtD != ''">
								AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
							</if>
							<if test="endDtD != null and endDtD != ''">
								AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
							</if>
						</otherwise>
					</choose>
					<if test="deviceCd != null and deviceCd != ''">
						<choose>
							<when test="deviceCd.equals('VM34')">
								AND MODEL = 'masterv4'
							</when>
							<otherwise>
								AND MODEL = 'masterv6'
							</otherwise>
						</choose>
					</if>
					<if test="modeCd != null and modeCd != ''">
						AND MODE1 = #{modeCd}
					</if>
				) hTB
				LEFT JOIN CRM_CUST_BAS cTB
				ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
				WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
			)
		)
		SELECT 
			MD_CD_NM AS STATS_TITLE
			,TO_CHAR(gndrm, '999,999,999') AS gndrm
			,TO_CHAR(gndrf, '999,999,999') AS gndrf
			,TO_CHAR(gndrn, '999,999,999') AS gndrn
			,TO_CHAR((gndrm+gndrf+gndrn), '999,999,999') AS TOTAL_CNT
		FROM(
			SELECT
				sTB.MD_CD, MD_NM, MD_CD_NM,
				NVL(mTB.MD_CD_CNT, 0) AS gndrm,
				NVL(fTB.MD_CD_CNT, 0) AS gndrf,
				NVL(nTB.MD_CD_CNT, 0) AS gndrn
			FROM(
				SELECT 
					COMN_CD || ' (' || COMN_CD_NM || ')' AS MD_CD_NM,
					COMN_CD AS MD_CD, COMN_CD_NM AS MD_NM, COMN_CD_ODRG
				FROM CRM_COMN_CD_BAS
				WHERE TOP_COMN_CD = #{deviceCd}
				AND COMN_CD_LVL_NO = 2
			) sTB
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE GNDR_CD = 'M'
				GROUP BY MD_CD
			) mTB
			ON(sTB.MD_CD = mTB.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE GNDR_CD = 'F'
				GROUP BY MD_CD
			) fTB
			ON(sTB.MD_CD = fTB.MD_CD)
			LEFT JOIN(
				SELECT 
					MD_CD, COUNT(MD_CD) AS MD_CD_CNT
				FROM custTB
				WHERE GNDR_CD = 'N'
				GROUP BY MD_CD
			) nTB
			ON(sTB.MD_CD = nTB.MD_CD)
			ORDER BY COMN_CD_ODRG
		)
	</select>
	
	<select id="selectIotUseGradeStats" resultType="EzMap">
		SELECT 
			STATS_TITLE
			,TO_CHAR(grade1, '999,999,999') AS grade1
			,TO_CHAR(grade2, '999,999,999') AS grade2
			,TO_CHAR(grade3, '999,999,999') AS grade3
			,TO_CHAR(grade4, '999,999,999') AS grade4
			,TO_CHAR(grade5, '999,999,999') AS grade5
			,TO_CHAR(grade6, '999,999,999') AS grade6
			,TO_CHAR((grade2+grade3+grade4+grade5+grade6), '999,999,999') AS TOTAL_CNT
		FROM(
			SELECT
				STATS_TITLE
				,SUM(DECODE(MSHIP_GRADE, '001', MSHIP_GRADE_CNT)) AS grade1
				,SUM(DECODE(MSHIP_GRADE, '002', MSHIP_GRADE_CNT)) AS grade2
				,SUM(DECODE(MSHIP_GRADE, '003', MSHIP_GRADE_CNT)) AS grade3
				,SUM(DECODE(MSHIP_GRADE, '004', MSHIP_GRADE_CNT)) AS grade4
				,SUM(DECODE(MSHIP_GRADE, '005', MSHIP_GRADE_CNT)) AS grade5
				,SUM(DECODE(MSHIP_GRADE, '006', MSHIP_GRADE_CNT)) AS grade6
			FROM(
				SELECT
					'IoT 사용 회원 수' AS STATS_TITLE, lTB.MSHIP_GRADE, NVL(MSHIP_GRADE_CNT, 0) AS MSHIP_GRADE_CNT
				FROM(
					SELECT 
						COMN_CD AS MSHIP_GRADE, COMN_CD_NM AS MSHIP_GRADE_NM
					FROM CRM_COMN_CD_BAS
					WHERE TOP_COMN_CD = 'MB020' 
					AND COMN_CD_LVL_NO = 2
				) lTB
				LEFT JOIN(
					SELECT 
						MSHIP_GRADE, COUNT(1) AS MSHIP_GRADE_CNT
					FROM(
						SELECT 
							ITG_CUST_NO, CUST_NM, MSHIP_GRADE_CD, 
							NVL(MSHIP_GRADE_CD, '001') AS MSHIP_GRADE
						FROM(
							SELECT
								hTB.ITG_CUST_NO, CUST_NM, MSHIP_GRADE_CD
							FROM(
								SELECT
									ITG_CUST_NO
								FROM CRM_CUST_IOT_HST
								WHERE ITG_CUST_NO IS NOT NULL
								<choose>
									<when test="searchDateType.equals('month')">
										<if test="strtDtM != null and strtDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
										</if>
										<if test="endDtM != null and endDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
										</if>
									</when>
									<otherwise>
										<if test="strtDtD != null and strtDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
										</if>
										<if test="endDtD != null and endDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
										</if>
									</otherwise>
								</choose>
								<if test="deviceCd != null and deviceCd != ''">
									<choose>
										<when test="deviceCd.equals('VM34')">
											AND MODEL = 'masterv4'
										</when>
										<otherwise>
											AND MODEL = 'masterv6'
										</otherwise>
									</choose>
								</if>
								<if test="modeCd != null and modeCd != ''">
									AND MODE1 = #{modeCd}
								</if>
								GROUP BY ITG_CUST_NO
							) hTB
							LEFT JOIN CRM_CUST_BAS cTB
							ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
							WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
						)
					)
					GROUP BY MSHIP_GRADE
				) rTB
				ON(lTB.MSHIP_GRADE = rTB.MSHIP_GRADE)
			) 
			GROUP BY STATS_TITLE
		)
		UNION
		SELECT
			STATS_TITLE
			,FN_GET_DTMS(grade1) AS grade1
			,FN_GET_DTMS(grade2) AS grade2
			,FN_GET_DTMS(grade3) AS grade3
			,FN_GET_DTMS(grade4) AS grade4
			,FN_GET_DTMS(grade5) AS grade5
			,FN_GET_DTMS(grade6) AS grade6
			,FN_GET_DTMS(grade2+grade3+grade4+grade5+grade6) AS TOTAL_CNT
		FROM(
			SELECT
				STATS_TITLE
				,SUM(DECODE(MSHIP_GRADE, '001', CALC_USE_TIME)) AS grade1
				,SUM(DECODE(MSHIP_GRADE, '002', CALC_USE_TIME)) AS grade2
				,SUM(DECODE(MSHIP_GRADE, '003', CALC_USE_TIME)) AS grade3
				,SUM(DECODE(MSHIP_GRADE, '004', CALC_USE_TIME)) AS grade4
				,SUM(DECODE(MSHIP_GRADE, '005', CALC_USE_TIME)) AS grade5
				,SUM(DECODE(MSHIP_GRADE, '006', CALC_USE_TIME)) AS grade6
			FROM(
				SELECT
					'IoT 사용시간 합계' AS STATS_TITLE, lTB.MSHIP_GRADE, NVL(CALC_USE_TIME, 0) AS CALC_USE_TIME
				FROM(
					SELECT 
						COMN_CD AS MSHIP_GRADE, COMN_CD_NM AS MSHIP_GRADE_NM
					FROM CRM_COMN_CD_BAS
					WHERE TOP_COMN_CD = 'MB020' 
					AND COMN_CD_LVL_NO = 2
				) lTB
				LEFT JOIN(
					SELECT 
						MSHIP_GRADE, SUM(USE_TIME) AS CALC_USE_TIME
					FROM(
						SELECT 
							ITG_CUST_NO, CUST_NM, USE_TIME, MSHIP_GRADE_CD, 
							NVL(MSHIP_GRADE_CD, '001') AS MSHIP_GRADE
						FROM(
							SELECT
								hTB.ITG_CUST_NO, CUST_NM, USE_TIME, MSHIP_GRADE_CD, HISTORY_REG_DT
							FROM(
								SELECT
									ITG_CUST_NO, DURATION AS USE_TIME, HISTORY_REG_DT, HISTORY_SEQ
								FROM CRM_CUST_IOT_HST
								WHERE ITG_CUST_NO IS NOT NULL
								<choose>
									<when test="searchDateType.equals('month')">
										<if test="strtDtM != null and strtDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[>=]]> #{strtDtM}
										</if>
										<if test="endDtM != null and endDtM != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMM') <![CDATA[<=]]> #{endDtM}
										</if>
									</when>
									<otherwise>
										<if test="strtDtD != null and strtDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[>=]]> #{strtDtD}
										</if>
										<if test="endDtD != null and endDtD != ''">
											AND TO_CHAR(HISTORY_REG_DT, 'YYYYMMDD') <![CDATA[<=]]> #{endDtD}
										</if>
									</otherwise>
								</choose>
								<if test="deviceCd != null and deviceCd != ''">
									<choose>
										<when test="deviceCd.equals('VM34')">
											AND MODEL = 'masterv4'
										</when>
										<otherwise>
											AND MODEL = 'masterv6'
										</otherwise>
									</choose>
								</if>
								<if test="modeCd != null and modeCd != ''">
									AND MODE1 = #{modeCd}
								</if>
							) hTB
							LEFT JOIN CRM_CUST_BAS cTB
							ON(hTB.ITG_CUST_NO = cTB.ITG_CUST_NO)
							WHERE MSHIP_GRADE_CD IS NOT NULL AND MSHIP_GRADE_CD != '001'
						)
					)
					GROUP BY MSHIP_GRADE
				) rTB
				ON(lTB.MSHIP_GRADE = rTB.MSHIP_GRADE)
			)
			GROUP BY STATS_TITLE
		)
	</select>
	
	<select id="getExperienceStatList" resultType="com.ceragem.crm.cst.model.CusStatVo">
    /* com.ceragem.crm.cst.dao.CusStatDao.getExperienceStatList */
     <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingHeader"/>
               SELECT 
					  A.EXPRN_DATE
					, A.REG_DT
					, A.STOR_CD AS STOR_NM
					, A.STOR_CD
					, A.ITEM_NM
					, CASE WHEN B.MSHIP_GRADE_CD = '001' THEN '비회원'
					                        ELSE '회원'
					                    END MSHIP_GRADE_CD
					, B.ITG_CUST_NO
					, CASE WHEN B.GNDR_CD = 'M' THEN '남'
					                        WHEN B.GNDR_CD = 'F' THEN '여'
					                        ELSE '성별 없음'
					                    END GNDR_CD
					, A.AGE_CD_NM
					, CASE WHEN A.EXPRN_CMPT_YN = '1' THEN 'Y'
					                        WHEN A.EXPRN_CMPT_YN = '0' THEN 'N'
					                        ELSE '정보 없음'
					                    END EXPRN_CMPT_YN
					
					FROM CRM_CUST_EXPRN_HST A, CRM_CUST_BAS B
					WHERE A.ITG_CUST_NO = B.ITG_CUST_NO
         	<choose>
            	<when test="searchDiv.equals('day')">
					AND A.EXPRN_DATE BETWEEN #{strtDtD} AND #{endDtD}
				</when>
                <when test="searchDiv.equals('month')">
                    AND A.EXPRN_DATE BETWEEN #{strtDtM} || '01'  AND  #{endDtM} || '31'
                </when>
            </choose>
                    ORDER BY A.EXPRN_DATE DESC
             <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingFooter"/>
    </select>
    
    <select id="getExperienceStatListCount" resultType="int">
                SELECT COUNT(1) CNT
                  FROM CRM_CUST_EXPRN_HST A, CRM_CUST_BAS B
                 WHERE A.ITG_CUST_NO = B.ITG_CUST_NO
           <choose>
                <when test="searchDiv.equals('day')">
                    AND A.EXPRN_DATE BETWEEN #{strtDtD} AND #{endDtD}
                </when>
                <when test="searchDiv.equals('month')">
                    AND A.EXPRN_DATE BETWEEN #{strtDtM} || '01'  AND  #{endDtM} || '31'
                </when>
            </choose>
    </select>
</mapper>

