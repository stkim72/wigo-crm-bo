<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceragem.crm.mem.dao.ProductHomeDao">
    <sql id="sqlPkConditions">
                WHERE GODS_NO           =       #{godsNo}
    </sql>
    <sql id="sqlCols">
                      GODS_NO                    /*제품번호        */
                    , GODS_NM                    /*제품명        */
                    , GODS_CLASS_CD                    /*제품분류코드        */
                    , CNSR_AMT                    /*소비자금액        */
                    , USE_YN                    /*사용여부        */
                    , AMDR_ID                    /*수정자ID        */
                    , AMD_DT                    /*수정일시        */
                    , REGR_ID                    /*등록자ID        */
                    , REG_DT                    /*등록일시        */
                    , GODS_GRP_CD                    /*GODS_GRP_CD        */
    </sql>
    <sql id="sqlSelectCols">
                      A.GODS_NO                    /*제품번호        */
                    , A.GODS_NM                    /*제품명        */
                    , A.GODS_CLASS_CD                    /*제품분류코드        */
                    , A.CNSR_AMT                    /*소비자금액        */
                    , A.USE_YN                    /*사용여부        */
                    , A.AMDR_ID                    /*수정자ID        */
                    , TO_CHAR(A.AMD_DT,'YYYYMMDDHH24MISS')    AMD_DT                    /*수정일시        */
                    , A.REGR_ID                    /*등록자ID        */
                    , TO_CHAR(A.REG_DT,'YYYYMMDDHH24MISS')    REG_DT                    /*등록일시        */
                    , A.GODS_GRP_CD                    /*GODS_GRP_CD        */
    </sql>
    <sql id="sqlConditions">
        <where>
        <if test="godsNo != null and godsNo != ''">
                  AND A.GODS_NO         =       #{godsNo}
        </if>
        <if test="godsNm != null and godsNm != ''">
                  AND A.GODS_NM         =       #{godsNm}
        </if>
        <if test="godsClassCd != null and godsClassCd != ''">
            <choose>
                <when test="godsClassCd instanceof String">
                    <!-- AND A.GODS_CLASS_CD   =       #{godsClassCd} -->
                    AND SUBSTR(A.GODS_CLASS_CD,1,6)   =       #{godsClassCd}
                </when>
                <otherwise>
                    <!-- AND A.GODS_CLASS_CD   IN -->
                    AND SUBSTR(A.GODS_CLASS_CD,1,6) IN
                    <foreach item="item" index="index" collection="godsClassCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="cnsrAmt != null and cnsrAmt != ''">
                  AND A.CNSR_AMT        =       #{cnsrAmt}
        </if>
        <if test="productUseYn != null and productUseYn != ''">
                  AND A.USE_YN          =       #{productUseYn}
        </if>
        <if test="godsGrpCd != null and godsGrpCd != ''">
            <choose>
                <when test="godsGrpCd instanceof String">
                    AND A.GODS_GRP_CD     =       #{godsGrpCd}
                </when>
                <otherwise>
                    AND A.GODS_GRP_CD     IN
                    <foreach item="item" index="index" collection="godsGrpCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        </where>
    </sql>
    <sql id="sqlOrderBy">
        <choose>
            <when test="colSortName ==null or colSortName == ''">
                ORDER BY      REG_DT DESC
            </when>
            <when test="colSortName.equals('godsNo')">
                ORDER BY      GODS_NO
            </when>
            <when test="colSortName.equals('godsNm')">
                ORDER BY      GODS_NM
            </when>
            <when test="colSortName.equals('godsClassCd')">
                ORDER BY      GODS_CLASS_CD
            </when>
            <when test="colSortName.equals('cnsrAmt')">
                ORDER BY      CNSR_AMT
            </when>
            <when test="colSortName.equals('useYn')">
                ORDER BY      USE_YN
            </when>
            <when test="colSortName.equals('amdrId')">
                ORDER BY      AMDR_ID
            </when>
            <when test="colSortName.equals('amdDt')">
                ORDER BY      AMD_DT
            </when>
            <when test="colSortName.equals('regrId')">
                ORDER BY      REGR_ID
            </when>
            <when test="colSortName.equals('regDt')">
                ORDER BY      REG_DT
            </when>
            <when test="colSortName.equals('godsGrpCd')">
                ORDER BY      GODS_GRP_CD
            </when>
            <otherwise>
                ORDER BY      REG_DT
            </otherwise>
        </choose>
        <if test="colSortName !=null and colSortDir !='' and colSortDir !=null and colSortDir !='' and colSortDir.equals('desc')">
            DESC
        </if>
    </sql>
    <select id="selectListCount" resultType="int">
                SELECT /* com.ceragem.crm.mem.dao.ProductHomeDao.selectListCount */ COUNT(1)
                 FROM CRM_GODS_BAS A
        <include refid="sqlConditions"/>
    </select>
    <select id="selectList" resultType="com.ceragem.crm.mem.model.ProductHomeVo">
        <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingHeader"/>
               SELECT /* com.ceragem.crm.mem.dao.ProductHomeDao.selectList */ <include refid="sqlSelectCols"/>
                 FROM CRM_GODS_BAS A
        <include refid="sqlConditions"/>
        <include refid="sqlOrderBy"/>
        <include refid="com.ceragem.crm.sys.dao.CrmCommonDao.pagingFooter"/>
    </select>
    <select id="select" resultType="com.ceragem.crm.mem.model.ProductHomeVo">
               SELECT /* com.ceragem.crm.mem.dao.ProductHomeDao.select */ <include refid="sqlSelectCols"/>
                 FROM CRM_GODS_BAS A
        <include refid="sqlPkConditions"/>
    </select>
    <insert id="insert">
                INSERT /* com.ceragem.crm.mem.dao.ProductHomeDao.insert */ INTO CRM_GODS_BAS (
        <include refid="sqlCols"/>
                 ) VALUES (
                       #{godsNo}
                     , #{godsNm}
                     , #{godsClassCd}
                     , #{cnsrAmt}
                     , NVL(#{useYn},'N')
                     , #{amdrId}
                     , SYSDATE
                     , #{regrId}
                     , SYSDATE
                     , #{godsGrpCd}
                 )
    </insert>
    <update id="update">
               UPDATE /* com.ceragem.crm.mem.dao.ProductHomeDao.update */ CRM_GODS_BAS
                  SET GODS_NM                                 =         #{godsNm}
                    , GODS_CLASS_CD                           =         #{godsClassCd}
                    , CNSR_AMT                                =         #{cnsrAmt}
                    , USE_YN                                  =         NVL(#{useYn},'N')
                    , AMDR_ID                                 =         #{amdrId}
                    , AMD_DT                                  =         SYSDATE
                    , GODS_GRP_CD                             =         #{godsGrpCd}
        <include refid="sqlPkConditions"/>
    </update>
    <delete id="delete">
               DELETE /* com.ceragem.crm.mem.dao.ProductHomeDao.delete */
                 FROM CRM_GODS_BAS
        <include refid="sqlPkConditions"/>
    </delete>
</mapper>
